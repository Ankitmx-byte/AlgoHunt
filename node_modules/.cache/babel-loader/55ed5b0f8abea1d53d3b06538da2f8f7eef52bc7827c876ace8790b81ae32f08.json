{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\pages\\\\CodingBattle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './CodingBattle.css';\nimport { useParams, useNavigate } from 'react-router-dom';\n// Temporarily use a textarea instead of Monaco Editor\n// import Editor from '@monaco-editor/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodingBattle({\n  isDemoMode = false\n}) {\n  _s();\n  const {\n    battleId\n  } = useParams();\n  const navigate = useNavigate();\n  const editorRef = useRef(null);\n\n  // State for battle\n  const [battleState, setBattleState] = useState({\n    status: 'waiting',\n    // waiting, active, completed\n    problem: null,\n    opponent: null,\n    userCode: '',\n    userProgress: 0,\n    opponentProgress: 0,\n    winner: null,\n    timeRemaining: 1800 // 30 minutes in seconds\n  });\n\n  // State for UI\n  const [currentView, setCurrentView] = useState(isDemoMode ? 'battle' : 'matchmaking');\n  const [selectedLanguage, setSelectedLanguage] = useState('javascript');\n  const [selectedDifficulty, setSelectedDifficulty] = useState('medium');\n  const [selectedCategory, setSelectedCategory] = useState('algorithms');\n  const [showMatchmakingModal, setShowMatchmakingModal] = useState(!isDemoMode);\n  const [showHint, setShowHint] = useState(false);\n  const [showAiInsights, setShowAiInsights] = useState(false);\n  const [testCases, setTestCases] = useState([]);\n  const [testResults, setTestResults] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Editor themes\n  const editorThemes = {\n    javascript: 'vs-dark',\n    python: 'vs-dark',\n    java: 'vs-dark',\n    cpp: 'vs-dark',\n    csharp: 'vs-dark'\n  };\n\n  // Get default starter code for selected language\n  const getDefaultStarterCode = language => {\n    if (!language) return '';\n    const defaultCode = {\n      javascript: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nfunction twoSum(nums, target) {\\n  // Your code here\\n}\",\n      python: \"def two_sum(nums, target):\\n    # Your code here\\n    pass\",\n      java: \"class Solution {\\n    public int[] twoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\",\n      cpp: \"#include <vector>\\n\\nclass Solution {\\npublic:\\n    std::vector<int> twoSum(std::vector<int>& nums, int target) {\\n        // Your code here\\n        return {0, 0};\\n    }\\n};\",\n      csharp: \"public class Solution {\\n    public int[] TwoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\"\n    };\n    return defaultCode[language] || '';\n  };\n\n  // Initialize battle or demo mode\n  useEffect(() => {\n    console.log(\"CodingBattle component mounted, isDemoMode:\", isDemoMode);\n    if (isDemoMode) {\n      console.log(\"Starting demo mode automatically\");\n      startDemoMode();\n    } else if (battleId) {\n      // Fetch battle details from API\n      fetchBattleDetails(battleId);\n    }\n\n    // Cleanup timer on unmount\n    return () => {\n      if (timerInterval) {\n        clearInterval(timerInterval);\n      }\n    };\n  }, [isDemoMode, battleId]);\n\n  // Timer for countdown\n  let timerInterval = null;\n  const startTimer = () => {\n    timerInterval = setInterval(() => {\n      setBattleState(prev => {\n        if (prev.timeRemaining <= 0) {\n          clearInterval(timerInterval);\n          return {\n            ...prev,\n            status: 'completed'\n          };\n        }\n        return {\n          ...prev,\n          timeRemaining: prev.timeRemaining - 1\n        };\n      });\n    }, 1000);\n  };\n\n  // Fetch battle details from API\n  const fetchBattleDetails = id => {\n    // Simulate API call\n    setTimeout(() => {\n      // Mock battle data\n      setBattleState({\n        status: 'active',\n        problem: {\n          id: 1,\n          title: \"Two Sum\",\n          description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\\n\\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\\n\\nYou can return the answer in any order.\",\n          difficulty: 'medium',\n          category: 'algorithms',\n          starterCode: {\n            javascript: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nfunction twoSum(nums, target) {\\n  // Your code here\\n}\",\n            python: \"def two_sum(nums, target):\\n    # Your code here\\n    pass\",\n            java: \"class Solution {\\n    public int[] twoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\",\n            cpp: \"#include <vector>\\n\\nclass Solution {\\npublic:\\n    std::vector<int> twoSum(std::vector<int>& nums, int target) {\\n        // Your code here\\n        return {0, 0};\\n    }\\n};\",\n            csharp: \"public class Solution {\\n    public int[] TwoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\"\n          }\n        },\n        opponent: {\n          name: \"JohnDoe123\",\n          rating: 1750,\n          winRate: \"68%\",\n          preferredLanguage: \"JavaScript\",\n          skillLevel: \"Intermediate\",\n          avatar: \"https://randomuser.me/api/portraits/men/32.jpg\"\n        },\n        userCode: getDefaultStarterCode(selectedLanguage),\n        userProgress: 0,\n        opponentProgress: 0,\n        winner: null,\n        timeRemaining: 1800\n      });\n      setTestCases([{\n        id: 1,\n        input: \"[2, 7, 11, 15], 9\",\n        expectedOutput: \"[0,1]\"\n      }, {\n        id: 2,\n        input: \"[3, 2, 4], 6\",\n        expectedOutput: \"[1,2]\"\n      }, {\n        id: 3,\n        input: \"[3, 3], 6\",\n        expectedOutput: \"[0,1]\"\n      }]);\n      setCurrentView('battle');\n      startTimer();\n    }, 1000);\n  };\n\n  // Start matchmaking\n  const startMatchmaking = () => {\n    console.log(\"Starting matchmaking...\");\n    setShowMatchmakingModal(false);\n\n    // Simulate matchmaking\n    setTimeout(() => {\n      fetchBattleDetails('random-battle-id');\n    }, 2000);\n  };\n\n  // Start demo mode with AI opponent\n  const startDemoMode = () => {\n    console.log(\"Starting Practice Mode...\");\n\n    // Hide matchmaking modal if open\n    setShowMatchmakingModal(false);\n\n    // Set current view to battle\n    setCurrentView('battle');\n\n    // Initialize a demo battle with a sample problem\n    setBattleState({\n      status: 'active',\n      problem: {\n        id: 1,\n        title: \"Two Sum\",\n        description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\\n\\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\\n\\nYou can return the answer in any order.\",\n        difficulty: selectedDifficulty || 'medium',\n        category: selectedCategory || 'algorithms',\n        starterCode: {\n          javascript: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nfunction twoSum(nums, target) {\\n  // Your code here\\n}\",\n          python: \"def two_sum(nums, target):\\n    # Your code here\\n    pass\",\n          java: \"class Solution {\\n    public int[] twoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\",\n          cpp: \"#include <vector>\\n\\nclass Solution {\\npublic:\\n    std::vector<int> twoSum(std::vector<int>& nums, int target) {\\n        // Your code here\\n        return {0, 0};\\n    }\\n};\",\n          csharp: \"public class Solution {\\n    public int[] TwoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\"\n        }\n      },\n      opponent: {\n        name: \"AI Opponent\",\n        rating: 1800,\n        winRate: \"75%\",\n        preferredLanguage: \"Python\",\n        skillLevel: \"Adaptive\",\n        avatar: \"https://randomuser.me/api/portraits/lego/1.jpg\"\n      },\n      userCode: getDefaultStarterCode(selectedLanguage || 'javascript'),\n      userProgress: 0,\n      opponentProgress: 0,\n      winner: null,\n      timeRemaining: 1800\n    });\n\n    // Set demo test cases\n    setTestCases([{\n      id: 1,\n      input: \"[2, 7, 11, 15], 9\",\n      expectedOutput: \"[0,1]\"\n    }, {\n      id: 2,\n      input: \"[3, 2, 4], 6\",\n      expectedOutput: \"[1,2]\"\n    }, {\n      id: 3,\n      input: \"[3, 3], 6\",\n      expectedOutput: \"[0,1]\"\n    }]);\n\n    // Start timer\n    startTimer();\n\n    // Simulate AI opponent progress updates\n    startAIOpponentSimulation();\n  };\n\n  // Simulate AI opponent progress\n  const startAIOpponentSimulation = () => {\n    const progressInterval = setInterval(() => {\n      setBattleState(prev => {\n        const newProgress = Math.min(prev.opponentProgress + Math.random() * 5, 100);\n\n        // If AI reaches 100%, they win\n        if (newProgress >= 100 && prev.userProgress < 100) {\n          clearInterval(progressInterval);\n          return {\n            ...prev,\n            opponentProgress: 100,\n            status: 'completed',\n            winner: 'opponent'\n          };\n        }\n        return {\n          ...prev,\n          opponentProgress: newProgress\n        };\n      });\n    }, 3000);\n\n    // Clean up interval after 5 minutes (simulating max battle time)\n    setTimeout(() => {\n      clearInterval(progressInterval);\n    }, 300000);\n  };\n\n  // Handle editor mount\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n  };\n\n  // Handle editor change\n  const handleEditorChange = value => {\n    setBattleState(prev => ({\n      ...prev,\n      userCode: value\n    }));\n  };\n\n  // Submit code for testing\n  const submitCode = () => {\n    setIsSubmitting(true);\n\n    // Simulate code execution\n    setTimeout(() => {\n      // Mock test results\n      const results = testCases.map(testCase => {\n        const passed = Math.random() > 0.3; // 70% chance to pass each test\n        return {\n          id: testCase.id,\n          input: testCase.input,\n          expectedOutput: testCase.expectedOutput,\n          actualOutput: passed ? testCase.expectedOutput : \"[1,0]\",\n          passed\n        };\n      });\n      setTestResults(results);\n\n      // Calculate progress based on passing tests\n      const passedCount = results.filter(r => r.passed).length;\n      const progress = passedCount / testCases.length * 100;\n      setBattleState(prev => {\n        const newState = {\n          ...prev,\n          userProgress: progress\n        };\n\n        // Check if user won\n        if (progress >= 100 && prev.opponentProgress < 100) {\n          newState.status = 'completed';\n          newState.winner = 'user';\n        }\n        return newState;\n      });\n      setIsSubmitting(false);\n    }, 2000);\n  };\n\n  // Format time remaining\n  const formatTimeRemaining = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  };\n\n  // Render matchmaking view\n  const renderMatchmakingView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matchmaking-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find a Coding Battle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchmaking-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Programming Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedLanguage,\n          onChange: e => setSelectedLanguage(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"javascript\",\n            children: \"JavaScript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"python\",\n            children: \"Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"java\",\n            children: \"Java\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cpp\",\n            children: \"C++\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"csharp\",\n            children: \"C#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDifficulty,\n          onChange: e => setSelectedDifficulty(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCategory,\n          onChange: e => setSelectedCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"algorithms\",\n            children: \"Algorithms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"data-structures\",\n            children: \"Data Structures\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dynamic-programming\",\n            children: \"Dynamic Programming\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"string-manipulation\",\n            children: \"String Manipulation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchmaking-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"find-match-button\",\n        onClick: startMatchmaking,\n        children: \"Find Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"practice-button\",\n        onClick: startDemoMode,\n        children: \"Practice Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n\n  // Render battle interface\n  const renderBattleInterface = () => {\n    var _battleState$problem, _battleState$problem2, _battleState$problem3, _battleState$problem4, _battleState$opponent, _battleState$problem5;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: ((_battleState$problem = battleState.problem) === null || _battleState$problem === void 0 ? void 0 : _battleState$problem.title) || 'Loading problem...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `difficulty ${(_battleState$problem2 = battleState.problem) === null || _battleState$problem2 === void 0 ? void 0 : _battleState$problem2.difficulty}`,\n              children: (_battleState$problem3 = battleState.problem) === null || _battleState$problem3 === void 0 ? void 0 : _battleState$problem3.difficulty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category\",\n              children: (_battleState$problem4 = battleState.problem) === null || _battleState$problem4 === void 0 ? void 0 : _battleState$problem4.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-timer\",\n          children: [\"Time: \", formatTimeRemaining(battleState.timeRemaining)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-status\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-progress\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-label\",\n                children: \"You\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-fill\",\n                  style: {\n                    width: `${battleState.userProgress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-percent\",\n                children: [Math.round(battleState.userProgress), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"opponent-progress\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-label\",\n                children: (_battleState$opponent = battleState.opponent) === null || _battleState$opponent === void 0 ? void 0 : _battleState$opponent.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-fill\",\n                  style: {\n                    width: `${battleState.opponentProgress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-percent\",\n                children: [Math.round(battleState.opponentProgress), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-description\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Problem Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (_battleState$problem5 = battleState.problem) === null || _battleState$problem5 === void 0 ? void 0 : _battleState$problem5.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-cases\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Test Cases\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"test-cases-list\",\n              children: testCases.map(testCase => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"test-case\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"test-case-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Input:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 21\n                  }, this), \" \", testCase.input]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"test-case-output\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Expected Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 21\n                  }, this), \" \", testCase.expectedOutput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this)]\n              }, testCase.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 11\n          }, this), testResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Test Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"test-results-list\",\n              children: testResults.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `test-result ${result.passed ? 'passed' : 'failed'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"test-result-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Test Case #\", result.id]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"test-status\",\n                    children: result.passed ? 'Passed' : 'Failed'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this), !result.passed && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"test-result-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Input:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 468,\n                      columnNumber: 30\n                    }, this), \" \", result.input]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Expected:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 30\n                    }, this), \" \", result.expectedOutput]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Actual:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 30\n                    }, this), \" \", result.actualOutput]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 23\n                }, this)]\n              }, result.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-container\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"code-textarea\",\n              value: battleState.userCode,\n              onChange: e => handleEditorChange(e.target.value),\n              style: {\n                width: '100%',\n                height: '100%',\n                fontFamily: 'monospace',\n                padding: '10px',\n                fontSize: '14px',\n                backgroundColor: '#1e1e1e',\n                color: '#d4d4d4',\n                border: 'none',\n                resize: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"run-button\",\n              onClick: submitCode,\n              disabled: isSubmitting,\n              children: isSubmitting ? \"Running...\" : \"Run Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"hint-button\",\n              onClick: () => setShowHint(true),\n              children: \"Show Hint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"insights-button\",\n              onClick: () => setShowAiInsights(true),\n              children: \"Show AI Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 7\n      }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Consider using a hash map to store the numbers you've seen so far. For each number, check if its complement (target - num) exists in the hash map.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-modal\",\n            onClick: () => setShowHint(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), showAiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"AI Insights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The Two Sum problem is a classic example where using a hash map can reduce the time complexity from O(n\\xB2) to O(n).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Instead of using nested loops to check every pair, you can use a single pass through the array, storing each number and its index in a hash map.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-modal\",\n            onClick: () => setShowAiInsights(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), battleState.status === 'completed' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content battle-result\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: battleState.winner === 'user' ? 'Victory!' : 'Better luck next time!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: battleState.winner === 'user' ? 'Congratulations! You completed the challenge faster than your opponent.' : 'Your opponent completed the challenge first. Keep practicing!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Your Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [Math.round(battleState.userProgress), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Opponent Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [Math.round(battleState.opponentProgress), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate('/battles'),\n              children: \"Back to Battles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => window.location.reload(),\n              children: \"Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coding-battle-container\",\n    children: [currentView === 'matchmaking' && renderMatchmakingView(), currentView === 'battle' && renderBattleInterface()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 553,\n    columnNumber: 5\n  }, this);\n}\n_s(CodingBattle, \"k+0vsfyW/aYI9tV6Aigx3iiMPSM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CodingBattle;\nexport default CodingBattle;\nvar _c;\n$RefreshReg$(_c, \"CodingBattle\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","jsxDEV","_jsxDEV","CodingBattle","isDemoMode","_s","battleId","navigate","editorRef","battleState","setBattleState","status","problem","opponent","userCode","userProgress","opponentProgress","winner","timeRemaining","currentView","setCurrentView","selectedLanguage","setSelectedLanguage","selectedDifficulty","setSelectedDifficulty","selectedCategory","setSelectedCategory","showMatchmakingModal","setShowMatchmakingModal","showHint","setShowHint","showAiInsights","setShowAiInsights","testCases","setTestCases","testResults","setTestResults","isSubmitting","setIsSubmitting","editorThemes","javascript","python","java","cpp","csharp","getDefaultStarterCode","language","defaultCode","console","log","startDemoMode","fetchBattleDetails","timerInterval","clearInterval","startTimer","setInterval","prev","id","setTimeout","title","description","difficulty","category","starterCode","name","rating","winRate","preferredLanguage","skillLevel","avatar","input","expectedOutput","startMatchmaking","startAIOpponentSimulation","progressInterval","newProgress","Math","min","random","handleEditorDidMount","editor","monaco","current","handleEditorChange","value","submitCode","results","map","testCase","passed","actualOutput","passedCount","filter","r","length","progress","newState","formatTimeRemaining","seconds","minutes","floor","remainingSeconds","renderMatchmakingView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","onClick","renderBattleInterface","_battleState$problem","_battleState$problem2","_battleState$problem3","_battleState$problem4","_battleState$opponent","_battleState$problem5","style","width","round","result","height","fontFamily","padding","fontSize","backgroundColor","color","border","resize","disabled","window","location","reload","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/pages/CodingBattle.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './CodingBattle.css';\nimport { useParams, useNavigate } from 'react-router-dom';\n// Temporarily use a textarea instead of Monaco Editor\n// import Editor from '@monaco-editor/react';\n\nfunction CodingBattle({ isDemoMode = false }) {\n  const { battleId } = useParams();\n  const navigate = useNavigate();\n  const editorRef = useRef(null);\n  \n  // State for battle\n  const [battleState, setBattleState] = useState({\n    status: 'waiting', // waiting, active, completed\n    problem: null,\n    opponent: null,\n    userCode: '',\n    userProgress: 0,\n    opponentProgress: 0,\n    winner: null,\n    timeRemaining: 1800 // 30 minutes in seconds\n  });\n  \n  // State for UI\n  const [currentView, setCurrentView] = useState(isDemoMode ? 'battle' : 'matchmaking');\n  const [selectedLanguage, setSelectedLanguage] = useState('javascript');\n  const [selectedDifficulty, setSelectedDifficulty] = useState('medium');\n  const [selectedCategory, setSelectedCategory] = useState('algorithms');\n  const [showMatchmakingModal, setShowMatchmakingModal] = useState(!isDemoMode);\n  const [showHint, setShowHint] = useState(false);\n  const [showAiInsights, setShowAiInsights] = useState(false);\n  const [testCases, setTestCases] = useState([]);\n  const [testResults, setTestResults] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  // Editor themes\n  const editorThemes = {\n    javascript: 'vs-dark',\n    python: 'vs-dark',\n    java: 'vs-dark',\n    cpp: 'vs-dark',\n    csharp: 'vs-dark'\n  };\n  \n  // Get default starter code for selected language\n  const getDefaultStarterCode = (language) => {\n    if (!language) return '';\n    \n    const defaultCode = {\n      javascript: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nfunction twoSum(nums, target) {\\n  // Your code here\\n}\",\n      python: \"def two_sum(nums, target):\\n    # Your code here\\n    pass\",\n      java: \"class Solution {\\n    public int[] twoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\",\n      cpp: \"#include <vector>\\n\\nclass Solution {\\npublic:\\n    std::vector<int> twoSum(std::vector<int>& nums, int target) {\\n        // Your code here\\n        return {0, 0};\\n    }\\n};\",\n      csharp: \"public class Solution {\\n    public int[] TwoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\"\n    };\n    \n    return defaultCode[language] || '';\n  };\n  \n  // Initialize battle or demo mode\n  useEffect(() => {\n    console.log(\"CodingBattle component mounted, isDemoMode:\", isDemoMode);\n    \n    if (isDemoMode) {\n      console.log(\"Starting demo mode automatically\");\n      startDemoMode();\n    } else if (battleId) {\n      // Fetch battle details from API\n      fetchBattleDetails(battleId);\n    }\n    \n    // Cleanup timer on unmount\n    return () => {\n      if (timerInterval) {\n        clearInterval(timerInterval);\n      }\n    };\n  }, [isDemoMode, battleId]);\n  \n  // Timer for countdown\n  let timerInterval = null;\n  \n  const startTimer = () => {\n    timerInterval = setInterval(() => {\n      setBattleState(prev => {\n        if (prev.timeRemaining <= 0) {\n          clearInterval(timerInterval);\n          return { ...prev, status: 'completed' };\n        }\n        return { ...prev, timeRemaining: prev.timeRemaining - 1 };\n      });\n    }, 1000);\n  };\n  \n  // Fetch battle details from API\n  const fetchBattleDetails = (id) => {\n    // Simulate API call\n    setTimeout(() => {\n      // Mock battle data\n      setBattleState({\n        status: 'active',\n        problem: {\n          id: 1,\n          title: \"Two Sum\",\n          description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\\n\\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\\n\\nYou can return the answer in any order.\",\n          difficulty: 'medium',\n          category: 'algorithms',\n          starterCode: {\n            javascript: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nfunction twoSum(nums, target) {\\n  // Your code here\\n}\",\n            python: \"def two_sum(nums, target):\\n    # Your code here\\n    pass\",\n            java: \"class Solution {\\n    public int[] twoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\",\n            cpp: \"#include <vector>\\n\\nclass Solution {\\npublic:\\n    std::vector<int> twoSum(std::vector<int>& nums, int target) {\\n        // Your code here\\n        return {0, 0};\\n    }\\n};\",\n            csharp: \"public class Solution {\\n    public int[] TwoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\"\n          }\n        },\n        opponent: {\n          name: \"JohnDoe123\",\n          rating: 1750,\n          winRate: \"68%\",\n          preferredLanguage: \"JavaScript\",\n          skillLevel: \"Intermediate\",\n          avatar: \"https://randomuser.me/api/portraits/men/32.jpg\"\n        },\n        userCode: getDefaultStarterCode(selectedLanguage),\n        userProgress: 0,\n        opponentProgress: 0,\n        winner: null,\n        timeRemaining: 1800\n      });\n      \n      setTestCases([\n        {\n          id: 1,\n          input: \"[2, 7, 11, 15], 9\",\n          expectedOutput: \"[0,1]\"\n        },\n        {\n          id: 2,\n          input: \"[3, 2, 4], 6\",\n          expectedOutput: \"[1,2]\"\n        },\n        {\n          id: 3,\n          input: \"[3, 3], 6\",\n          expectedOutput: \"[0,1]\"\n        }\n      ]);\n      \n      setCurrentView('battle');\n      startTimer();\n    }, 1000);\n  };\n  \n  // Start matchmaking\n  const startMatchmaking = () => {\n    console.log(\"Starting matchmaking...\");\n    setShowMatchmakingModal(false);\n    \n    // Simulate matchmaking\n    setTimeout(() => {\n      fetchBattleDetails('random-battle-id');\n    }, 2000);\n  };\n  \n  // Start demo mode with AI opponent\n  const startDemoMode = () => {\n    console.log(\"Starting Practice Mode...\");\n    \n    // Hide matchmaking modal if open\n    setShowMatchmakingModal(false);\n    \n    // Set current view to battle\n    setCurrentView('battle');\n    \n    // Initialize a demo battle with a sample problem\n    setBattleState({\n      status: 'active',\n      problem: {\n        id: 1,\n        title: \"Two Sum\",\n        description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\\n\\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\\n\\nYou can return the answer in any order.\",\n        difficulty: selectedDifficulty || 'medium',\n        category: selectedCategory || 'algorithms',\n        starterCode: {\n          javascript: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nfunction twoSum(nums, target) {\\n  // Your code here\\n}\",\n          python: \"def two_sum(nums, target):\\n    # Your code here\\n    pass\",\n          java: \"class Solution {\\n    public int[] twoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\",\n          cpp: \"#include <vector>\\n\\nclass Solution {\\npublic:\\n    std::vector<int> twoSum(std::vector<int>& nums, int target) {\\n        // Your code here\\n        return {0, 0};\\n    }\\n};\",\n          csharp: \"public class Solution {\\n    public int[] TwoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\"\n        }\n      },\n      opponent: {\n        name: \"AI Opponent\",\n        rating: 1800,\n        winRate: \"75%\",\n        preferredLanguage: \"Python\",\n        skillLevel: \"Adaptive\",\n        avatar: \"https://randomuser.me/api/portraits/lego/1.jpg\"\n      },\n      userCode: getDefaultStarterCode(selectedLanguage || 'javascript'),\n      userProgress: 0,\n      opponentProgress: 0,\n      winner: null,\n      timeRemaining: 1800\n    });\n    \n    // Set demo test cases\n    setTestCases([\n      {\n        id: 1,\n        input: \"[2, 7, 11, 15], 9\",\n        expectedOutput: \"[0,1]\"\n      },\n      {\n        id: 2,\n        input: \"[3, 2, 4], 6\",\n        expectedOutput: \"[1,2]\"\n      },\n      {\n        id: 3,\n        input: \"[3, 3], 6\",\n        expectedOutput: \"[0,1]\"\n      }\n    ]);\n    \n    // Start timer\n    startTimer();\n    \n    // Simulate AI opponent progress updates\n    startAIOpponentSimulation();\n  };\n  \n  // Simulate AI opponent progress\n  const startAIOpponentSimulation = () => {\n    const progressInterval = setInterval(() => {\n      setBattleState(prev => {\n        const newProgress = Math.min(prev.opponentProgress + Math.random() * 5, 100);\n        \n        // If AI reaches 100%, they win\n        if (newProgress >= 100 && prev.userProgress < 100) {\n          clearInterval(progressInterval);\n          return {\n            ...prev,\n            opponentProgress: 100,\n            status: 'completed',\n            winner: 'opponent'\n          };\n        }\n        \n        return {\n          ...prev,\n          opponentProgress: newProgress\n        };\n      });\n    }, 3000);\n    \n    // Clean up interval after 5 minutes (simulating max battle time)\n    setTimeout(() => {\n      clearInterval(progressInterval);\n    }, 300000);\n  };\n  \n  // Handle editor mount\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n  };\n  \n  // Handle editor change\n  const handleEditorChange = (value) => {\n    setBattleState(prev => ({\n      ...prev,\n      userCode: value\n    }));\n  };\n  \n  // Submit code for testing\n  const submitCode = () => {\n    setIsSubmitting(true);\n    \n    // Simulate code execution\n    setTimeout(() => {\n      // Mock test results\n      const results = testCases.map(testCase => {\n        const passed = Math.random() > 0.3; // 70% chance to pass each test\n        return {\n          id: testCase.id,\n          input: testCase.input,\n          expectedOutput: testCase.expectedOutput,\n          actualOutput: passed ? testCase.expectedOutput : \"[1,0]\",\n          passed\n        };\n      });\n      \n      setTestResults(results);\n      \n      // Calculate progress based on passing tests\n      const passedCount = results.filter(r => r.passed).length;\n      const progress = (passedCount / testCases.length) * 100;\n      \n      setBattleState(prev => {\n        const newState = {\n          ...prev,\n          userProgress: progress\n        };\n        \n        // Check if user won\n        if (progress >= 100 && prev.opponentProgress < 100) {\n          newState.status = 'completed';\n          newState.winner = 'user';\n        }\n        \n        return newState;\n      });\n      \n      setIsSubmitting(false);\n    }, 2000);\n  };\n  \n  // Format time remaining\n  const formatTimeRemaining = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  };\n  \n  // Render matchmaking view\n  const renderMatchmakingView = () => (\n    <div className=\"matchmaking-container\">\n      <h2>Find a Coding Battle</h2>\n      \n      <div className=\"matchmaking-options\">\n        <div className=\"option-group\">\n          <label>Programming Language</label>\n          <select \n            value={selectedLanguage} \n            onChange={(e) => setSelectedLanguage(e.target.value)}\n          >\n            <option value=\"javascript\">JavaScript</option>\n            <option value=\"python\">Python</option>\n            <option value=\"java\">Java</option>\n            <option value=\"cpp\">C++</option>\n            <option value=\"csharp\">C#</option>\n          </select>\n        </div>\n        \n        <div className=\"option-group\">\n          <label>Difficulty</label>\n          <select \n            value={selectedDifficulty} \n            onChange={(e) => setSelectedDifficulty(e.target.value)}\n          >\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n          </select>\n        </div>\n        \n        <div className=\"option-group\">\n          <label>Category</label>\n          <select \n            value={selectedCategory} \n            onChange={(e) => setSelectedCategory(e.target.value)}\n          >\n            <option value=\"algorithms\">Algorithms</option>\n            <option value=\"data-structures\">Data Structures</option>\n            <option value=\"dynamic-programming\">Dynamic Programming</option>\n            <option value=\"string-manipulation\">String Manipulation</option>\n          </select>\n        </div>\n      </div>\n      \n      <div className=\"matchmaking-actions\">\n        <button className=\"find-match-button\" onClick={startMatchmaking}>\n          Find Match\n        </button>\n        <button className=\"practice-button\" onClick={startDemoMode}>\n          Practice Mode\n        </button>\n      </div>\n    </div>\n  );\n  \n  // Render battle interface\n  const renderBattleInterface = () => (\n    <div className=\"battle-container\">\n      <div className=\"battle-header\">\n        <div className=\"problem-info\">\n          <h2>{battleState.problem?.title || 'Loading problem...'}</h2>\n          <div className=\"problem-meta\">\n            <span className={`difficulty ${battleState.problem?.difficulty}`}>\n              {battleState.problem?.difficulty}\n            </span>\n            <span className=\"category\">{battleState.problem?.category}</span>\n          </div>\n        </div>\n        \n        <div className=\"battle-timer\">\n          Time: {formatTimeRemaining(battleState.timeRemaining)}\n        </div>\n        \n        <div className=\"battle-status\">\n          <div className=\"progress-container\">\n            <div className=\"user-progress\">\n              <span className=\"progress-label\">You</span>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\" \n                  style={{width: `${battleState.userProgress}%`}}\n                ></div>\n              </div>\n              <span className=\"progress-percent\">{Math.round(battleState.userProgress)}%</span>\n            </div>\n            \n            <div className=\"opponent-progress\">\n              <span className=\"progress-label\">{battleState.opponent?.name}</span>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\" \n                  style={{width: `${battleState.opponentProgress}%`}}\n                ></div>\n              </div>\n              <span className=\"progress-percent\">{Math.round(battleState.opponentProgress)}%</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"battle-content\">\n        <div className=\"problem-panel\">\n          <div className=\"problem-description\">\n            <h3>Problem Description</h3>\n            <p>{battleState.problem?.description}</p>\n          </div>\n          \n          <div className=\"test-cases\">\n            <h3>Test Cases</h3>\n            <div className=\"test-cases-list\">\n              {testCases.map(testCase => (\n                <div className=\"test-case\" key={testCase.id}>\n                  <div className=\"test-case-input\">\n                    <strong>Input:</strong> {testCase.input}\n                  </div>\n                  <div className=\"test-case-output\">\n                    <strong>Expected Output:</strong> {testCase.expectedOutput}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          {testResults.length > 0 && (\n            <div className=\"test-results\">\n              <h3>Test Results</h3>\n              <div className=\"test-results-list\">\n                {testResults.map(result => (\n                  <div \n                    className={`test-result ${result.passed ? 'passed' : 'failed'}`} \n                    key={result.id}\n                  >\n                    <div className=\"test-result-header\">\n                      <span>Test Case #{result.id}</span>\n                      <span className=\"test-status\">\n                        {result.passed ? 'Passed' : 'Failed'}\n                      </span>\n                    </div>\n                    {!result.passed && (\n                      <div className=\"test-result-details\">\n                        <div><strong>Input:</strong> {result.input}</div>\n                        <div><strong>Expected:</strong> {result.expectedOutput}</div>\n                        <div><strong>Actual:</strong> {result.actualOutput}</div>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"editor-panel\">\n          <div className=\"editor-container\">\n            <textarea\n              className=\"code-textarea\"\n              value={battleState.userCode}\n              onChange={(e) => handleEditorChange(e.target.value)}\n              style={{ width: '100%', height: '100%', fontFamily: 'monospace', padding: '10px', fontSize: '14px', backgroundColor: '#1e1e1e', color: '#d4d4d4', border: 'none', resize: 'none' }}\n            />\n          </div>\n          <div className=\"editor-actions\">\n            <button className=\"run-button\" onClick={submitCode} disabled={isSubmitting}>\n              {isSubmitting ? \"Running...\" : \"Run Code\"}\n            </button>\n            <button className=\"hint-button\" onClick={() => setShowHint(true)}>\n              Show Hint\n            </button>\n            <button className=\"insights-button\" onClick={() => setShowAiInsights(true)}>\n              Show AI Insights\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {showHint && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h3>Hint</h3>\n            <p>Consider using a hash map to store the numbers you've seen so far. For each number, check if its complement (target - num) exists in the hash map.</p>\n            <button className=\"close-modal\" onClick={() => setShowHint(false)}>Close</button>\n          </div>\n        </div>\n      )}\n      \n      {showAiInsights && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h3>AI Insights</h3>\n            <p>The Two Sum problem is a classic example where using a hash map can reduce the time complexity from O(n²) to O(n).</p>\n            <p>Instead of using nested loops to check every pair, you can use a single pass through the array, storing each number and its index in a hash map.</p>\n            <button className=\"close-modal\" onClick={() => setShowAiInsights(false)}>Close</button>\n          </div>\n        </div>\n      )}\n      \n      {battleState.status === 'completed' && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content battle-result\">\n            <h3>{battleState.winner === 'user' ? 'Victory!' : 'Better luck next time!'}</h3>\n            <p>{battleState.winner === 'user' \n              ? 'Congratulations! You completed the challenge faster than your opponent.' \n              : 'Your opponent completed the challenge first. Keep practicing!'}\n            </p>\n            <div className=\"result-stats\">\n              <div className=\"stat\">\n                <span className=\"stat-label\">Your Progress</span>\n                <span className=\"stat-value\">{Math.round(battleState.userProgress)}%</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"stat-label\">Opponent Progress</span>\n                <span className=\"stat-value\">{Math.round(battleState.opponentProgress)}%</span>\n              </div>\n            </div>\n            <div className=\"result-actions\">\n              <button onClick={() => navigate('/battles')}>Back to Battles</button>\n              <button onClick={() => window.location.reload()}>Try Again</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n  \n  return (\n    <div className=\"coding-battle-container\">\n      {currentView === 'matchmaking' && renderMatchmakingView()}\n      {currentView === 'battle' && renderBattleInterface()}\n    </div>\n  );\n}\n\nexport default CodingBattle;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}