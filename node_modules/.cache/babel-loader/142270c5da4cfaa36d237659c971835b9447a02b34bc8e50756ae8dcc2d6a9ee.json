{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\components\\\\ParticleBackground.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './ParticleBackground.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleBackground = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n\n    // Set canvas dimensions\n    const setCanvasDimensions = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    // Handle window resize\n    window.addEventListener('resize', setCanvasDimensions);\n    setCanvasDimensions();\n\n    // Particle class\n    class Particle {\n      constructor() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.size = Math.random() * 2 + 0.5;\n        this.speedX = Math.random() * 1 - 0.5;\n        this.speedY = Math.random() * 1 - 0.5;\n        this.color = this.getRandomColor();\n      }\n      getRandomColor() {\n        const colors = ['rgba(74, 77, 231, 0.7)',\n        // Blue\n        'rgba(138, 79, 255, 0.7)',\n        // Purple\n        'rgba(74, 255, 141, 0.5)',\n        // Green\n        'rgba(255, 74, 141, 0.5)' // Pink\n        ];\n        return colors[Math.floor(Math.random() * colors.length)];\n      }\n      update() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n\n        // Bounce off edges\n        if (this.x > canvas.width || this.x < 0) {\n          this.speedX = -this.speedX;\n        }\n        if (this.y > canvas.height || this.y < 0) {\n          this.speedY = -this.speedY;\n        }\n      }\n      draw() {\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.fill();\n      }\n    }\n\n    // Create particles\n    const particlesArray = [];\n    const particleCount = Math.min(100, Math.floor(canvas.width * canvas.height / 10000));\n    for (let i = 0; i < particleCount; i++) {\n      particlesArray.push(new Particle());\n    }\n\n    // Connect particles with lines\n    const connectParticles = () => {\n      const maxDistance = 150;\n      for (let a = 0; a < particlesArray.length; a++) {\n        for (let b = a; b < particlesArray.length; b++) {\n          const dx = particlesArray[a].x - particlesArray[b].x;\n          const dy = particlesArray[a].y - particlesArray[b].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < maxDistance) {\n            const opacity = 1 - distance / maxDistance;\n            ctx.strokeStyle = `rgba(255, 255, 255, ${opacity * 0.2})`;\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            ctx.moveTo(particlesArray[a].x, particlesArray[a].y);\n            ctx.lineTo(particlesArray[b].x, particlesArray[b].y);\n            ctx.stroke();\n          }\n        }\n      }\n    };\n\n    // Animation loop\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Update and draw particles\n      for (let i = 0; i < particlesArray.length; i++) {\n        particlesArray[i].update();\n        particlesArray[i].draw();\n      }\n      connectParticles();\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    animate();\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', setCanvasDimensions);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"particle-background\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 10\n  }, this);\n};\n_s(ParticleBackground, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ParticleBackground;\nexport default ParticleBackground;\nvar _c;\n$RefreshReg$(_c, \"ParticleBackground\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ParticleBackground","_s","canvasRef","canvas","current","ctx","getContext","animationFrameId","setCanvasDimensions","width","window","innerWidth","height","innerHeight","addEventListener","Particle","constructor","x","Math","random","y","size","speedX","speedY","color","getRandomColor","colors","floor","length","update","draw","fillStyle","beginPath","arc","PI","fill","particlesArray","particleCount","min","i","push","connectParticles","maxDistance","a","b","dx","dy","distance","sqrt","opacity","strokeStyle","lineWidth","moveTo","lineTo","stroke","animate","clearRect","requestAnimationFrame","removeEventListener","cancelAnimationFrame","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/components/ParticleBackground.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './ParticleBackground.css';\n\nconst ParticleBackground = () => {\n  const canvasRef = useRef(null);\n  \n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    \n    // Set canvas dimensions\n    const setCanvasDimensions = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    \n    // Handle window resize\n    window.addEventListener('resize', setCanvasDimensions);\n    setCanvasDimensions();\n    \n    // Particle class\n    class Particle {\n      constructor() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.size = Math.random() * 2 + 0.5;\n        this.speedX = Math.random() * 1 - 0.5;\n        this.speedY = Math.random() * 1 - 0.5;\n        this.color = this.getRandomColor();\n      }\n      \n      getRandomColor() {\n        const colors = [\n          'rgba(74, 77, 231, 0.7)',  // Blue\n          'rgba(138, 79, 255, 0.7)',  // Purple\n          'rgba(74, 255, 141, 0.5)',  // Green\n          'rgba(255, 74, 141, 0.5)'   // Pink\n        ];\n        return colors[Math.floor(Math.random() * colors.length)];\n      }\n      \n      update() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n        \n        // Bounce off edges\n        if (this.x > canvas.width || this.x < 0) {\n          this.speedX = -this.speedX;\n        }\n        \n        if (this.y > canvas.height || this.y < 0) {\n          this.speedY = -this.speedY;\n        }\n      }\n      \n      draw() {\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.fill();\n      }\n    }\n    \n    // Create particles\n    const particlesArray = [];\n    const particleCount = Math.min(100, Math.floor((canvas.width * canvas.height) / 10000));\n    \n    for (let i = 0; i < particleCount; i++) {\n      particlesArray.push(new Particle());\n    }\n    \n    // Connect particles with lines\n    const connectParticles = () => {\n      const maxDistance = 150;\n      \n      for (let a = 0; a < particlesArray.length; a++) {\n        for (let b = a; b < particlesArray.length; b++) {\n          const dx = particlesArray[a].x - particlesArray[b].x;\n          const dy = particlesArray[a].y - particlesArray[b].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          \n          if (distance < maxDistance) {\n            const opacity = 1 - (distance / maxDistance);\n            ctx.strokeStyle = `rgba(255, 255, 255, ${opacity * 0.2})`;\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            ctx.moveTo(particlesArray[a].x, particlesArray[a].y);\n            ctx.lineTo(particlesArray[b].x, particlesArray[b].y);\n            ctx.stroke();\n          }\n        }\n      }\n    };\n    \n    // Animation loop\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Update and draw particles\n      for (let i = 0; i < particlesArray.length; i++) {\n        particlesArray[i].update();\n        particlesArray[i].draw();\n      }\n      \n      connectParticles();\n      \n      animationFrameId = requestAnimationFrame(animate);\n    };\n    \n    animate();\n    \n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', setCanvasDimensions);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n  \n  return <canvas ref={canvasRef} className=\"particle-background\" />;\n};\n\nexport default ParticleBackground;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}