{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\pages\\\\InterviewPrep.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './InterviewPrep.css';\nimport InterviewAnalysisReport from '../components/interview/InterviewAnalysisReport';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction InterviewPrep() {\n  _s();\n  const navigate = useNavigate();\n  const videoRef = useRef(null);\n  const streamRef = useRef(null);\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [interviews, setInterviews] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const [sessionInProgress, setSessionInProgress] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [currentInterview, setCurrentInterview] = useState(null);\n  const [feedback, setFeedback] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [cameraPermission, setCameraPermission] = useState(null);\n  // Practice mode states\n  const [practiceMode, setPracticeMode] = useState(false);\n  const [activityCapture, setActivityCapture] = useState([]);\n  const [practiceTimer, setPracticeTimer] = useState(0);\n  const [practiceTimerInterval, setPracticeTimerInterval] = useState(null);\n\n  // Check if user is logged in and initialize\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n    } else {\n      // Load mock interviews\n      loadMockInterviews();\n    }\n\n    // Cleanup function to stop all tracks when component unmounts\n    return () => {\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [navigate]);\n\n  // Initialize camera when session starts or when viewing settings\n  useEffect(() => {\n    if (activeTab === 'settings' || sessionInProgress) {\n      // Request camera permission\n      requestCameraPermission();\n    }\n  }, [activeTab, sessionInProgress]);\n\n  // Load mock interviews\n  const loadMockInterviews = () => {\n    const mockInterviews = [{\n      id: 1,\n      title: 'Frontend Developer Interview',\n      jobTitle: 'Senior Frontend Developer',\n      company: 'Tech Solutions Inc.',\n      interviewType: 'Technical',\n      difficulty: 'Senior',\n      duration: 30,\n      questions: [{\n        id: 1,\n        question: 'Explain the concept of closures in JavaScript and provide an example.',\n        category: 'Technical',\n        difficulty: 'Medium',\n        expectedAnswer: 'A closure is the combination of a function bundled together with references to its surrounding state. In JavaScript, closures are created every time a function is created, at function creation time. A closure allows a function to access variables from an outer function even after the outer function has returned.',\n        tips: 'Provide a practical example showing how closures can be used for data privacy or function factories.'\n      }, {\n        id: 2,\n        question: 'How would you optimize the performance of a React application?',\n        category: 'Technical',\n        difficulty: 'Hard',\n        expectedAnswer: 'React performance optimization techniques include: using React.memo for component memoization, implementing shouldComponentUpdate, using the useCallback and useMemo hooks, code splitting with React.lazy, virtualizing long lists, and minimizing unnecessary re-renders.',\n        tips: 'Mention specific tools like React Profiler, Lighthouse, or Chrome DevTools that you would use to identify performance bottlenecks.'\n      }, {\n        id: 3,\n        question: 'Describe a challenging project you worked on and how you overcame obstacles.',\n        category: 'Behavioral',\n        difficulty: 'Medium',\n        expectedAnswer: 'This is a behavioral question looking for your problem-solving abilities, resilience, and teamwork.',\n        tips: 'Use the STAR method (Situation, Task, Action, Result) to structure your answer. Be specific about the challenges and your contributions.'\n      }, {\n        id: 4,\n        question: 'How do you stay updated with the latest frontend technologies?',\n        category: 'Behavioral',\n        difficulty: 'Easy',\n        expectedAnswer: 'This question assesses your commitment to continuous learning and professional development.',\n        tips: 'Mention specific resources like blogs, podcasts, conferences, or open-source contributions that demonstrate your engagement with the community.'\n      }, {\n        id: 5,\n        question: 'Implement a debounce function in JavaScript.',\n        category: 'Coding',\n        difficulty: 'Hard',\n        expectedAnswer: 'A debounce function limits the rate at which a function can fire. It will delay the processing of the function until after a specified time has passed without the function being called again.',\n        tips: 'Focus on explaining your thought process as you code. Consider edge cases and optimizations.'\n      }],\n      sessions: []\n    }, {\n      id: 2,\n      title: 'Full Stack Developer Interview',\n      jobTitle: 'Full Stack Developer',\n      company: 'Innovative Apps LLC',\n      interviewType: 'Mixed',\n      difficulty: 'Mid-Level',\n      duration: 45,\n      questions: [{\n        id: 1,\n        question: 'Explain the difference between REST and GraphQL APIs.',\n        category: 'Technical',\n        difficulty: 'Medium',\n        expectedAnswer: 'REST APIs expose a separate endpoint for each resource, while GraphQL uses a single endpoint where clients can specify exactly what data they need. REST often leads to over-fetching or under-fetching of data, while GraphQL allows clients to request only the data they need.',\n        tips: 'Discuss the pros and cons of each approach and when you might choose one over the other.'\n      }, {\n        id: 2,\n        question: 'How would you design a database schema for a social media platform?',\n        category: 'System Design',\n        difficulty: 'Hard',\n        expectedAnswer: 'A social media platform database would typically include tables for users, posts, comments, likes, friendships/follows, notifications, and messages. Consider relationships, indexing, and scalability concerns.',\n        tips: 'Discuss both relational and NoSQL approaches, and explain how you would handle scale issues like high read/write volumes.'\n      }, {\n        id: 3,\n        question: 'Tell me about a time when you had to learn a new technology quickly.',\n        category: 'Behavioral',\n        difficulty: 'Medium',\n        expectedAnswer: 'This question assesses your ability to adapt and learn quickly in a fast-paced environment.',\n        tips: 'Use the STAR method and focus on your learning process, not just the outcome.'\n      }],\n      sessions: []\n    }, {\n      id: 3,\n      title: 'Data Science Interview',\n      jobTitle: 'Data Scientist',\n      company: 'Analytics Insights Corp',\n      interviewType: 'Technical',\n      difficulty: 'Senior',\n      duration: 60,\n      questions: [{\n        id: 1,\n        question: 'Explain the difference between supervised and unsupervised learning with examples.',\n        category: 'Technical',\n        difficulty: 'Medium',\n        expectedAnswer: 'Supervised learning uses labeled data to train models (e.g., classification, regression), while unsupervised learning finds patterns in unlabeled data (e.g., clustering, dimensionality reduction).',\n        tips: 'Provide specific algorithm examples for each type and real-world applications.'\n      }, {\n        id: 2,\n        question: 'How would you handle imbalanced datasets in classification problems?',\n        category: 'Technical',\n        difficulty: 'Hard',\n        expectedAnswer: 'Techniques include resampling methods (oversampling minority class or undersampling majority class), synthetic data generation (SMOTE), algorithm-level approaches (cost-sensitive learning), and ensemble methods.',\n        tips: 'Discuss the trade-offs of different approaches and how you would evaluate model performance on imbalanced data.'\n      }, {\n        id: 3,\n        question: 'Describe a data science project where you had to clean and preprocess messy data.',\n        category: 'Behavioral',\n        difficulty: 'Medium',\n        expectedAnswer: \"This question assesses your practical experience with data cleaning and preprocessing, which is often 80% of a data scientist's job.\",\n        tips: 'Detail specific techniques you used (handling missing values, outliers, feature engineering) and how they improved your model.'\n      }, {\n        id: 4,\n        question: 'Implement a function to detect outliers in a dataset using the IQR method.',\n        category: 'Coding',\n        difficulty: 'Medium',\n        expectedAnswer: 'The IQR (Interquartile Range) method identifies outliers as values below Q1 - 1.5*IQR or above Q3 + 1.5*IQR, where Q1 is the first quartile and Q3 is the third quartile.',\n        tips: 'Explain why you might choose IQR over other methods like z-score and discuss the limitations.'\n      }],\n      sessions: []\n    }, {\n      id: 4,\n      title: 'System Design Interview',\n      jobTitle: 'Senior Software Engineer',\n      company: 'ScaleTech Solutions',\n      interviewType: 'System Design',\n      difficulty: 'Senior',\n      duration: 60,\n      questions: [{\n        id: 1,\n        question: 'Design a URL shortening service like TinyURL.',\n        category: 'System Design',\n        difficulty: 'Medium',\n        expectedAnswer: 'A URL shortener requires components for URL generation (hash function), storage (database for mapping short to long URLs), redirection service, and analytics. Consider scalability, availability, and potential bottlenecks.',\n        tips: 'Follow a structured approach: requirements clarification, system interface definition, data model, algorithm design, scaling considerations, and potential improvements.'\n      }, {\n        id: 2,\n        question: \"How would you design Twitter's newsfeed functionality?\",\n        category: 'System Design',\n        difficulty: 'Hard',\n        expectedAnswer: \"Twitter's newsfeed requires handling high write volume (tweets), complex read patterns (timeline generation), and real-time updates. Consider fan-out approaches (push vs. pull), caching strategies, and database choices.\",\n        tips: 'Discuss trade-offs between different approaches and how you would handle scale issues like celebrity users with millions of followers.'\n      }, {\n        id: 3,\n        question: 'Design a distributed cache system.',\n        category: 'System Design',\n        difficulty: 'Hard',\n        expectedAnswer: 'A distributed cache system needs to address data partitioning, replication, consistency, fault tolerance, eviction policies, and cache invalidation strategies.',\n        tips: 'Reference existing systems like Redis or Memcached and explain how you would handle specific challenges like hot keys or cache stampedes.'\n      }],\n      sessions: []\n    }, {\n      id: 5,\n      title: 'Behavioral Interview',\n      jobTitle: 'Product Manager',\n      company: 'User-First Products',\n      interviewType: 'Behavioral',\n      difficulty: 'Mid-Level',\n      duration: 45,\n      questions: [{\n        id: 1,\n        question: 'Tell me about a time when you had to make a difficult decision with limited information.',\n        category: 'Behavioral',\n        difficulty: 'Medium',\n        expectedAnswer: 'This question assesses your decision-making process, risk assessment, and judgment under uncertainty.',\n        tips: 'Use the STAR method and focus on your analytical approach, how you gathered what information you could, and how you evaluated options.'\n      }, {\n        id: 2,\n        question: 'Describe a situation where you had to work with a difficult team member or stakeholder.',\n        category: 'Behavioral',\n        difficulty: 'Medium',\n        expectedAnswer: 'This question evaluates your interpersonal skills, conflict resolution abilities, and emotional intelligence.',\n        tips: 'Focus on how you maintained professionalism, sought to understand their perspective, and worked toward a positive outcome.'\n      }, {\n        id: 3,\n        question: 'Give an example of a time when you failed to meet a goal or deadline. How did you handle it?',\n        category: 'Behavioral',\n        difficulty: 'Hard',\n        expectedAnswer: 'This question assesses your accountability, resilience, and ability to learn from failures.',\n        tips: 'Be honest about the failure, take responsibility, and emphasize what you learned and how you applied those lessons later.'\n      }, {\n        id: 4,\n        question: 'Tell me about a time when you had to influence someone without having direct authority over them.',\n        category: 'Behavioral',\n        difficulty: 'Hard',\n        expectedAnswer: \"This question evaluates your leadership, persuasion skills, and ability to build consensus.\",\n        tips: \"Focus on how you built relationships, understood others' motivations, and communicated effectively to achieve buy-in.\"\n      }],\n      sessions: []\n    }];\n    setInterviews(mockInterviews);\n  };\n\n  // Request camera permission\n  const requestCameraPermission = async () => {\n    try {\n      // Request both video and audio permissions\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n\n      // Save the stream reference\n      streamRef.current = stream;\n\n      // Set the stream as the video source\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n\n        // Ensure video plays when ready\n        videoRef.current.onloadedmetadata = () => {\n          videoRef.current.play().catch(e => {\n            console.error('Error playing video:', e);\n          });\n        };\n      }\n      setCameraPermission('granted');\n      console.log('Camera permission granted and stream connected');\n      return true;\n    } catch (err) {\n      console.error('Error accessing camera:', err);\n      setCameraPermission('denied');\n      alert('Camera access is required for the interview preparation. Please allow camera access and try again.');\n      return false;\n    }\n  };\n\n  // Start interview session\n  const startInterviewSession = async interview => {\n    const hasPermission = cameraPermission === 'granted' || (await requestCameraPermission());\n    if (!hasPermission) {\n      alert('Camera permission is required for the interview session.');\n      return;\n    }\n    setCurrentInterview(interview);\n    setCurrentQuestion(interview.questions[0]);\n    setQuestionIndex(0);\n    setSessionInProgress(true);\n    setActiveTab('session');\n    setFeedback(null);\n  };\n\n  // End interview session\n  const endInterviewSession = () => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n    }\n    setSessionInProgress(false);\n    setIsRecording(false);\n    setCurrentInterview(null);\n    setCurrentQuestion(null);\n    setActiveTab('dashboard');\n\n    // Stop practice mode if active\n    if (practiceMode) {\n      endPracticeMode();\n    }\n  };\n\n  // Start recording\n  const startRecording = () => {\n    setIsRecording(true);\n    // In a real implementation, this would start recording the video\n    console.log('Recording started');\n  };\n\n  // Stop recording and analyze\n  const stopRecordingAndAnalyze = () => {\n    setIsRecording(false);\n    setLoading(true);\n\n    // In a real implementation, this would stop recording and send the video for analysis\n    // For now, we'll simulate the analysis with a timeout\n    setTimeout(() => {\n      // Mock feedback\n      const mockFeedback = {\n        overallScore: Math.floor(Math.random() * 30) + 70,\n        // 70-100\n        technicalAccuracy: Math.floor(Math.random() * 30) + 70,\n        communicationScore: Math.floor(Math.random() * 30) + 70,\n        confidenceScore: Math.floor(Math.random() * 30) + 70,\n        bodyLanguageScore: Math.floor(Math.random() * 30) + 70,\n        strengths: ['Clear explanation of technical concepts', 'Good problem-solving approach', 'Maintained good eye contact throughout'],\n        areasForImprovement: ['Could provide more specific examples', 'Reduce use of filler words like \"um\" and \"like\"', 'Consider more concise answers to behavioral questions'],\n        detailedFeedback: [{\n          timestamp: 45,\n          feedback: 'Excellent explanation of the algorithm',\n          category: 'Technical',\n          severity: 'Positive'\n        }, {\n          timestamp: 120,\n          feedback: 'Consider maintaining better posture here',\n          category: 'Body Language',\n          severity: 'Suggestion'\n        }, {\n          timestamp: 180,\n          feedback: 'Too many filler words in this response',\n          category: 'Communication',\n          severity: 'Minor Issue'\n        }]\n      };\n      setFeedback(mockFeedback);\n      setLoading(false);\n    }, 2000);\n  };\n\n  // Move to next question\n  const nextQuestion = () => {\n    if (currentInterview && questionIndex < currentInterview.questions.length - 1) {\n      setQuestionIndex(questionIndex + 1);\n      setCurrentQuestion(currentInterview.questions[questionIndex + 1]);\n      setFeedback(null);\n\n      // Capture activity if in practice mode\n      if (practiceMode) {\n        captureActivity();\n      }\n    } else {\n      // End of interview\n      if (practiceMode) {\n        endPracticeMode();\n      } else {\n        endInterviewSession();\n      }\n    }\n  };\n\n  // Practice mode functions\n  const startPracticeMode = async interview => {\n    // Request camera permission first\n    const hasPermission = cameraPermission === 'granted' || (await requestCameraPermission());\n    if (!hasPermission) {\n      alert('Camera permission is required for practice mode.');\n      return;\n    }\n    setPracticeMode(true);\n    setActivityCapture([]);\n    setPracticeTimer(0);\n\n    // Start practice timer\n    const interval = setInterval(() => {\n      setPracticeTimer(prev => prev + 1);\n\n      // Capture activity every 30 seconds\n      if (practiceTimer % 30 === 0 && practiceTimer > 0) {\n        captureActivity();\n      }\n    }, 1000);\n    setPracticeTimerInterval(interval);\n\n    // Start the interview session with the selected interview\n    setCurrentInterview(interview);\n    setCurrentQuestion(interview.questions[0]);\n    setQuestionIndex(0);\n    setSessionInProgress(true);\n    setActiveTab('session');\n    setFeedback(null);\n  };\n  const endPracticeMode = () => {\n    setPracticeMode(false);\n\n    // Clear practice timer\n    if (practiceTimerInterval) {\n      clearInterval(practiceTimerInterval);\n      setPracticeTimerInterval(null);\n    }\n\n    // Generate practice report\n    generatePracticeReport();\n\n    // End the interview session\n    endInterviewSession();\n  };\n  const captureActivity = () => {\n    // In a real implementation, this would capture screenshots, typing activity, etc.\n    // For this demo, we'll just log the timestamp and question\n\n    const activity = {\n      timestamp: new Date().toISOString(),\n      questionIndex,\n      question: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question,\n      isRecording,\n      elapsedTime: practiceTimer\n    };\n    setActivityCapture(prev => [...prev, activity]);\n\n    // Take a \"screenshot\" (in a real implementation)\n    console.log(`Activity captured at ${formatTime(practiceTimer)}`);\n  };\n  const generatePracticeReport = () => {\n    // In a real implementation, this would generate a comprehensive report\n    // For this demo, we'll just show a simple alert\n\n    const totalTime = formatTime(practiceTimer);\n    const questionsAttempted = activityCapture.filter(a => a.isRecording).length;\n    alert(`Practice Session Report:\n    - Total practice time: ${totalTime}\n    - Questions attempted: ${questionsAttempted}\n    - Activity captures: ${activityCapture.length}\n\n    Keep practicing to improve your interview skills!`);\n  };\n\n  // Helper function to format time (seconds to MM:SS)\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  // Render dashboard tab\n  const renderDashboard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interview-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Interview Preparation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"dashboard-description\",\n      children: \"Practice your interview skills with our AI-powered interview simulator. Get real-time feedback on your responses, body language, and communication style.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Interview Templates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this), interviews.map(interview => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interview-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"interview-card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: interview.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `interview-type ${interview.interviewType.toLowerCase()}`,\n            children: interview.interviewType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"interview-card-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Position:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 18\n            }, this), \" \", interview.jobTitle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Company:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 18\n            }, this), \" \", interview.company]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Difficulty:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 18\n            }, this), \" \", interview.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Duration:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 18\n            }, this), \" \", interview.duration, \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Questions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 18\n            }, this), \" \", interview.questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"interview-card-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => startInterviewSession(interview),\n              children: \"Start Practice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => startPracticeMode(interview),\n              children: \"Practice with Camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this)]\n      }, interview.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 512,\n    columnNumber: 5\n  }, this);\n\n  // Render interview session tab\n  const renderSession = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interview-session\",\n    children: currentQuestion && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"session-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentInterview.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-counter\",\n          children: [\"Question \", questionIndex + 1, \" of \", currentInterview.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 11\n      }, this), practiceMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"practice-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"practice-timer\",\n          children: [\"Practice Time: \", formatTime(practiceTimer)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"practice-captures\",\n          children: [\"Activity Captures: \", activityCapture.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"session-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            muted: false,\n            className: isRecording ? 'recording' : '',\n            style: {\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recording-indicator\",\n            children: \"Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 31\n          }, this), practiceMode && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-capture-indicator\",\n            children: \"Activity Capture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 32\n          }, this), !cameraPermission && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"camera-permission-overlay\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: requestCameraPermission,\n              className: \"camera-permission-btn\",\n              children: \"Enable Camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-category\",\n              children: [currentQuestion.category, \" - \", currentQuestion.difficulty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"question-text\",\n              children: currentQuestion.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-actions\",\n              children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: startRecording,\n                disabled: loading,\n                children: \"Start Answering\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: stopRecordingAndAnalyze,\n                disabled: loading,\n                children: \"Stop Recording\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Analyzing your response...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 17\n          }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"AI Feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedback-scores\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-score\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-label\",\n                  children: \"Overall\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-value\",\n                  children: feedback.overallScore\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 645,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-score\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-label\",\n                  children: \"Technical\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-value\",\n                  children: feedback.technicalAccuracy\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-score\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-label\",\n                  children: \"Communication\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-value\",\n                  children: feedback.communicationScore\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-score\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-label\",\n                  children: \"Confidence\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-value\",\n                  children: feedback.confidenceScore\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-score\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-label\",\n                  children: \"Body Language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-value\",\n                  children: feedback.bodyLanguageScore\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedback-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Strengths\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: feedback.strengths.map((strength, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: strength\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 670,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Areas for Improvement\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: feedback.areasForImprovement.map((area, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: area\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 679,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary next-question-btn\",\n              onClick: nextQuestion,\n              children: questionIndex < currentInterview.questions.length - 1 ? 'Next Question' : 'Finish Interview'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary end-session-btn\",\n        onClick: endInterviewSession,\n        children: \"End Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 560,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interview-prep-container\",\n    children: [!sessionInProgress ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'dashboard' ? 'active' : '',\n        onClick: () => setActiveTab('dashboard'),\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'history' ? 'active' : '',\n        onClick: () => setActiveTab('history'),\n        children: \"History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'settings' ? 'active' : '',\n        onClick: () => setActiveTab('settings'),\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-content\",\n      children: [activeTab === 'dashboard' && !sessionInProgress && renderDashboard(), activeTab === 'history' && !sessionInProgress && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interview-history\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Interview History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your past interview sessions will appear here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 11\n      }, this), activeTab === 'settings' && !sessionInProgress && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interview-settings\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"settings-description\",\n          children: \"Customize your interview experience.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Camera Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Camera Test\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Test your camera before starting an interview.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 753,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: requestCameraPermission,\n                children: \"Test Camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this), cameraPermission === 'granted' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"camera-preview-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              autoPlay: true,\n              muted: true,\n              className: \"camera-preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"camera-status success\",\n              children: \"Camera is working properly!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 17\n          }, this), cameraPermission === 'denied' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"camera-error\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"camera-status error\",\n              children: \"Camera access denied. Please check your browser settings.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 11\n      }, this), (activeTab === 'session' || sessionInProgress) && renderSession()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 710,\n    columnNumber: 5\n  }, this);\n}\n_s(InterviewPrep, \"aNLEIO3FmG8s/oa+MyIazJkiNQo=\", false, function () {\n  return [useNavigate];\n});\n_c = InterviewPrep;\nexport default InterviewPrep;\nvar _c;\n$RefreshReg$(_c, \"InterviewPrep\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","InterviewAnalysisReport","jsxDEV","_jsxDEV","Fragment","_Fragment","InterviewPrep","_s","navigate","videoRef","streamRef","activeTab","setActiveTab","interviews","setInterviews","isRecording","setIsRecording","sessionInProgress","setSessionInProgress","currentQuestion","setCurrentQuestion","questionIndex","setQuestionIndex","currentInterview","setCurrentInterview","feedback","setFeedback","loading","setLoading","cameraPermission","setCameraPermission","practiceMode","setPracticeMode","activityCapture","setActivityCapture","practiceTimer","setPracticeTimer","practiceTimerInterval","setPracticeTimerInterval","isLoggedIn","localStorage","getItem","loadMockInterviews","current","getTracks","forEach","track","stop","requestCameraPermission","mockInterviews","id","title","jobTitle","company","interviewType","difficulty","duration","questions","question","category","expectedAnswer","tips","sessions","stream","navigator","mediaDevices","getUserMedia","video","audio","srcObject","onloadedmetadata","play","catch","e","console","error","log","err","alert","startInterviewSession","interview","hasPermission","endInterviewSession","endPracticeMode","startRecording","stopRecordingAndAnalyze","setTimeout","mockFeedback","overallScore","Math","floor","random","technicalAccuracy","communicationScore","confidenceScore","bodyLanguageScore","strengths","areasForImprovement","detailedFeedback","timestamp","severity","nextQuestion","length","captureActivity","startPracticeMode","interval","setInterval","prev","clearInterval","generatePracticeReport","activity","Date","toISOString","elapsedTime","formatTime","totalTime","questionsAttempted","filter","a","seconds","minutes","remainingSeconds","toString","padStart","renderDashboard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","toLowerCase","onClick","renderSession","ref","autoPlay","playsInline","muted","style","width","height","objectFit","disabled","strength","index","area","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/pages/InterviewPrep.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './InterviewPrep.css';\nimport InterviewAnalysisReport from '../components/interview/InterviewAnalysisReport';\n\nfunction InterviewPrep() {\n  const navigate = useNavigate();\n  const videoRef = useRef(null);\n  const streamRef = useRef(null);\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [interviews, setInterviews] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const [sessionInProgress, setSessionInProgress] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [currentInterview, setCurrentInterview] = useState(null);\n  const [feedback, setFeedback] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [cameraPermission, setCameraPermission] = useState(null);\n  // Practice mode states\n  const [practiceMode, setPracticeMode] = useState(false);\n  const [activityCapture, setActivityCapture] = useState([]);\n  const [practiceTimer, setPracticeTimer] = useState(0);\n  const [practiceTimerInterval, setPracticeTimerInterval] = useState(null);\n\n  // Check if user is logged in and initialize\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n    } else {\n      // Load mock interviews\n      loadMockInterviews();\n    }\n\n    // Cleanup function to stop all tracks when component unmounts\n    return () => {\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [navigate]);\n\n  // Initialize camera when session starts or when viewing settings\n  useEffect(() => {\n    if (activeTab === 'settings' || sessionInProgress) {\n      // Request camera permission\n      requestCameraPermission();\n    }\n  }, [activeTab, sessionInProgress]);\n\n  // Load mock interviews\n  const loadMockInterviews = () => {\n    const mockInterviews = [\n      {\n        id: 1,\n        title: 'Frontend Developer Interview',\n        jobTitle: 'Senior Frontend Developer',\n        company: 'Tech Solutions Inc.',\n        interviewType: 'Technical',\n        difficulty: 'Senior',\n        duration: 30,\n        questions: [\n          {\n            id: 1,\n            question: 'Explain the concept of closures in JavaScript and provide an example.',\n            category: 'Technical',\n            difficulty: 'Medium',\n            expectedAnswer: 'A closure is the combination of a function bundled together with references to its surrounding state. In JavaScript, closures are created every time a function is created, at function creation time. A closure allows a function to access variables from an outer function even after the outer function has returned.',\n            tips: 'Provide a practical example showing how closures can be used for data privacy or function factories.'\n          },\n          {\n            id: 2,\n            question: 'How would you optimize the performance of a React application?',\n            category: 'Technical',\n            difficulty: 'Hard',\n            expectedAnswer: 'React performance optimization techniques include: using React.memo for component memoization, implementing shouldComponentUpdate, using the useCallback and useMemo hooks, code splitting with React.lazy, virtualizing long lists, and minimizing unnecessary re-renders.',\n            tips: 'Mention specific tools like React Profiler, Lighthouse, or Chrome DevTools that you would use to identify performance bottlenecks.'\n          },\n          {\n            id: 3,\n            question: 'Describe a challenging project you worked on and how you overcame obstacles.',\n            category: 'Behavioral',\n            difficulty: 'Medium',\n            expectedAnswer: 'This is a behavioral question looking for your problem-solving abilities, resilience, and teamwork.',\n            tips: 'Use the STAR method (Situation, Task, Action, Result) to structure your answer. Be specific about the challenges and your contributions.'\n          },\n          {\n            id: 4,\n            question: 'How do you stay updated with the latest frontend technologies?',\n            category: 'Behavioral',\n            difficulty: 'Easy',\n            expectedAnswer: 'This question assesses your commitment to continuous learning and professional development.',\n            tips: 'Mention specific resources like blogs, podcasts, conferences, or open-source contributions that demonstrate your engagement with the community.'\n          },\n          {\n            id: 5,\n            question: 'Implement a debounce function in JavaScript.',\n            category: 'Coding',\n            difficulty: 'Hard',\n            expectedAnswer: 'A debounce function limits the rate at which a function can fire. It will delay the processing of the function until after a specified time has passed without the function being called again.',\n            tips: 'Focus on explaining your thought process as you code. Consider edge cases and optimizations.'\n          }\n        ],\n        sessions: []\n      },\n      {\n        id: 2,\n        title: 'Full Stack Developer Interview',\n        jobTitle: 'Full Stack Developer',\n        company: 'Innovative Apps LLC',\n        interviewType: 'Mixed',\n        difficulty: 'Mid-Level',\n        duration: 45,\n        questions: [\n          {\n            id: 1,\n            question: 'Explain the difference between REST and GraphQL APIs.',\n            category: 'Technical',\n            difficulty: 'Medium',\n            expectedAnswer: 'REST APIs expose a separate endpoint for each resource, while GraphQL uses a single endpoint where clients can specify exactly what data they need. REST often leads to over-fetching or under-fetching of data, while GraphQL allows clients to request only the data they need.',\n            tips: 'Discuss the pros and cons of each approach and when you might choose one over the other.'\n          },\n          {\n            id: 2,\n            question: 'How would you design a database schema for a social media platform?',\n            category: 'System Design',\n            difficulty: 'Hard',\n            expectedAnswer: 'A social media platform database would typically include tables for users, posts, comments, likes, friendships/follows, notifications, and messages. Consider relationships, indexing, and scalability concerns.',\n            tips: 'Discuss both relational and NoSQL approaches, and explain how you would handle scale issues like high read/write volumes.'\n          },\n          {\n            id: 3,\n            question: 'Tell me about a time when you had to learn a new technology quickly.',\n            category: 'Behavioral',\n            difficulty: 'Medium',\n            expectedAnswer: 'This question assesses your ability to adapt and learn quickly in a fast-paced environment.',\n            tips: 'Use the STAR method and focus on your learning process, not just the outcome.'\n          }\n        ],\n        sessions: []\n      },\n      {\n        id: 3,\n        title: 'Data Science Interview',\n        jobTitle: 'Data Scientist',\n        company: 'Analytics Insights Corp',\n        interviewType: 'Technical',\n        difficulty: 'Senior',\n        duration: 60,\n        questions: [\n          {\n            id: 1,\n            question: 'Explain the difference between supervised and unsupervised learning with examples.',\n            category: 'Technical',\n            difficulty: 'Medium',\n            expectedAnswer: 'Supervised learning uses labeled data to train models (e.g., classification, regression), while unsupervised learning finds patterns in unlabeled data (e.g., clustering, dimensionality reduction).',\n            tips: 'Provide specific algorithm examples for each type and real-world applications.'\n          },\n          {\n            id: 2,\n            question: 'How would you handle imbalanced datasets in classification problems?',\n            category: 'Technical',\n            difficulty: 'Hard',\n            expectedAnswer: 'Techniques include resampling methods (oversampling minority class or undersampling majority class), synthetic data generation (SMOTE), algorithm-level approaches (cost-sensitive learning), and ensemble methods.',\n            tips: 'Discuss the trade-offs of different approaches and how you would evaluate model performance on imbalanced data.'\n          },\n          {\n            id: 3,\n            question: 'Describe a data science project where you had to clean and preprocess messy data.',\n            category: 'Behavioral',\n            difficulty: 'Medium',\n            expectedAnswer: \"This question assesses your practical experience with data cleaning and preprocessing, which is often 80% of a data scientist's job.\",\n            tips: 'Detail specific techniques you used (handling missing values, outliers, feature engineering) and how they improved your model.'\n          },\n          {\n            id: 4,\n            question: 'Implement a function to detect outliers in a dataset using the IQR method.',\n            category: 'Coding',\n            difficulty: 'Medium',\n            expectedAnswer: 'The IQR (Interquartile Range) method identifies outliers as values below Q1 - 1.5*IQR or above Q3 + 1.5*IQR, where Q1 is the first quartile and Q3 is the third quartile.',\n            tips: 'Explain why you might choose IQR over other methods like z-score and discuss the limitations.'\n          }\n        ],\n        sessions: []\n      },\n      {\n        id: 4,\n        title: 'System Design Interview',\n        jobTitle: 'Senior Software Engineer',\n        company: 'ScaleTech Solutions',\n        interviewType: 'System Design',\n        difficulty: 'Senior',\n        duration: 60,\n        questions: [\n          {\n            id: 1,\n            question: 'Design a URL shortening service like TinyURL.',\n            category: 'System Design',\n            difficulty: 'Medium',\n            expectedAnswer: 'A URL shortener requires components for URL generation (hash function), storage (database for mapping short to long URLs), redirection service, and analytics. Consider scalability, availability, and potential bottlenecks.',\n            tips: 'Follow a structured approach: requirements clarification, system interface definition, data model, algorithm design, scaling considerations, and potential improvements.'\n          },\n          {\n            id: 2,\n            question: \"How would you design Twitter's newsfeed functionality?\",\n            category: 'System Design',\n            difficulty: 'Hard',\n            expectedAnswer: \"Twitter's newsfeed requires handling high write volume (tweets), complex read patterns (timeline generation), and real-time updates. Consider fan-out approaches (push vs. pull), caching strategies, and database choices.\",\n            tips: 'Discuss trade-offs between different approaches and how you would handle scale issues like celebrity users with millions of followers.'\n          },\n          {\n            id: 3,\n            question: 'Design a distributed cache system.',\n            category: 'System Design',\n            difficulty: 'Hard',\n            expectedAnswer: 'A distributed cache system needs to address data partitioning, replication, consistency, fault tolerance, eviction policies, and cache invalidation strategies.',\n            tips: 'Reference existing systems like Redis or Memcached and explain how you would handle specific challenges like hot keys or cache stampedes.'\n          }\n        ],\n        sessions: []\n      },\n      {\n        id: 5,\n        title: 'Behavioral Interview',\n        jobTitle: 'Product Manager',\n        company: 'User-First Products',\n        interviewType: 'Behavioral',\n        difficulty: 'Mid-Level',\n        duration: 45,\n        questions: [\n          {\n            id: 1,\n            question: 'Tell me about a time when you had to make a difficult decision with limited information.',\n            category: 'Behavioral',\n            difficulty: 'Medium',\n            expectedAnswer: 'This question assesses your decision-making process, risk assessment, and judgment under uncertainty.',\n            tips: 'Use the STAR method and focus on your analytical approach, how you gathered what information you could, and how you evaluated options.'\n          },\n          {\n            id: 2,\n            question: 'Describe a situation where you had to work with a difficult team member or stakeholder.',\n            category: 'Behavioral',\n            difficulty: 'Medium',\n            expectedAnswer: 'This question evaluates your interpersonal skills, conflict resolution abilities, and emotional intelligence.',\n            tips: 'Focus on how you maintained professionalism, sought to understand their perspective, and worked toward a positive outcome.'\n          },\n          {\n            id: 3,\n            question: 'Give an example of a time when you failed to meet a goal or deadline. How did you handle it?',\n            category: 'Behavioral',\n            difficulty: 'Hard',\n            expectedAnswer: 'This question assesses your accountability, resilience, and ability to learn from failures.',\n            tips: 'Be honest about the failure, take responsibility, and emphasize what you learned and how you applied those lessons later.'\n          },\n          {\n            id: 4,\n            question: 'Tell me about a time when you had to influence someone without having direct authority over them.',\n            category: 'Behavioral',\n            difficulty: 'Hard',\n            expectedAnswer: \"This question evaluates your leadership, persuasion skills, and ability to build consensus.\",\n            tips: \"Focus on how you built relationships, understood others' motivations, and communicated effectively to achieve buy-in.\"\n          }\n        ],\n        sessions: []\n      }\n    ];\n\n    setInterviews(mockInterviews);\n  };\n\n  // Request camera permission\n  const requestCameraPermission = async () => {\n    try {\n      // Request both video and audio permissions\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n\n      // Save the stream reference\n      streamRef.current = stream;\n\n      // Set the stream as the video source\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n\n        // Ensure video plays when ready\n        videoRef.current.onloadedmetadata = () => {\n          videoRef.current.play().catch(e => {\n            console.error('Error playing video:', e);\n          });\n        };\n      }\n\n      setCameraPermission('granted');\n      console.log('Camera permission granted and stream connected');\n      return true;\n    } catch (err) {\n      console.error('Error accessing camera:', err);\n      setCameraPermission('denied');\n      alert('Camera access is required for the interview preparation. Please allow camera access and try again.');\n      return false;\n    }\n  };\n\n  // Start interview session\n  const startInterviewSession = async (interview) => {\n    const hasPermission = cameraPermission === 'granted' || await requestCameraPermission();\n    if (!hasPermission) {\n      alert('Camera permission is required for the interview session.');\n      return;\n    }\n\n    setCurrentInterview(interview);\n    setCurrentQuestion(interview.questions[0]);\n    setQuestionIndex(0);\n    setSessionInProgress(true);\n    setActiveTab('session');\n    setFeedback(null);\n  };\n\n  // End interview session\n  const endInterviewSession = () => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n    }\n    setSessionInProgress(false);\n    setIsRecording(false);\n    setCurrentInterview(null);\n    setCurrentQuestion(null);\n    setActiveTab('dashboard');\n\n    // Stop practice mode if active\n    if (practiceMode) {\n      endPracticeMode();\n    }\n  };\n\n  // Start recording\n  const startRecording = () => {\n    setIsRecording(true);\n    // In a real implementation, this would start recording the video\n    console.log('Recording started');\n  };\n\n  // Stop recording and analyze\n  const stopRecordingAndAnalyze = () => {\n    setIsRecording(false);\n    setLoading(true);\n\n    // In a real implementation, this would stop recording and send the video for analysis\n    // For now, we'll simulate the analysis with a timeout\n    setTimeout(() => {\n      // Mock feedback\n      const mockFeedback = {\n        overallScore: Math.floor(Math.random() * 30) + 70, // 70-100\n        technicalAccuracy: Math.floor(Math.random() * 30) + 70,\n        communicationScore: Math.floor(Math.random() * 30) + 70,\n        confidenceScore: Math.floor(Math.random() * 30) + 70,\n        bodyLanguageScore: Math.floor(Math.random() * 30) + 70,\n        strengths: [\n          'Clear explanation of technical concepts',\n          'Good problem-solving approach',\n          'Maintained good eye contact throughout'\n        ],\n        areasForImprovement: [\n          'Could provide more specific examples',\n          'Reduce use of filler words like \"um\" and \"like\"',\n          'Consider more concise answers to behavioral questions'\n        ],\n        detailedFeedback: [\n          {\n            timestamp: 45,\n            feedback: 'Excellent explanation of the algorithm',\n            category: 'Technical',\n            severity: 'Positive'\n          },\n          {\n            timestamp: 120,\n            feedback: 'Consider maintaining better posture here',\n            category: 'Body Language',\n            severity: 'Suggestion'\n          },\n          {\n            timestamp: 180,\n            feedback: 'Too many filler words in this response',\n            category: 'Communication',\n            severity: 'Minor Issue'\n          }\n        ]\n      };\n\n      setFeedback(mockFeedback);\n      setLoading(false);\n    }, 2000);\n  };\n\n  // Move to next question\n  const nextQuestion = () => {\n    if (currentInterview && questionIndex < currentInterview.questions.length - 1) {\n      setQuestionIndex(questionIndex + 1);\n      setCurrentQuestion(currentInterview.questions[questionIndex + 1]);\n      setFeedback(null);\n\n      // Capture activity if in practice mode\n      if (practiceMode) {\n        captureActivity();\n      }\n    } else {\n      // End of interview\n      if (practiceMode) {\n        endPracticeMode();\n      } else {\n        endInterviewSession();\n      }\n    }\n  };\n\n  // Practice mode functions\n  const startPracticeMode = async (interview) => {\n    // Request camera permission first\n    const hasPermission = cameraPermission === 'granted' || await requestCameraPermission();\n    if (!hasPermission) {\n      alert('Camera permission is required for practice mode.');\n      return;\n    }\n\n    setPracticeMode(true);\n    setActivityCapture([]);\n    setPracticeTimer(0);\n\n    // Start practice timer\n    const interval = setInterval(() => {\n      setPracticeTimer(prev => prev + 1);\n\n      // Capture activity every 30 seconds\n      if (practiceTimer % 30 === 0 && practiceTimer > 0) {\n        captureActivity();\n      }\n    }, 1000);\n\n    setPracticeTimerInterval(interval);\n\n    // Start the interview session with the selected interview\n    setCurrentInterview(interview);\n    setCurrentQuestion(interview.questions[0]);\n    setQuestionIndex(0);\n    setSessionInProgress(true);\n    setActiveTab('session');\n    setFeedback(null);\n  };\n\n  const endPracticeMode = () => {\n    setPracticeMode(false);\n\n    // Clear practice timer\n    if (practiceTimerInterval) {\n      clearInterval(practiceTimerInterval);\n      setPracticeTimerInterval(null);\n    }\n\n    // Generate practice report\n    generatePracticeReport();\n\n    // End the interview session\n    endInterviewSession();\n  };\n\n  const captureActivity = () => {\n    // In a real implementation, this would capture screenshots, typing activity, etc.\n    // For this demo, we'll just log the timestamp and question\n\n    const activity = {\n      timestamp: new Date().toISOString(),\n      questionIndex,\n      question: currentQuestion?.question,\n      isRecording,\n      elapsedTime: practiceTimer\n    };\n\n    setActivityCapture(prev => [...prev, activity]);\n\n    // Take a \"screenshot\" (in a real implementation)\n    console.log(`Activity captured at ${formatTime(practiceTimer)}`);\n  };\n\n  const generatePracticeReport = () => {\n    // In a real implementation, this would generate a comprehensive report\n    // For this demo, we'll just show a simple alert\n\n    const totalTime = formatTime(practiceTimer);\n    const questionsAttempted = activityCapture.filter(a => a.isRecording).length;\n\n    alert(`Practice Session Report:\n    - Total practice time: ${totalTime}\n    - Questions attempted: ${questionsAttempted}\n    - Activity captures: ${activityCapture.length}\n\n    Keep practicing to improve your interview skills!`);\n  };\n\n  // Helper function to format time (seconds to MM:SS)\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  // Render dashboard tab\n  const renderDashboard = () => (\n    <div className=\"interview-dashboard\">\n      <h2>AI Interview Preparation</h2>\n      <p className=\"dashboard-description\">\n        Practice your interview skills with our AI-powered interview simulator.\n        Get real-time feedback on your responses, body language, and communication style.\n      </p>\n\n      <div className=\"interview-list\">\n        <h3>Available Interview Templates</h3>\n        {interviews.map(interview => (\n          <div key={interview.id} className=\"interview-card\">\n            <div className=\"interview-card-header\">\n              <h4>{interview.title}</h4>\n              <span className={`interview-type ${interview.interviewType.toLowerCase()}`}>\n                {interview.interviewType}\n              </span>\n            </div>\n            <div className=\"interview-card-details\">\n              <p><strong>Position:</strong> {interview.jobTitle}</p>\n              <p><strong>Company:</strong> {interview.company}</p>\n              <p><strong>Difficulty:</strong> {interview.difficulty}</p>\n              <p><strong>Duration:</strong> {interview.duration} minutes</p>\n              <p><strong>Questions:</strong> {interview.questions.length}</p>\n            </div>\n            <div className=\"interview-card-actions\">\n              <div className=\"action-buttons\">\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={() => startInterviewSession(interview)}\n                >\n                  Start Practice\n                </button>\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={() => startPracticeMode(interview)}\n                >\n                  Practice with Camera\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  // Render interview session tab\n  const renderSession = () => (\n    <div className=\"interview-session\">\n      {currentQuestion && (\n        <>\n          <div className=\"session-header\">\n            <h2>{currentInterview.title}</h2>\n            <div className=\"question-counter\">\n              Question {questionIndex + 1} of {currentInterview.questions.length}\n            </div>\n          </div>\n\n          {/* Practice Mode Info */}\n          {practiceMode && (\n            <div className=\"practice-info\">\n              <div className=\"practice-timer\">\n                Practice Time: {formatTime(practiceTimer)}\n              </div>\n              <div className=\"practice-captures\">\n                Activity Captures: {activityCapture.length}\n              </div>\n            </div>\n          )}\n\n          <div className=\"session-content\">\n            <div className=\"video-container\">\n              <video\n                ref={videoRef}\n                autoPlay\n                playsInline\n                muted={false}\n                className={isRecording ? 'recording' : ''}\n                style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n              />\n              {isRecording && <div className=\"recording-indicator\">Recording</div>}\n              {practiceMode && <div className=\"activity-capture-indicator\">Activity Capture</div>}\n              {!cameraPermission && (\n                <div className=\"camera-permission-overlay\">\n                  <button onClick={requestCameraPermission} className=\"camera-permission-btn\">\n                    Enable Camera\n                  </button>\n                </div>\n              )}\n            </div>\n\n            <div className=\"question-container\">\n              <div className=\"question-card\">\n                <div className=\"question-category\">\n                  {currentQuestion.category} - {currentQuestion.difficulty}\n                </div>\n                <h3 className=\"question-text\">{currentQuestion.question}</h3>\n\n                <div className=\"question-actions\">\n                  {!isRecording ? (\n                    <button\n                      className=\"btn btn-primary\"\n                      onClick={startRecording}\n                      disabled={loading}\n                    >\n                      Start Answering\n                    </button>\n                  ) : (\n                    <button\n                      className=\"btn btn-danger\"\n                      onClick={stopRecordingAndAnalyze}\n                      disabled={loading}\n                    >\n                      Stop Recording\n                    </button>\n                  )}\n                </div>\n              </div>\n\n              {loading && (\n                <div className=\"loading-container\">\n                  <div className=\"loading-spinner\"></div>\n                  <p>Analyzing your response...</p>\n                </div>\n              )}\n\n              {feedback && (\n                <div className=\"feedback-container\">\n                  <h3>AI Feedback</h3>\n\n                  <div className=\"feedback-scores\">\n                    <div className=\"feedback-score\">\n                      <div className=\"score-label\">Overall</div>\n                      <div className=\"score-value\">{feedback.overallScore}</div>\n                    </div>\n                    <div className=\"feedback-score\">\n                      <div className=\"score-label\">Technical</div>\n                      <div className=\"score-value\">{feedback.technicalAccuracy}</div>\n                    </div>\n                    <div className=\"feedback-score\">\n                      <div className=\"score-label\">Communication</div>\n                      <div className=\"score-value\">{feedback.communicationScore}</div>\n                    </div>\n                    <div className=\"feedback-score\">\n                      <div className=\"score-label\">Confidence</div>\n                      <div className=\"score-value\">{feedback.confidenceScore}</div>\n                    </div>\n                    <div className=\"feedback-score\">\n                      <div className=\"score-label\">Body Language</div>\n                      <div className=\"score-value\">{feedback.bodyLanguageScore}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"feedback-details\">\n                    <div className=\"feedback-section\">\n                      <h4>Strengths</h4>\n                      <ul>\n                        {feedback.strengths.map((strength, index) => (\n                          <li key={index}>{strength}</li>\n                        ))}\n                      </ul>\n                    </div>\n\n                    <div className=\"feedback-section\">\n                      <h4>Areas for Improvement</h4>\n                      <ul>\n                        {feedback.areasForImprovement.map((area, index) => (\n                          <li key={index}>{area}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n\n                  <button\n                    className=\"btn btn-primary next-question-btn\"\n                    onClick={nextQuestion}\n                  >\n                    {questionIndex < currentInterview.questions.length - 1\n                      ? 'Next Question'\n                      : 'Finish Interview'}\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <button\n            className=\"btn btn-secondary end-session-btn\"\n            onClick={endInterviewSession}\n          >\n            End Session\n          </button>\n        </>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"interview-prep-container\">\n      {!sessionInProgress ? (\n        <div className=\"interview-tabs\">\n          <button\n            className={activeTab === 'dashboard' ? 'active' : ''}\n            onClick={() => setActiveTab('dashboard')}\n          >\n            Dashboard\n          </button>\n          <button\n            className={activeTab === 'history' ? 'active' : ''}\n            onClick={() => setActiveTab('history')}\n          >\n            History\n          </button>\n          <button\n            className={activeTab === 'settings' ? 'active' : ''}\n            onClick={() => setActiveTab('settings')}\n          >\n            Settings\n          </button>\n        </div>\n      ) : null}\n\n      <div className=\"interview-content\">\n        {activeTab === 'dashboard' && !sessionInProgress && renderDashboard()}\n        {activeTab === 'history' && !sessionInProgress && (\n          <div className=\"interview-history\">\n            <h2>Interview History</h2>\n            <p>Your past interview sessions will appear here.</p>\n          </div>\n        )}\n        {activeTab === 'settings' && !sessionInProgress && (\n          <div className=\"interview-settings\">\n            <h2>Settings</h2>\n            <p className=\"settings-description\">Customize your interview experience.</p>\n\n            <div className=\"settings-section\">\n              <h3>Camera Settings</h3>\n\n              <div className=\"setting-item\">\n                <div className=\"setting-info\">\n                  <h4>Camera Test</h4>\n                  <p>Test your camera before starting an interview.</p>\n                </div>\n                <div className=\"setting-control\">\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={requestCameraPermission}\n                  >\n                    Test Camera\n                  </button>\n                </div>\n              </div>\n\n              {cameraPermission === 'granted' && (\n                <div className=\"camera-preview-container\">\n                  <video\n                    ref={videoRef}\n                    autoPlay\n                    muted\n                    className=\"camera-preview\"\n                  />\n                  <p className=\"camera-status success\">Camera is working properly!</p>\n                </div>\n              )}\n\n              {cameraPermission === 'denied' && (\n                <div className=\"camera-error\">\n                  <p className=\"camera-status error\">Camera access denied. Please check your browser settings.</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        {(activeTab === 'session' || sessionInProgress) && renderSession()}\n      </div>\n    </div>\n  );\n}\n\nexport default InterviewPrep;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}