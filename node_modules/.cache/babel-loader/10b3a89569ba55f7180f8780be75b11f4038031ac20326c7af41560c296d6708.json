{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\pages\\\\CodingBattles.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport ScrollReveal from '../components/ScrollReveal';\nimport './CodingBattles.css';\nimport '../styles/animations.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CodingBattles() {\n  _s();\n  const navigate = useNavigate();\n  const [battles, setBattles] = useState([]);\n  const [tournaments, setTournaments] = useState([]);\n  const [activeTab, setActiveTab] = useState('upcoming');\n  const [activeTournamentTab, setActiveTournamentTab] = useState('open');\n  const [showOneVsOneModal, setShowOneVsOneModal] = useState(false);\n  const [matchmaking, setMatchmaking] = useState(false);\n  const [matchFound, setMatchFound] = useState(false);\n  const [opponent, setOpponent] = useState(null);\n  const [selectedDifficulty, setSelectedDifficulty] = useState('medium');\n  const [selectedCategory, setSelectedCategory] = useState('algorithms');\n  const [registeredBattles, setRegisteredBattles] = useState([]);\n  const [registeredTournaments, setRegisteredTournaments] = useState([]);\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [battleMode, setBattleMode] = useState('ai'); // 'ai' or 'friend'\n  const [friendBattleLink, setFriendBattleLink] = useState('');\n  const [showFriendLinkCopied, setShowFriendLinkCopied] = useState(false);\n  const [friendBattleId, setFriendBattleId] = useState('');\n  const [showJoinFriendBattle, setShowJoinFriendBattle] = useState(false);\n  useEffect(() => {\n    // Fetch battles based on active tab\n    fetchBattles(activeTab);\n\n    // Load registered battles from localStorage\n    const savedRegisteredBattles = localStorage.getItem('registeredBattles');\n    if (savedRegisteredBattles) {\n      setRegisteredBattles(JSON.parse(savedRegisteredBattles));\n    }\n\n    // Check if URL contains a friend battle ID\n    const urlParams = new URLSearchParams(window.location.search);\n    const battleId = urlParams.get('battle');\n    if (battleId) {\n      setFriendBattleId(battleId);\n      setShowJoinFriendBattle(true);\n    }\n  }, [activeTab]);\n  useEffect(() => {\n    // Fetch tournaments based on active tournament tab\n    fetchTournaments(activeTournamentTab);\n\n    // Load registered tournaments from localStorage\n    const savedRegisteredTournaments = localStorage.getItem('registeredTournaments');\n    if (savedRegisteredTournaments) {\n      setRegisteredTournaments(JSON.parse(savedRegisteredTournaments));\n    }\n  }, [activeTournamentTab]);\n\n  // Hide success message after 3 seconds\n  useEffect(() => {\n    if (showSuccessMessage) {\n      const timer = setTimeout(() => {\n        setShowSuccessMessage(false);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [showSuccessMessage]);\n  const fetchBattles = async type => {\n    // In a real implementation, this would call your API\n    // Simulate API call for battles\n    setTimeout(() => {\n      // Get current date/time for comparison\n      const now = new Date();\n\n      // Create a set of mock battles with different start times\n      const allMockBattles = [{\n        id: 1,\n        title: \"Binary Tree Traversal Challenge\",\n        description: \"Implement different traversal methods for binary trees and solve related problems.\",\n        participants: 24,\n        duration: 60,\n        difficulty: \"Medium\",\n        startTime: new Date(now.getTime() + 24 * 60 * 60 * 1000).toISOString(),\n        // 1 day in future\n        status: \"upcoming\"\n      }, {\n        id: 2,\n        title: \"Dynamic Programming Showdown\",\n        description: \"Solve a series of DP problems with increasing difficulty levels.\",\n        participants: 42,\n        duration: 90,\n        difficulty: \"Hard\",\n        startTime: new Date(now.getTime() + 2 * 24 * 60 * 60 * 1000).toISOString(),\n        // 2 days in future\n        status: \"upcoming\"\n      }, {\n        id: 3,\n        title: \"Frontend Optimization Battle\",\n        description: \"Optimize React components and improve rendering performance.\",\n        participants: 18,\n        duration: 45,\n        difficulty: \"Medium\",\n        startTime: new Date(now.getTime() + 3 * 24 * 60 * 60 * 1000).toISOString(),\n        // 3 days in future\n        status: \"upcoming\"\n      }, {\n        id: 4,\n        title: \"Graph Algorithms Challenge\",\n        description: \"Implement and optimize various graph traversal and shortest path algorithms.\",\n        participants: 31,\n        duration: 75,\n        difficulty: \"Hard\",\n        startTime: new Date(now.getTime() - 30 * 60 * 1000).toISOString(),\n        // 30 minutes ago (live)\n        endTime: new Date(now.getTime() + 45 * 60 * 1000).toISOString(),\n        // Ends 45 minutes from now\n        status: \"live\"\n      }, {\n        id: 5,\n        title: \"React State Management Battle\",\n        description: \"Build efficient state management solutions for complex React applications.\",\n        participants: 27,\n        duration: 60,\n        difficulty: \"Medium\",\n        startTime: new Date(now.getTime() - 15 * 60 * 1000).toISOString(),\n        // 15 minutes ago (live)\n        endTime: new Date(now.getTime() + 45 * 60 * 1000).toISOString(),\n        // Ends 45 minutes from now\n        status: \"live\"\n      }, {\n        id: 6,\n        title: \"Sorting Algorithms Showdown\",\n        description: \"Implement and optimize various sorting algorithms for different data scenarios.\",\n        participants: 36,\n        duration: 45,\n        difficulty: \"Easy\",\n        startTime: new Date(now.getTime() - 10 * 60 * 1000).toISOString(),\n        // 10 minutes ago (live)\n        endTime: new Date(now.getTime() + 35 * 60 * 1000).toISOString(),\n        // Ends 35 minutes from now\n        status: \"live\"\n      }, {\n        id: 7,\n        title: \"Database Query Optimization\",\n        description: \"Optimize complex SQL queries and database schema designs.\",\n        participants: 22,\n        duration: 60,\n        difficulty: \"Medium\",\n        startTime: new Date(now.getTime() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n        // 2 days ago (past)\n        endTime: new Date(now.getTime() - 2 * 24 * 60 * 60 * 1000 + 60 * 60 * 1000).toISOString(),\n        // Ended 2 days ago\n        status: \"past\"\n      }, {\n        id: 8,\n        title: \"String Manipulation Challenge\",\n        description: \"Solve various string manipulation and pattern matching problems.\",\n        participants: 45,\n        duration: 45,\n        difficulty: \"Easy\",\n        startTime: new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000).toISOString(),\n        // 3 days ago (past)\n        endTime: new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000 + 45 * 60 * 1000).toISOString(),\n        // Ended 3 days ago\n        status: \"past\"\n      }, {\n        id: 9,\n        title: \"System Design Interview Prep\",\n        description: \"Practice system design interview questions with real-time feedback.\",\n        participants: 19,\n        duration: 90,\n        difficulty: \"Hard\",\n        startTime: new Date(now.getTime() - 4 * 24 * 60 * 60 * 1000).toISOString(),\n        // 4 days ago (past)\n        endTime: new Date(now.getTime() - 4 * 24 * 60 * 60 * 1000 + 90 * 60 * 1000).toISOString(),\n        // Ended 4 days ago\n        status: \"past\"\n      }];\n\n      // Filter battles based on the active tab\n      let filteredBattles;\n      switch (type) {\n        case 'upcoming':\n          filteredBattles = allMockBattles.filter(battle => battle.status === 'upcoming');\n          break;\n        case 'live':\n          filteredBattles = allMockBattles.filter(battle => battle.status === 'live');\n          break;\n        case 'past':\n          filteredBattles = allMockBattles.filter(battle => battle.status === 'past');\n          break;\n        default:\n          filteredBattles = allMockBattles.filter(battle => battle.status === 'upcoming');\n      }\n      setBattles(filteredBattles);\n    }, 500);\n  };\n  const fetchTournaments = async status => {\n    // Simulate API call for tournaments\n    setTimeout(() => {\n      const mockTournaments = [{\n        id: 1,\n        title: \"Algorithm Masters Championship\",\n        description: \"A multi-round tournament testing your skills in algorithms and data structures.\",\n        participants: 128,\n        startDate: \"2023-06-15\",\n        endDate: \"2023-06-30\",\n        prize: \"$5,000\",\n        difficulty: \"Advanced\",\n        rounds: 4,\n        aiMatchmaking: true,\n        skillLevel: \"85% match for your skill level\"\n      }, {\n        id: 2,\n        title: \"Web Dev Showdown\",\n        description: \"Compete in creating responsive web applications with React and Node.js.\",\n        participants: 64,\n        startDate: \"2023-07-01\",\n        endDate: \"2023-07-10\",\n        prize: \"$3,000\",\n        difficulty: \"Intermediate\",\n        rounds: 3,\n        aiMatchmaking: true,\n        skillLevel: \"92% match for your skill level\"\n      }, {\n        id: 3,\n        title: \"Machine Learning Challenge\",\n        description: \"Build and optimize ML models to solve real-world problems.\",\n        participants: 96,\n        startDate: \"2023-07-15\",\n        endDate: \"2023-07-25\",\n        prize: \"$4,500\",\n        difficulty: \"Expert\",\n        rounds: 3,\n        aiMatchmaking: true,\n        skillLevel: \"78% match for your skill level\"\n      }];\n      setTournaments(mockTournaments);\n    }, 500);\n  };\n  const registerForBattle = battle => {\n    // Check if user is logged in\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n      return;\n    }\n\n    // Check if already registered\n    if (registeredBattles.includes(battle.id)) {\n      setSuccessMessage('You are already registered for this battle!');\n      setShowSuccessMessage(true);\n      return;\n    }\n\n    // In a real implementation, this would call your API to register the user\n    console.log(`Registered for battle ${battle.id}`);\n\n    // Add to registered battles\n    const updatedRegisteredBattles = [...registeredBattles, battle.id];\n    setRegisteredBattles(updatedRegisteredBattles);\n\n    // Save to localStorage\n    localStorage.setItem('registeredBattles', JSON.stringify(updatedRegisteredBattles));\n\n    // Show success message\n    setSuccessMessage(`Successfully registered for \"${battle.title}\"! You'll receive a notification when the battle starts.`);\n    setShowSuccessMessage(true);\n  };\n  const joinBattle = battleId => {\n    // Check if user is logged in\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n      return;\n    }\n\n    // Find the battle by ID\n    const battle = battles.find(b => b.id === battleId);\n    if (!battle) {\n      console.error(`Battle with ID ${battleId} not found`);\n      return;\n    }\n\n    // Check if the battle is live\n    if (battle.status !== 'live') {\n      setSuccessMessage('This battle is not currently live.');\n      setShowSuccessMessage(true);\n      return;\n    }\n\n    // Create a mock opponent based on battle data\n    const mockOpponent = {\n      name: generateOpponentName(),\n      rating: Math.floor(Math.random() * 500) + 1500,\n      // Random rating between 1500-2000\n      winRate: `${Math.floor(Math.random() * 30) + 50}%`,\n      // Random win rate between 50-80%\n      preferredLanguage: [\"Python\", \"JavaScript\", \"Java\", \"C++\"][Math.floor(Math.random() * 4)],\n      skillLevel: `${Math.floor(Math.random() * 15) + 80}% match for your skill level`,\n      // 80-95% match\n      avatar: `https://randomuser.me/api/portraits/${Math.random() > 0.5 ? 'men' : 'women'}/${Math.floor(Math.random() * 70)}.jpg`\n    };\n\n    // Store opponent data in localStorage\n    localStorage.setItem('currentOpponent', JSON.stringify(mockOpponent));\n\n    // Calculate remaining time for the battle\n    const now = new Date();\n    const endTime = new Date(battle.endTime);\n    const remainingTimeInMinutes = Math.max(1, Math.floor((endTime - now) / (60 * 1000)));\n\n    // Store battle information in localStorage\n    const battleInfo = {\n      id: battleId,\n      title: battle.title,\n      difficulty: battle.difficulty || 'Medium',\n      category: battle.category || 'Algorithms',\n      opponent: mockOpponent,\n      startTime: Date.now(),\n      duration: remainingTimeInMinutes,\n      originalDuration: battle.duration || 30\n    };\n    localStorage.setItem('currentBattle', JSON.stringify(battleInfo));\n\n    // Add this battle to registered battles if not already there\n    if (!registeredBattles.includes(battleId)) {\n      const updatedRegisteredBattles = [...registeredBattles, battleId];\n      setRegisteredBattles(updatedRegisteredBattles);\n      localStorage.setItem('registeredBattles', JSON.stringify(updatedRegisteredBattles));\n    }\n\n    // Show success message and navigate to the battle page\n    setSuccessMessage(`Joining battle: ${battle.title}`);\n    setShowSuccessMessage(true);\n    setTimeout(() => {\n      navigate(`/battle/${battleId}`);\n    }, 1000);\n  };\n\n  // Helper function to generate random opponent names\n  const generateOpponentName = () => {\n    const firstNames = [\"Alex\", \"Jordan\", \"Taylor\", \"Morgan\", \"Casey\", \"Riley\", \"Avery\", \"Quinn\", \"Skyler\", \"Dakota\"];\n    const lastNames = [\"Chen\", \"Smith\", \"Johnson\", \"Williams\", \"Jones\", \"Brown\", \"Davis\", \"Miller\", \"Wilson\", \"Moore\"];\n    return `${firstNames[Math.floor(Math.random() * firstNames.length)]} ${lastNames[Math.floor(Math.random() * lastNames.length)]}`;\n  };\n\n  // Create a friend battle and generate a shareable link\n  const createFriendBattle = () => {\n    // Check if user is logged in\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n      return;\n    }\n\n    // Generate a unique battle ID\n    const battleId = `friend-${Date.now()}-${Math.floor(Math.random() * 1000)}`;\n\n    // Create battle information\n    const battleInfo = {\n      id: battleId,\n      title: \"Friend Battle\",\n      difficulty: selectedDifficulty,\n      category: selectedCategory,\n      createdBy: localStorage.getItem('userName') || 'User',\n      createdAt: new Date().toISOString(),\n      status: 'waiting',\n      // waiting for friend to join\n      isFriendBattle: true\n    };\n\n    // Save battle information to localStorage\n    localStorage.setItem(`friendBattle_${battleId}`, JSON.stringify(battleInfo));\n\n    // Generate shareable link\n    const baseUrl = window.location.origin;\n    const shareableLink = `${baseUrl}/battles?battle=${battleId}`;\n\n    // Set the link in state\n    setFriendBattleLink(shareableLink);\n  };\n\n  // Copy friend battle link to clipboard\n  const copyFriendBattleLink = () => {\n    navigator.clipboard.writeText(friendBattleLink).then(() => {\n      setShowFriendLinkCopied(true);\n      setTimeout(() => {\n        setShowFriendLinkCopied(false);\n      }, 3000);\n    });\n  };\n\n  // Join a friend battle\n  const joinFriendBattle = battleId => {\n    // Check if user is logged in\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n      return;\n    }\n\n    // Get battle information from localStorage\n    const battleInfo = localStorage.getItem(`friendBattle_${battleId}`);\n    if (!battleInfo) {\n      setSuccessMessage('Battle not found or has expired.');\n      setShowSuccessMessage(true);\n      return;\n    }\n    const battle = JSON.parse(battleInfo);\n\n    // Update battle status\n    battle.status = 'active';\n    battle.joinedBy = localStorage.getItem('userName') || 'Friend';\n    battle.joinedAt = new Date().toISOString();\n\n    // Save updated battle information\n    localStorage.setItem(`friendBattle_${battleId}`, JSON.stringify(battle));\n\n    // Create opponent information\n    const opponent = {\n      name: battle.createdBy,\n      rating: Math.floor(Math.random() * 500) + 1500,\n      winRate: `${Math.floor(Math.random() * 30) + 50}%`,\n      preferredLanguage: \"JavaScript\",\n      skillLevel: \"Friend Battle\",\n      avatar: `https://randomuser.me/api/portraits/${Math.random() > 0.5 ? 'men' : 'women'}/${Math.floor(Math.random() * 70)}.jpg`\n    };\n\n    // Save opponent information\n    localStorage.setItem('currentOpponent', JSON.stringify(opponent));\n\n    // Create battle information for the arena\n    const arenaInfo = {\n      id: battleId,\n      title: \"Friend Battle with \" + battle.createdBy,\n      difficulty: battle.difficulty,\n      category: battle.category,\n      opponent: opponent,\n      startTime: Date.now(),\n      duration: 30,\n      // Default 30 minutes\n      isFriendBattle: true\n    };\n    localStorage.setItem('currentBattle', JSON.stringify(arenaInfo));\n\n    // Show success message and navigate to battle arena\n    setSuccessMessage('Joining friend battle...');\n    setShowSuccessMessage(true);\n    setTimeout(() => {\n      navigate(`/battle/${battleId}`);\n    }, 1000);\n  };\n\n  // Start a friend battle (for the creator)\n  const startFriendBattle = () => {\n    // Extract battle ID from the link\n    const url = new URL(friendBattleLink);\n    const battleId = url.searchParams.get('battle');\n    if (!battleId) {\n      setSuccessMessage('Invalid battle link.');\n      setShowSuccessMessage(true);\n      return;\n    }\n\n    // Get battle information\n    const battleInfo = localStorage.getItem(`friendBattle_${battleId}`);\n    if (!battleInfo) {\n      setSuccessMessage('Battle not found or has expired.');\n      setShowSuccessMessage(true);\n      return;\n    }\n    const battle = JSON.parse(battleInfo);\n\n    // Check if friend has joined\n    if (battle.status !== 'active') {\n      setSuccessMessage('Waiting for your friend to join...');\n      setShowSuccessMessage(true);\n      return;\n    }\n\n    // Create opponent information\n    const opponent = {\n      name: battle.joinedBy,\n      rating: Math.floor(Math.random() * 500) + 1500,\n      winRate: `${Math.floor(Math.random() * 30) + 50}%`,\n      preferredLanguage: \"JavaScript\",\n      skillLevel: \"Friend Battle\",\n      avatar: `https://randomuser.me/api/portraits/${Math.random() > 0.5 ? 'men' : 'women'}/${Math.floor(Math.random() * 70)}.jpg`\n    };\n\n    // Save opponent information\n    localStorage.setItem('currentOpponent', JSON.stringify(opponent));\n\n    // Create battle information for the arena\n    const arenaInfo = {\n      id: battleId,\n      title: \"Friend Battle with \" + battle.joinedBy,\n      difficulty: battle.difficulty,\n      category: battle.category,\n      opponent: opponent,\n      startTime: Date.now(),\n      duration: 30,\n      // Default 30 minutes\n      isFriendBattle: true\n    };\n    localStorage.setItem('currentBattle', JSON.stringify(arenaInfo));\n\n    // Close the modal and navigate to battle arena\n    setShowOneVsOneModal(false);\n\n    // Show success message and navigate to battle arena\n    setSuccessMessage('Starting friend battle...');\n    setShowSuccessMessage(true);\n    setTimeout(() => {\n      navigate(`/battle/${battleId}`);\n    }, 1000);\n  };\n  const viewBattleResults = battleId => {\n    // Check if user is logged in\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n      return;\n    }\n\n    // Find the battle by ID\n    const battle = battles.find(b => b.id === battleId);\n    if (!battle) {\n      console.error(`Battle with ID ${battleId} not found`);\n      return;\n    }\n\n    // Check if the battle is past\n    if (battle.status !== 'past') {\n      setSuccessMessage('Results are only available for completed battles.');\n      setShowSuccessMessage(true);\n      return;\n    }\n\n    // Check if a result already exists\n    const existingResult = localStorage.getItem(`battleResult_${battleId}`);\n    if (!existingResult) {\n      // Generate a random opponent name\n      const opponentName = generateOpponentName();\n\n      // Create a mock result with more realistic data\n      const userProgress = Math.floor(Math.random() * 100);\n      const opponentProgress = Math.floor(Math.random() * 100);\n      const userWon = userProgress > opponentProgress;\n\n      // Calculate a realistic time spent based on battle duration\n      const battleDuration = battle.duration * 60 || 1800; // Convert to seconds, default 30 minutes\n      const timeSpent = Math.floor(Math.random() * (battleDuration * 0.8)) + Math.floor(battleDuration * 0.2); // Between 20% and 100% of duration\n\n      // Create problem titles based on battle title\n      let problemTitle = \"Algorithm Challenge\";\n      if (battle.title.includes(\"Tree\")) problemTitle = \"Binary Tree Traversal\";else if (battle.title.includes(\"Dynamic\")) problemTitle = \"Fibonacci Sequence\";else if (battle.title.includes(\"Graph\")) problemTitle = \"Shortest Path Algorithm\";else if (battle.title.includes(\"String\")) problemTitle = \"String Pattern Matching\";else if (battle.title.includes(\"Sort\")) problemTitle = \"Quick Sort Implementation\";else if (battle.title.includes(\"Database\")) problemTitle = \"SQL Query Optimization\";else if (battle.title.includes(\"React\")) problemTitle = \"React Component Optimization\";\n      const mockResult = {\n        battleId,\n        battleTitle: battle.title,\n        userWon,\n        opponentName,\n        problem: problemTitle,\n        userProgress: userWon ? Math.max(userProgress, opponentProgress + 5) : userProgress,\n        opponentProgress: !userWon ? Math.max(opponentProgress, userProgress + 5) : opponentProgress,\n        timeSpent,\n        completedAt: battle.endTime\n      };\n\n      // Save to localStorage\n      localStorage.setItem(`battleResult_${battleId}`, JSON.stringify(mockResult));\n    }\n\n    // Show success message and navigate to the battle results page\n    setSuccessMessage('Loading battle results...');\n    setShowSuccessMessage(true);\n    setTimeout(() => {\n      navigate(`/battle/${battleId}/results`);\n    }, 1000);\n  };\n  const registerForTournament = tournament => {\n    // Check if user is logged in\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n      return;\n    }\n\n    // Check if already registered\n    if (registeredTournaments.includes(tournament.id)) {\n      setSuccessMessage('You are already registered for this tournament!');\n      setShowSuccessMessage(true);\n      return;\n    }\n\n    // In a real implementation, this would call your API to register the user\n    console.log(`Registered for tournament ${tournament.id}`);\n\n    // Add to registered tournaments\n    const updatedRegisteredTournaments = [...registeredTournaments, tournament.id];\n    setRegisteredTournaments(updatedRegisteredTournaments);\n\n    // Save to localStorage\n    localStorage.setItem('registeredTournaments', JSON.stringify(updatedRegisteredTournaments));\n\n    // Show success message\n    setSuccessMessage(`Successfully registered for \"${tournament.title}\"! You'll receive AI-personalized preparation recommendations soon.`);\n    setShowSuccessMessage(true);\n  };\n  const startOneVsOneMatchmaking = () => {\n    setMatchmaking(true);\n\n    // Simulate AI matchmaking process\n    setTimeout(() => {\n      setMatchmaking(false);\n      setMatchFound(true);\n      setOpponent({\n        name: \"Alex Chen\",\n        rating: 1842,\n        winRate: \"68%\",\n        preferredLanguage: \"Python\",\n        skillLevel: \"92% match for your skill level\",\n        avatar: \"https://randomuser.me/api/portraits/men/32.jpg\"\n      });\n    }, 3000);\n  };\n  const acceptMatch = () => {\n    // Show a message that we're redirecting\n    alert(\"Match accepted! Redirecting to battle arena...\");\n\n    // Close the modal and reset state\n    setShowOneVsOneModal(false);\n    setMatchFound(false);\n\n    // Generate a unique battle ID for this match\n    const battleId = Date.now(); // Simple way to generate a unique ID\n\n    // Store opponent data in localStorage so it can be accessed in the battle page\n    if (opponent) {\n      localStorage.setItem('currentOpponent', JSON.stringify(opponent));\n    }\n\n    // Store battle information in localStorage\n    const battleInfo = {\n      id: battleId,\n      difficulty: selectedDifficulty,\n      category: selectedCategory,\n      opponent: opponent,\n      startTime: Date.now()\n    };\n    localStorage.setItem('currentBattle', JSON.stringify(battleInfo));\n\n    // Add this battle to registered battles\n    const registeredBattles = JSON.parse(localStorage.getItem('registeredBattles') || '[]');\n    if (!registeredBattles.includes(battleId)) {\n      registeredBattles.push(battleId);\n      localStorage.setItem('registeredBattles', JSON.stringify(registeredBattles));\n    }\n\n    // Navigate to the battle page with a slight delay to allow the alert to be seen\n    setTimeout(() => {\n      navigate(`/battle/${battleId}`);\n    }, 500);\n  };\n  const declineMatch = () => {\n    setMatchFound(false);\n    setOpponent(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"battles-container\",\n    children: [showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message fade-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-icon pulse\",\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-text\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ScrollReveal, {\n      animation: \"fade-in-down\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battles-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"animated-gradient\",\n          children: \"Coding Battles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Compete in real-time challenges and climb the leaderboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollReveal, {\n      animation: \"fade-in-up\",\n      delay: 0.2,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-toggle-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTab !== 'tournaments' ? 'active' : '',\n            onClick: () => setActiveTab('upcoming'),\n            children: \"Individual Battles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTab === 'tournaments' ? 'active' : '',\n            onClick: () => setActiveTab('tournaments'),\n            children: \"Tournaments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/battle/practice\",\n          className: \"practice-mode-battles-button hover-lift\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"practice-icon\",\n            children: \"\\uD83C\\uDFCB\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Practice Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 7\n    }, this), activeTab !== 'tournaments' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ScrollReveal, {\n        animation: \"fade-in-up\",\n        delay: 0.3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"one-vs-one-banner card-shine\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"banner-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"banner-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"1v1 AI-Matched Coding Battles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Challenge opponents at your skill level in real-time coding duels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"find-opponent-btn pulse\",\n              onClick: () => setShowOneVsOneModal(true),\n              children: [\"Find Opponent\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-glow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScrollReveal, {\n        animation: \"fade-in-up\",\n        delay: 0.4,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battles-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTab === 'upcoming' ? 'active' : '',\n            onClick: () => setActiveTab('upcoming'),\n            children: \"Upcoming Battles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTab === 'live' ? 'active' : '',\n            onClick: () => setActiveTab('live'),\n            children: \"Live Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTab === 'past' ? 'active' : '',\n            onClick: () => setActiveTab('past'),\n            children: \"Past Battles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScrollReveal, {\n        animation: \"fade-in-up\",\n        delay: 0.5,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battles-list stagger-fade-up\",\n          children: battles.map((battle, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"battle-card hover-lift card-shine\",\n            \"data-index\": index,\n            style: {\n              \"--stagger-delay\": \"0.1s\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"battle-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: battle.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"battle-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"difficulty\",\n                  children: battle.difficulty\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 792,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"participants\",\n                  children: [battle.participants, \" Participants\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 793,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"duration\",\n                  children: [battle.duration, \" mins\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 794,\n                  columnNumber: 23\n                }, this), activeTab === 'upcoming' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"start-time\",\n                  children: [\"Starts: \", new Date(battle.startTime).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 25\n                }, this), activeTab === 'live' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"end-time\",\n                  children: [\"Ends: \", new Date(battle.endTime).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 801,\n                  columnNumber: 25\n                }, this), activeTab === 'past' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"end-time\",\n                  children: [\"Ended: \", new Date(battle.endTime).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 806,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: battle.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"battle-action\",\n              children: [activeTab === 'upcoming' && (registeredBattles.includes(battle.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"registered-btn\",\n                disabled: true,\n                children: \"Registered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"register-btn btn-primary\",\n                onClick: () => registerForBattle(battle),\n                children: [\"Register\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"btn-glow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 823,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 25\n              }, this)), activeTab === 'live' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"join-btn btn-primary pulse\",\n                onClick: () => joinBattle(battle.id),\n                children: [\"Join Now\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"btn-glow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 833,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 23\n              }, this), activeTab === 'past' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"view-btn btn-primary\",\n                onClick: () => viewBattleResults(battle.id),\n                children: [\"View Results\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"btn-glow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 842,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 837,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 19\n            }, this)]\n          }, battle.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ScrollReveal, {\n        animation: \"fade-in-up\",\n        delay: 0.3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tournament-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"animated-gradient\",\n            children: \"AI-Powered Tournaments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Multi-round competitions with AI matchmaking based on your skill level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScrollReveal, {\n        animation: \"fade-in-up\",\n        delay: 0.4,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tournaments-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTournamentTab === 'open' ? 'active' : '',\n            onClick: () => setActiveTournamentTab('open'),\n            children: \"Open Registration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTournamentTab === 'upcoming' ? 'active' : '',\n            onClick: () => setActiveTournamentTab('upcoming'),\n            children: \"Upcoming\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTournamentTab === 'past' ? 'active' : '',\n            onClick: () => setActiveTournamentTab('past'),\n            children: \"Past Tournaments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScrollReveal, {\n        animation: \"fade-in-up\",\n        delay: 0.5,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tournaments-list stagger-fade-up\",\n          children: tournaments.map((tournament, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tournament-card hover-lift card-shine\",\n            \"data-index\": index,\n            style: {\n              \"--stagger-delay\": \"0.1s\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tournament-header-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: tournament.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tournament-prize pulse\",\n                children: tournament.prize\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 894,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tournament-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tournament-meta-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"meta-label\",\n                  children: \"Difficulty:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 899,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"meta-value difficulty\",\n                  children: tournament.difficulty\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 900,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 898,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tournament-meta-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"meta-label\",\n                  children: \"Participants:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"meta-value\",\n                  children: tournament.participants\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 904,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 902,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tournament-meta-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"meta-label\",\n                  children: \"Rounds:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 907,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"meta-value\",\n                  children: tournament.rounds\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 908,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tournament-meta-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"meta-label\",\n                  children: \"Dates:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 911,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"meta-value\",\n                  children: [tournament.startDate, \" to \", tournament.endDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"tournament-description\",\n              children: tournament.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ai-match-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ai-icon pulse\",\n                children: \"\\uD83E\\uDDE0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ai-match-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"AI Matchmaking:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 921,\n                  columnNumber: 23\n                }, this), \" \", tournament.skillLevel]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 918,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tournament-action\",\n              children: [registeredTournaments.includes(tournament.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"registered-tournament-btn\",\n                disabled: true,\n                children: \"Registered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 927,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"register-tournament-btn btn-primary\",\n                onClick: () => registerForTournament(tournament),\n                children: [\"Register Now\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"btn-glow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 936,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 931,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"details-btn btn-arrow\",\n                onClick: () => navigate(`/tournaments/${tournament.id}`),\n                children: [\"View Details\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"arrow\",\n                  children: \"\\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 944,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 939,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 19\n            }, this)]\n          }, tournament.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), showOneVsOneModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay fade-in\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"one-vs-one-modal scale-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal\",\n          onClick: () => setShowOneVsOneModal(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 13\n        }, this), !matchmaking && !matchFound && !friendBattleLink ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"animated-gradient\",\n            children: \"Choose Battle Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"modal-subtitle\",\n            children: \"Select how you want to battle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"battle-mode-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `battle-mode-btn ${battleMode === 'ai' ? 'active' : ''}`,\n              onClick: () => setBattleMode('ai'),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mode-icon\",\n                children: \"\\uD83E\\uDDE0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mode-title\",\n                children: \"AI Matchmaking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mode-description\",\n                children: \"Get matched with an opponent of similar skill level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 966,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `battle-mode-btn ${battleMode === 'friend' ? 'active' : ''}`,\n              onClick: () => setBattleMode('friend'),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mode-icon\",\n                children: \"\\uD83D\\uDC65\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 979,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mode-title\",\n                children: \"Play with Friend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mode-description\",\n                children: \"Create a battle and share the link with a friend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 981,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 975,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 965,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"matchmaking-options stagger-fade-up\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-group\",\n              \"data-index\": \"0\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Difficulty Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 987,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: selectedDifficulty === 'easy' ? 'active' : '',\n                  onClick: () => setSelectedDifficulty('easy'),\n                  children: \"Easy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 989,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: selectedDifficulty === 'medium' ? 'active' : '',\n                  onClick: () => setSelectedDifficulty('medium'),\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 995,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: selectedDifficulty === 'hard' ? 'active' : '',\n                  onClick: () => setSelectedDifficulty('hard'),\n                  children: \"Hard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1001,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 988,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-group\",\n              \"data-index\": \"1\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Problem Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1011,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: selectedCategory === 'algorithms' ? 'active' : '',\n                  onClick: () => setSelectedCategory('algorithms'),\n                  children: \"Algorithms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1013,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: selectedCategory === 'data-structures' ? 'active' : '',\n                  onClick: () => setSelectedCategory('data-structures'),\n                  children: \"Data Structures\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1019,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: selectedCategory === 'system-design' ? 'active' : '',\n                  onClick: () => setSelectedCategory('system-design'),\n                  children: \"System Design\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1025,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1012,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1010,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 17\n          }, this), battleMode === 'ai' ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-matchmaking-btn btn-primary pulse\",\n            onClick: startOneVsOneMatchmaking,\n            children: [\"Start AI Matchmaking\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-glow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1041,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1036,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create-friend-battle-btn btn-primary pulse\",\n            onClick: createFriendBattle,\n            children: [\"Create Friend Battle\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-glow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : matchmaking ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"matchmaking-progress fade-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Finding Your Opponent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1056,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Our AI is analyzing skill levels to find your perfect match...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 15\n        }, this) : matchFound ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-found fade-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"pulse\",\n            children: \"Match Found!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1061,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"opponent-card hover-lift\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: opponent.avatar,\n              alt: opponent.name,\n              className: \"opponent-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"opponent-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: opponent.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1065,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"opponent-stats stagger-fade-up\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat\",\n                  \"data-index\": \"0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-label\",\n                    children: \"Rating:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1068,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-value\",\n                    children: opponent.rating\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1069,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1067,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat\",\n                  \"data-index\": \"1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-label\",\n                    children: \"Win Rate:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1072,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-value\",\n                    children: opponent.winRate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1073,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1071,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat\",\n                  \"data-index\": \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-label\",\n                    children: \"Language:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1076,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-value\",\n                    children: opponent.preferredLanguage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1077,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1075,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1066,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1064,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-match-indicator match-modal\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ai-icon pulse\",\n              children: \"\\uD83E\\uDDE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ai-match-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"AI Matchmaking:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1086,\n                columnNumber: 21\n              }, this), \" \", opponent.skillLevel]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"match-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"accept-match-btn btn-primary pulse\",\n              onClick: acceptMatch,\n              children: [\"Accept Match\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-glow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1093,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"decline-match-btn\",\n              onClick: declineMatch,\n              children: \"Decline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1095,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 15\n        }, this) : friendBattleLink ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friend-battle-created fade-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"pulse\",\n            children: \"Friend Battle Created!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"friend-battle-instructions\",\n            children: \"Share this link with your friend to start the battle:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"friend-battle-link-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"friend-battle-link\",\n              value: friendBattleLink,\n              readOnly: true,\n              onClick: e => e.target.select()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"copy-link-btn\",\n              onClick: copyFriendBattleLink,\n              children: showFriendLinkCopied ? 'Copied!' : 'Copy'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"friend-battle-status\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-icon pulse\",\n              children: \"\\u23F3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Waiting for your friend to join...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"friend-battle-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"check-status-btn btn-primary\",\n              onClick: startFriendBattle,\n              children: [\"Check Status\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-glow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1132,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-new-btn\",\n              onClick: () => setFriendBattleLink(''),\n              children: \"Create New Battle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1134,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1101,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 9\n    }, this), showJoinFriendBattle && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay fade-in\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join-friend-battle-modal scale-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal\",\n          onClick: () => setShowJoinFriendBattle(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"pulse\",\n          children: \"Friend Battle Invitation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You've been invited to join a coding battle with a friend!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-details-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"battle-icon\",\n            children: \"\\uD83D\\uDC65\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"battle-preview-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Friend Battle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Join now to start coding together in real-time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"join-battle-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"join-battle-btn btn-primary pulse\",\n            onClick: () => joinFriendBattle(friendBattleId),\n            children: [\"Join Battle\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-glow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1170,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"decline-battle-btn\",\n            onClick: () => {\n              setShowJoinFriendBattle(false);\n              // Remove battle ID from URL without refreshing\n              window.history.replaceState({}, document.title, window.location.pathname);\n            },\n            children: \"Decline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1172,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1150,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1149,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 698,\n    columnNumber: 5\n  }, this);\n}\n_s(CodingBattles, \"a0EQmjQnJ8cpUCBwIlrXv2rGrq4=\", false, function () {\n  return [useNavigate];\n});\n_c = CodingBattles;\nexport default CodingBattles;\nvar _c;\n$RefreshReg$(_c, \"CodingBattles\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","ScrollReveal","jsxDEV","_jsxDEV","Fragment","_Fragment","CodingBattles","_s","navigate","battles","setBattles","tournaments","setTournaments","activeTab","setActiveTab","activeTournamentTab","setActiveTournamentTab","showOneVsOneModal","setShowOneVsOneModal","matchmaking","setMatchmaking","matchFound","setMatchFound","opponent","setOpponent","selectedDifficulty","setSelectedDifficulty","selectedCategory","setSelectedCategory","registeredBattles","setRegisteredBattles","registeredTournaments","setRegisteredTournaments","showSuccessMessage","setShowSuccessMessage","successMessage","setSuccessMessage","battleMode","setBattleMode","friendBattleLink","setFriendBattleLink","showFriendLinkCopied","setShowFriendLinkCopied","friendBattleId","setFriendBattleId","showJoinFriendBattle","setShowJoinFriendBattle","fetchBattles","savedRegisteredBattles","localStorage","getItem","JSON","parse","urlParams","URLSearchParams","window","location","search","battleId","get","fetchTournaments","savedRegisteredTournaments","timer","setTimeout","clearTimeout","type","now","Date","allMockBattles","id","title","description","participants","duration","difficulty","startTime","getTime","toISOString","status","endTime","filteredBattles","filter","battle","mockTournaments","startDate","endDate","prize","rounds","aiMatchmaking","skillLevel","registerForBattle","isLoggedIn","includes","console","log","updatedRegisteredBattles","setItem","stringify","joinBattle","find","b","error","mockOpponent","name","generateOpponentName","rating","Math","floor","random","winRate","preferredLanguage","avatar","remainingTimeInMinutes","max","battleInfo","category","originalDuration","firstNames","lastNames","length","createFriendBattle","createdBy","createdAt","isFriendBattle","baseUrl","origin","shareableLink","copyFriendBattleLink","navigator","clipboard","writeText","then","joinFriendBattle","joinedBy","joinedAt","arenaInfo","startFriendBattle","url","URL","searchParams","viewBattleResults","existingResult","opponentName","userProgress","opponentProgress","userWon","battleDuration","timeSpent","problemTitle","mockResult","battleTitle","problem","completedAt","registerForTournament","tournament","updatedRegisteredTournaments","startOneVsOneMatchmaking","acceptMatch","alert","push","declineMatch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","animation","delay","onClick","to","map","index","style","toLocaleString","disabled","src","alt","value","readOnly","e","target","select","history","replaceState","document","pathname","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/pages/CodingBattles.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport ScrollReveal from '../components/ScrollReveal';\nimport './CodingBattles.css';\nimport '../styles/animations.css';\n\nfunction CodingBattles() {\n  const navigate = useNavigate();\n  const [battles, setBattles] = useState([]);\n  const [tournaments, setTournaments] = useState([]);\n  const [activeTab, setActiveTab] = useState('upcoming');\n  const [activeTournamentTab, setActiveTournamentTab] = useState('open');\n  const [showOneVsOneModal, setShowOneVsOneModal] = useState(false);\n  const [matchmaking, setMatchmaking] = useState(false);\n  const [matchFound, setMatchFound] = useState(false);\n  const [opponent, setOpponent] = useState(null);\n  const [selectedDifficulty, setSelectedDifficulty] = useState('medium');\n  const [selectedCategory, setSelectedCategory] = useState('algorithms');\n  const [registeredBattles, setRegisteredBattles] = useState([]);\n  const [registeredTournaments, setRegisteredTournaments] = useState([]);\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [battleMode, setBattleMode] = useState('ai'); // 'ai' or 'friend'\n  const [friendBattleLink, setFriendBattleLink] = useState('');\n  const [showFriendLinkCopied, setShowFriendLinkCopied] = useState(false);\n  const [friendBattleId, setFriendBattleId] = useState('');\n  const [showJoinFriendBattle, setShowJoinFriendBattle] = useState(false);\n\n  useEffect(() => {\n    // Fetch battles based on active tab\n    fetchBattles(activeTab);\n\n    // Load registered battles from localStorage\n    const savedRegisteredBattles = localStorage.getItem('registeredBattles');\n    if (savedRegisteredBattles) {\n      setRegisteredBattles(JSON.parse(savedRegisteredBattles));\n    }\n\n    // Check if URL contains a friend battle ID\n    const urlParams = new URLSearchParams(window.location.search);\n    const battleId = urlParams.get('battle');\n    if (battleId) {\n      setFriendBattleId(battleId);\n      setShowJoinFriendBattle(true);\n    }\n  }, [activeTab]);\n\n  useEffect(() => {\n    // Fetch tournaments based on active tournament tab\n    fetchTournaments(activeTournamentTab);\n\n    // Load registered tournaments from localStorage\n    const savedRegisteredTournaments = localStorage.getItem('registeredTournaments');\n    if (savedRegisteredTournaments) {\n      setRegisteredTournaments(JSON.parse(savedRegisteredTournaments));\n    }\n  }, [activeTournamentTab]);\n\n  // Hide success message after 3 seconds\n  useEffect(() => {\n    if (showSuccessMessage) {\n      const timer = setTimeout(() => {\n        setShowSuccessMessage(false);\n      }, 3000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [showSuccessMessage]);\n\n  const fetchBattles = async (type) => {\n    // In a real implementation, this would call your API\n    // Simulate API call for battles\n    setTimeout(() => {\n      // Get current date/time for comparison\n      const now = new Date();\n\n      // Create a set of mock battles with different start times\n      const allMockBattles = [\n        {\n          id: 1,\n          title: \"Binary Tree Traversal Challenge\",\n          description: \"Implement different traversal methods for binary trees and solve related problems.\",\n          participants: 24,\n          duration: 60,\n          difficulty: \"Medium\",\n          startTime: new Date(now.getTime() + 24 * 60 * 60 * 1000).toISOString(), // 1 day in future\n          status: \"upcoming\"\n        },\n        {\n          id: 2,\n          title: \"Dynamic Programming Showdown\",\n          description: \"Solve a series of DP problems with increasing difficulty levels.\",\n          participants: 42,\n          duration: 90,\n          difficulty: \"Hard\",\n          startTime: new Date(now.getTime() + 2 * 24 * 60 * 60 * 1000).toISOString(), // 2 days in future\n          status: \"upcoming\"\n        },\n        {\n          id: 3,\n          title: \"Frontend Optimization Battle\",\n          description: \"Optimize React components and improve rendering performance.\",\n          participants: 18,\n          duration: 45,\n          difficulty: \"Medium\",\n          startTime: new Date(now.getTime() + 3 * 24 * 60 * 60 * 1000).toISOString(), // 3 days in future\n          status: \"upcoming\"\n        },\n        {\n          id: 4,\n          title: \"Graph Algorithms Challenge\",\n          description: \"Implement and optimize various graph traversal and shortest path algorithms.\",\n          participants: 31,\n          duration: 75,\n          difficulty: \"Hard\",\n          startTime: new Date(now.getTime() - 30 * 60 * 1000).toISOString(), // 30 minutes ago (live)\n          endTime: new Date(now.getTime() + 45 * 60 * 1000).toISOString(), // Ends 45 minutes from now\n          status: \"live\"\n        },\n        {\n          id: 5,\n          title: \"React State Management Battle\",\n          description: \"Build efficient state management solutions for complex React applications.\",\n          participants: 27,\n          duration: 60,\n          difficulty: \"Medium\",\n          startTime: new Date(now.getTime() - 15 * 60 * 1000).toISOString(), // 15 minutes ago (live)\n          endTime: new Date(now.getTime() + 45 * 60 * 1000).toISOString(), // Ends 45 minutes from now\n          status: \"live\"\n        },\n        {\n          id: 6,\n          title: \"Sorting Algorithms Showdown\",\n          description: \"Implement and optimize various sorting algorithms for different data scenarios.\",\n          participants: 36,\n          duration: 45,\n          difficulty: \"Easy\",\n          startTime: new Date(now.getTime() - 10 * 60 * 1000).toISOString(), // 10 minutes ago (live)\n          endTime: new Date(now.getTime() + 35 * 60 * 1000).toISOString(), // Ends 35 minutes from now\n          status: \"live\"\n        },\n        {\n          id: 7,\n          title: \"Database Query Optimization\",\n          description: \"Optimize complex SQL queries and database schema designs.\",\n          participants: 22,\n          duration: 60,\n          difficulty: \"Medium\",\n          startTime: new Date(now.getTime() - 2 * 24 * 60 * 60 * 1000).toISOString(), // 2 days ago (past)\n          endTime: new Date(now.getTime() - 2 * 24 * 60 * 60 * 1000 + 60 * 60 * 1000).toISOString(), // Ended 2 days ago\n          status: \"past\"\n        },\n        {\n          id: 8,\n          title: \"String Manipulation Challenge\",\n          description: \"Solve various string manipulation and pattern matching problems.\",\n          participants: 45,\n          duration: 45,\n          difficulty: \"Easy\",\n          startTime: new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000).toISOString(), // 3 days ago (past)\n          endTime: new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000 + 45 * 60 * 1000).toISOString(), // Ended 3 days ago\n          status: \"past\"\n        },\n        {\n          id: 9,\n          title: \"System Design Interview Prep\",\n          description: \"Practice system design interview questions with real-time feedback.\",\n          participants: 19,\n          duration: 90,\n          difficulty: \"Hard\",\n          startTime: new Date(now.getTime() - 4 * 24 * 60 * 60 * 1000).toISOString(), // 4 days ago (past)\n          endTime: new Date(now.getTime() - 4 * 24 * 60 * 60 * 1000 + 90 * 60 * 1000).toISOString(), // Ended 4 days ago\n          status: \"past\"\n        }\n      ];\n\n      // Filter battles based on the active tab\n      let filteredBattles;\n      switch(type) {\n        case 'upcoming':\n          filteredBattles = allMockBattles.filter(battle => battle.status === 'upcoming');\n          break;\n        case 'live':\n          filteredBattles = allMockBattles.filter(battle => battle.status === 'live');\n          break;\n        case 'past':\n          filteredBattles = allMockBattles.filter(battle => battle.status === 'past');\n          break;\n        default:\n          filteredBattles = allMockBattles.filter(battle => battle.status === 'upcoming');\n      }\n\n      setBattles(filteredBattles);\n    }, 500);\n  };\n\n  const fetchTournaments = async (status) => {\n    // Simulate API call for tournaments\n    setTimeout(() => {\n      const mockTournaments = [\n        {\n          id: 1,\n          title: \"Algorithm Masters Championship\",\n          description: \"A multi-round tournament testing your skills in algorithms and data structures.\",\n          participants: 128,\n          startDate: \"2023-06-15\",\n          endDate: \"2023-06-30\",\n          prize: \"$5,000\",\n          difficulty: \"Advanced\",\n          rounds: 4,\n          aiMatchmaking: true,\n          skillLevel: \"85% match for your skill level\"\n        },\n        {\n          id: 2,\n          title: \"Web Dev Showdown\",\n          description: \"Compete in creating responsive web applications with React and Node.js.\",\n          participants: 64,\n          startDate: \"2023-07-01\",\n          endDate: \"2023-07-10\",\n          prize: \"$3,000\",\n          difficulty: \"Intermediate\",\n          rounds: 3,\n          aiMatchmaking: true,\n          skillLevel: \"92% match for your skill level\"\n        },\n        {\n          id: 3,\n          title: \"Machine Learning Challenge\",\n          description: \"Build and optimize ML models to solve real-world problems.\",\n          participants: 96,\n          startDate: \"2023-07-15\",\n          endDate: \"2023-07-25\",\n          prize: \"$4,500\",\n          difficulty: \"Expert\",\n          rounds: 3,\n          aiMatchmaking: true,\n          skillLevel: \"78% match for your skill level\"\n        }\n      ];\n      setTournaments(mockTournaments);\n    }, 500);\n  };\n\n  const registerForBattle = (battle) => {\n    // Check if user is logged in\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n      return;\n    }\n\n    // Check if already registered\n    if (registeredBattles.includes(battle.id)) {\n      setSuccessMessage('You are already registered for this battle!');\n      setShowSuccessMessage(true);\n      return;\n    }\n\n    // In a real implementation, this would call your API to register the user\n    console.log(`Registered for battle ${battle.id}`);\n\n    // Add to registered battles\n    const updatedRegisteredBattles = [...registeredBattles, battle.id];\n    setRegisteredBattles(updatedRegisteredBattles);\n\n    // Save to localStorage\n    localStorage.setItem('registeredBattles', JSON.stringify(updatedRegisteredBattles));\n\n    // Show success message\n    setSuccessMessage(`Successfully registered for \"${battle.title}\"! You'll receive a notification when the battle starts.`);\n    setShowSuccessMessage(true);\n  };\n\n  const joinBattle = (battleId) => {\n    // Check if user is logged in\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n      return;\n    }\n\n    // Find the battle by ID\n    const battle = battles.find(b => b.id === battleId);\n\n    if (!battle) {\n      console.error(`Battle with ID ${battleId} not found`);\n      return;\n    }\n\n    // Check if the battle is live\n    if (battle.status !== 'live') {\n      setSuccessMessage('This battle is not currently live.');\n      setShowSuccessMessage(true);\n      return;\n    }\n\n    // Create a mock opponent based on battle data\n    const mockOpponent = {\n      name: generateOpponentName(),\n      rating: Math.floor(Math.random() * 500) + 1500, // Random rating between 1500-2000\n      winRate: `${Math.floor(Math.random() * 30) + 50}%`, // Random win rate between 50-80%\n      preferredLanguage: [\"Python\", \"JavaScript\", \"Java\", \"C++\"][Math.floor(Math.random() * 4)],\n      skillLevel: `${Math.floor(Math.random() * 15) + 80}% match for your skill level`, // 80-95% match\n      avatar: `https://randomuser.me/api/portraits/${Math.random() > 0.5 ? 'men' : 'women'}/${Math.floor(Math.random() * 70)}.jpg`\n    };\n\n    // Store opponent data in localStorage\n    localStorage.setItem('currentOpponent', JSON.stringify(mockOpponent));\n\n    // Calculate remaining time for the battle\n    const now = new Date();\n    const endTime = new Date(battle.endTime);\n    const remainingTimeInMinutes = Math.max(1, Math.floor((endTime - now) / (60 * 1000)));\n\n    // Store battle information in localStorage\n    const battleInfo = {\n      id: battleId,\n      title: battle.title,\n      difficulty: battle.difficulty || 'Medium',\n      category: battle.category || 'Algorithms',\n      opponent: mockOpponent,\n      startTime: Date.now(),\n      duration: remainingTimeInMinutes,\n      originalDuration: battle.duration || 30\n    };\n    localStorage.setItem('currentBattle', JSON.stringify(battleInfo));\n\n    // Add this battle to registered battles if not already there\n    if (!registeredBattles.includes(battleId)) {\n      const updatedRegisteredBattles = [...registeredBattles, battleId];\n      setRegisteredBattles(updatedRegisteredBattles);\n      localStorage.setItem('registeredBattles', JSON.stringify(updatedRegisteredBattles));\n    }\n\n    // Show success message and navigate to the battle page\n    setSuccessMessage(`Joining battle: ${battle.title}`);\n    setShowSuccessMessage(true);\n\n    setTimeout(() => {\n      navigate(`/battle/${battleId}`);\n    }, 1000);\n  };\n\n  // Helper function to generate random opponent names\n  const generateOpponentName = () => {\n    const firstNames = [\"Alex\", \"Jordan\", \"Taylor\", \"Morgan\", \"Casey\", \"Riley\", \"Avery\", \"Quinn\", \"Skyler\", \"Dakota\"];\n    const lastNames = [\"Chen\", \"Smith\", \"Johnson\", \"Williams\", \"Jones\", \"Brown\", \"Davis\", \"Miller\", \"Wilson\", \"Moore\"];\n\n    return `${firstNames[Math.floor(Math.random() * firstNames.length)]} ${lastNames[Math.floor(Math.random() * lastNames.length)]}`;\n  };\n\n  // Create a friend battle and generate a shareable link\n  const createFriendBattle = () => {\n    // Check if user is logged in\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n      return;\n    }\n\n    // Generate a unique battle ID\n    const battleId = `friend-${Date.now()}-${Math.floor(Math.random() * 1000)}`;\n\n    // Create battle information\n    const battleInfo = {\n      id: battleId,\n      title: \"Friend Battle\",\n      difficulty: selectedDifficulty,\n      category: selectedCategory,\n      createdBy: localStorage.getItem('userName') || 'User',\n      createdAt: new Date().toISOString(),\n      status: 'waiting', // waiting for friend to join\n      isFriendBattle: true\n    };\n\n    // Save battle information to localStorage\n    localStorage.setItem(`friendBattle_${battleId}`, JSON.stringify(battleInfo));\n\n    // Generate shareable link\n    const baseUrl = window.location.origin;\n    const shareableLink = `${baseUrl}/battles?battle=${battleId}`;\n\n    // Set the link in state\n    setFriendBattleLink(shareableLink);\n  };\n\n  // Copy friend battle link to clipboard\n  const copyFriendBattleLink = () => {\n    navigator.clipboard.writeText(friendBattleLink).then(() => {\n      setShowFriendLinkCopied(true);\n      setTimeout(() => {\n        setShowFriendLinkCopied(false);\n      }, 3000);\n    });\n  };\n\n  // Join a friend battle\n  const joinFriendBattle = (battleId) => {\n    // Check if user is logged in\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n      return;\n    }\n\n    // Get battle information from localStorage\n    const battleInfo = localStorage.getItem(`friendBattle_${battleId}`);\n\n    if (!battleInfo) {\n      setSuccessMessage('Battle not found or has expired.');\n      setShowSuccessMessage(true);\n      return;\n    }\n\n    const battle = JSON.parse(battleInfo);\n\n    // Update battle status\n    battle.status = 'active';\n    battle.joinedBy = localStorage.getItem('userName') || 'Friend';\n    battle.joinedAt = new Date().toISOString();\n\n    // Save updated battle information\n    localStorage.setItem(`friendBattle_${battleId}`, JSON.stringify(battle));\n\n    // Create opponent information\n    const opponent = {\n      name: battle.createdBy,\n      rating: Math.floor(Math.random() * 500) + 1500,\n      winRate: `${Math.floor(Math.random() * 30) + 50}%`,\n      preferredLanguage: \"JavaScript\",\n      skillLevel: \"Friend Battle\",\n      avatar: `https://randomuser.me/api/portraits/${Math.random() > 0.5 ? 'men' : 'women'}/${Math.floor(Math.random() * 70)}.jpg`\n    };\n\n    // Save opponent information\n    localStorage.setItem('currentOpponent', JSON.stringify(opponent));\n\n    // Create battle information for the arena\n    const arenaInfo = {\n      id: battleId,\n      title: \"Friend Battle with \" + battle.createdBy,\n      difficulty: battle.difficulty,\n      category: battle.category,\n      opponent: opponent,\n      startTime: Date.now(),\n      duration: 30, // Default 30 minutes\n      isFriendBattle: true\n    };\n\n    localStorage.setItem('currentBattle', JSON.stringify(arenaInfo));\n\n    // Show success message and navigate to battle arena\n    setSuccessMessage('Joining friend battle...');\n    setShowSuccessMessage(true);\n\n    setTimeout(() => {\n      navigate(`/battle/${battleId}`);\n    }, 1000);\n  };\n\n  // Start a friend battle (for the creator)\n  const startFriendBattle = () => {\n    // Extract battle ID from the link\n    const url = new URL(friendBattleLink);\n    const battleId = url.searchParams.get('battle');\n\n    if (!battleId) {\n      setSuccessMessage('Invalid battle link.');\n      setShowSuccessMessage(true);\n      return;\n    }\n\n    // Get battle information\n    const battleInfo = localStorage.getItem(`friendBattle_${battleId}`);\n\n    if (!battleInfo) {\n      setSuccessMessage('Battle not found or has expired.');\n      setShowSuccessMessage(true);\n      return;\n    }\n\n    const battle = JSON.parse(battleInfo);\n\n    // Check if friend has joined\n    if (battle.status !== 'active') {\n      setSuccessMessage('Waiting for your friend to join...');\n      setShowSuccessMessage(true);\n      return;\n    }\n\n    // Create opponent information\n    const opponent = {\n      name: battle.joinedBy,\n      rating: Math.floor(Math.random() * 500) + 1500,\n      winRate: `${Math.floor(Math.random() * 30) + 50}%`,\n      preferredLanguage: \"JavaScript\",\n      skillLevel: \"Friend Battle\",\n      avatar: `https://randomuser.me/api/portraits/${Math.random() > 0.5 ? 'men' : 'women'}/${Math.floor(Math.random() * 70)}.jpg`\n    };\n\n    // Save opponent information\n    localStorage.setItem('currentOpponent', JSON.stringify(opponent));\n\n    // Create battle information for the arena\n    const arenaInfo = {\n      id: battleId,\n      title: \"Friend Battle with \" + battle.joinedBy,\n      difficulty: battle.difficulty,\n      category: battle.category,\n      opponent: opponent,\n      startTime: Date.now(),\n      duration: 30, // Default 30 minutes\n      isFriendBattle: true\n    };\n\n    localStorage.setItem('currentBattle', JSON.stringify(arenaInfo));\n\n    // Close the modal and navigate to battle arena\n    setShowOneVsOneModal(false);\n\n    // Show success message and navigate to battle arena\n    setSuccessMessage('Starting friend battle...');\n    setShowSuccessMessage(true);\n\n    setTimeout(() => {\n      navigate(`/battle/${battleId}`);\n    }, 1000);\n  };\n\n  const viewBattleResults = (battleId) => {\n    // Check if user is logged in\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n      return;\n    }\n\n    // Find the battle by ID\n    const battle = battles.find(b => b.id === battleId);\n\n    if (!battle) {\n      console.error(`Battle with ID ${battleId} not found`);\n      return;\n    }\n\n    // Check if the battle is past\n    if (battle.status !== 'past') {\n      setSuccessMessage('Results are only available for completed battles.');\n      setShowSuccessMessage(true);\n      return;\n    }\n\n    // Check if a result already exists\n    const existingResult = localStorage.getItem(`battleResult_${battleId}`);\n\n    if (!existingResult) {\n      // Generate a random opponent name\n      const opponentName = generateOpponentName();\n\n      // Create a mock result with more realistic data\n      const userProgress = Math.floor(Math.random() * 100);\n      const opponentProgress = Math.floor(Math.random() * 100);\n      const userWon = userProgress > opponentProgress;\n\n      // Calculate a realistic time spent based on battle duration\n      const battleDuration = battle.duration * 60 || 1800; // Convert to seconds, default 30 minutes\n      const timeSpent = Math.floor(Math.random() * (battleDuration * 0.8)) + Math.floor(battleDuration * 0.2); // Between 20% and 100% of duration\n\n      // Create problem titles based on battle title\n      let problemTitle = \"Algorithm Challenge\";\n      if (battle.title.includes(\"Tree\")) problemTitle = \"Binary Tree Traversal\";\n      else if (battle.title.includes(\"Dynamic\")) problemTitle = \"Fibonacci Sequence\";\n      else if (battle.title.includes(\"Graph\")) problemTitle = \"Shortest Path Algorithm\";\n      else if (battle.title.includes(\"String\")) problemTitle = \"String Pattern Matching\";\n      else if (battle.title.includes(\"Sort\")) problemTitle = \"Quick Sort Implementation\";\n      else if (battle.title.includes(\"Database\")) problemTitle = \"SQL Query Optimization\";\n      else if (battle.title.includes(\"React\")) problemTitle = \"React Component Optimization\";\n\n      const mockResult = {\n        battleId,\n        battleTitle: battle.title,\n        userWon,\n        opponentName,\n        problem: problemTitle,\n        userProgress: userWon ? Math.max(userProgress, opponentProgress + 5) : userProgress,\n        opponentProgress: !userWon ? Math.max(opponentProgress, userProgress + 5) : opponentProgress,\n        timeSpent,\n        completedAt: battle.endTime\n      };\n\n      // Save to localStorage\n      localStorage.setItem(`battleResult_${battleId}`, JSON.stringify(mockResult));\n    }\n\n    // Show success message and navigate to the battle results page\n    setSuccessMessage('Loading battle results...');\n    setShowSuccessMessage(true);\n\n    setTimeout(() => {\n      navigate(`/battle/${battleId}/results`);\n    }, 1000);\n  };\n\n  const registerForTournament = (tournament) => {\n    // Check if user is logged in\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n      return;\n    }\n\n    // Check if already registered\n    if (registeredTournaments.includes(tournament.id)) {\n      setSuccessMessage('You are already registered for this tournament!');\n      setShowSuccessMessage(true);\n      return;\n    }\n\n    // In a real implementation, this would call your API to register the user\n    console.log(`Registered for tournament ${tournament.id}`);\n\n    // Add to registered tournaments\n    const updatedRegisteredTournaments = [...registeredTournaments, tournament.id];\n    setRegisteredTournaments(updatedRegisteredTournaments);\n\n    // Save to localStorage\n    localStorage.setItem('registeredTournaments', JSON.stringify(updatedRegisteredTournaments));\n\n    // Show success message\n    setSuccessMessage(`Successfully registered for \"${tournament.title}\"! You'll receive AI-personalized preparation recommendations soon.`);\n    setShowSuccessMessage(true);\n  };\n\n  const startOneVsOneMatchmaking = () => {\n    setMatchmaking(true);\n\n    // Simulate AI matchmaking process\n    setTimeout(() => {\n      setMatchmaking(false);\n      setMatchFound(true);\n      setOpponent({\n        name: \"Alex Chen\",\n        rating: 1842,\n        winRate: \"68%\",\n        preferredLanguage: \"Python\",\n        skillLevel: \"92% match for your skill level\",\n        avatar: \"https://randomuser.me/api/portraits/men/32.jpg\"\n      });\n    }, 3000);\n  };\n\n  const acceptMatch = () => {\n    // Show a message that we're redirecting\n    alert(\"Match accepted! Redirecting to battle arena...\");\n\n    // Close the modal and reset state\n    setShowOneVsOneModal(false);\n    setMatchFound(false);\n\n    // Generate a unique battle ID for this match\n    const battleId = Date.now(); // Simple way to generate a unique ID\n\n    // Store opponent data in localStorage so it can be accessed in the battle page\n    if (opponent) {\n      localStorage.setItem('currentOpponent', JSON.stringify(opponent));\n    }\n\n    // Store battle information in localStorage\n    const battleInfo = {\n      id: battleId,\n      difficulty: selectedDifficulty,\n      category: selectedCategory,\n      opponent: opponent,\n      startTime: Date.now()\n    };\n    localStorage.setItem('currentBattle', JSON.stringify(battleInfo));\n\n    // Add this battle to registered battles\n    const registeredBattles = JSON.parse(localStorage.getItem('registeredBattles') || '[]');\n    if (!registeredBattles.includes(battleId)) {\n      registeredBattles.push(battleId);\n      localStorage.setItem('registeredBattles', JSON.stringify(registeredBattles));\n    }\n\n    // Navigate to the battle page with a slight delay to allow the alert to be seen\n    setTimeout(() => {\n      navigate(`/battle/${battleId}`);\n    }, 500);\n  };\n\n  const declineMatch = () => {\n    setMatchFound(false);\n    setOpponent(null);\n  };\n\n  return (\n    <div className=\"battles-container\">\n      {showSuccessMessage && (\n        <div className=\"success-message fade-in\">\n          <div className=\"success-icon pulse\">✓</div>\n          <div className=\"success-text\">{successMessage}</div>\n        </div>\n      )}\n\n      <ScrollReveal animation=\"fade-in-down\">\n        <div className=\"battles-header\">\n          <h1 className=\"animated-gradient\">Coding Battles</h1>\n          <p>Compete in real-time challenges and climb the leaderboard</p>\n        </div>\n      </ScrollReveal>\n\n      <ScrollReveal animation=\"fade-in-up\" delay={0.2}>\n        <div className=\"section-toggle-container\">\n          <div className=\"section-toggle\">\n            <button\n              className={activeTab !== 'tournaments' ? 'active' : ''}\n              onClick={() => setActiveTab('upcoming')}\n            >\n              Individual Battles\n            </button>\n            <button\n              className={activeTab === 'tournaments' ? 'active' : ''}\n              onClick={() => setActiveTab('tournaments')}\n            >\n              Tournaments\n            </button>\n          </div>\n\n          <Link to=\"/battle/practice\" className=\"practice-mode-battles-button hover-lift\">\n            <span className=\"practice-icon\">🏋️</span>\n            <span>Practice Mode</span>\n          </Link>\n        </div>\n      </ScrollReveal>\n\n      {activeTab !== 'tournaments' ? (\n        <>\n          <ScrollReveal animation=\"fade-in-up\" delay={0.3}>\n            <div className=\"one-vs-one-banner card-shine\">\n              <div className=\"banner-content\">\n                <div className=\"banner-text\">\n                  <h3>1v1 AI-Matched Coding Battles</h3>\n                  <p>Challenge opponents at your skill level in real-time coding duels</p>\n                </div>\n                <button\n                  className=\"find-opponent-btn pulse\"\n                  onClick={() => setShowOneVsOneModal(true)}\n                >\n                  Find Opponent\n                  <span className=\"btn-glow\"></span>\n                </button>\n              </div>\n            </div>\n          </ScrollReveal>\n\n          <ScrollReveal animation=\"fade-in-up\" delay={0.4}>\n            <div className=\"battles-tabs\">\n              <button\n                className={activeTab === 'upcoming' ? 'active' : ''}\n                onClick={() => setActiveTab('upcoming')}\n              >\n                Upcoming Battles\n              </button>\n              <button\n                className={activeTab === 'live' ? 'active' : ''}\n                onClick={() => setActiveTab('live')}\n              >\n                Live Now\n              </button>\n              <button\n                className={activeTab === 'past' ? 'active' : ''}\n                onClick={() => setActiveTab('past')}\n              >\n                Past Battles\n              </button>\n            </div>\n          </ScrollReveal>\n\n          <ScrollReveal animation=\"fade-in-up\" delay={0.5}>\n            <div className=\"battles-list stagger-fade-up\">\n              {battles.map((battle, index) => (\n                <div\n                  key={battle.id}\n                  className=\"battle-card hover-lift card-shine\"\n                  data-index={index}\n                  style={{\"--stagger-delay\": \"0.1s\"}}\n                >\n                  <div className=\"battle-info\">\n                    <h3>{battle.title}</h3>\n                    <div className=\"battle-meta\">\n                      <span className=\"difficulty\">{battle.difficulty}</span>\n                      <span className=\"participants\">{battle.participants} Participants</span>\n                      <span className=\"duration\">{battle.duration} mins</span>\n                      {activeTab === 'upcoming' && (\n                        <span className=\"start-time\">\n                          Starts: {new Date(battle.startTime).toLocaleString()}\n                        </span>\n                      )}\n                      {activeTab === 'live' && (\n                        <span className=\"end-time\">\n                          Ends: {new Date(battle.endTime).toLocaleString()}\n                        </span>\n                      )}\n                      {activeTab === 'past' && (\n                        <span className=\"end-time\">\n                          Ended: {new Date(battle.endTime).toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                    <p>{battle.description}</p>\n                  </div>\n                  <div className=\"battle-action\">\n                    {activeTab === 'upcoming' && (\n                      registeredBattles.includes(battle.id) ? (\n                        <button className=\"registered-btn\" disabled>Registered</button>\n                      ) : (\n                        <button\n                          className=\"register-btn btn-primary\"\n                          onClick={() => registerForBattle(battle)}\n                        >\n                          Register\n                          <span className=\"btn-glow\"></span>\n                        </button>\n                      )\n                    )}\n                    {activeTab === 'live' && (\n                      <button\n                        className=\"join-btn btn-primary pulse\"\n                        onClick={() => joinBattle(battle.id)}\n                      >\n                        Join Now\n                        <span className=\"btn-glow\"></span>\n                      </button>\n                    )}\n                    {activeTab === 'past' && (\n                      <button\n                        className=\"view-btn btn-primary\"\n                        onClick={() => viewBattleResults(battle.id)}\n                      >\n                        View Results\n                        <span className=\"btn-glow\"></span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </ScrollReveal>\n        </>\n      ) : (\n        <>\n          <ScrollReveal animation=\"fade-in-up\" delay={0.3}>\n            <div className=\"tournament-header\">\n              <h2 className=\"animated-gradient\">AI-Powered Tournaments</h2>\n              <p>Multi-round competitions with AI matchmaking based on your skill level</p>\n            </div>\n          </ScrollReveal>\n\n          <ScrollReveal animation=\"fade-in-up\" delay={0.4}>\n            <div className=\"tournaments-tabs\">\n              <button\n                className={activeTournamentTab === 'open' ? 'active' : ''}\n                onClick={() => setActiveTournamentTab('open')}\n              >\n                Open Registration\n              </button>\n              <button\n                className={activeTournamentTab === 'upcoming' ? 'active' : ''}\n                onClick={() => setActiveTournamentTab('upcoming')}\n              >\n                Upcoming\n              </button>\n              <button\n                className={activeTournamentTab === 'past' ? 'active' : ''}\n                onClick={() => setActiveTournamentTab('past')}\n              >\n                Past Tournaments\n              </button>\n            </div>\n          </ScrollReveal>\n\n          <ScrollReveal animation=\"fade-in-up\" delay={0.5}>\n            <div className=\"tournaments-list stagger-fade-up\">\n              {tournaments.map((tournament, index) => (\n                <div\n                  key={tournament.id}\n                  className=\"tournament-card hover-lift card-shine\"\n                  data-index={index}\n                  style={{\"--stagger-delay\": \"0.1s\"}}\n                >\n                  <div className=\"tournament-header-section\">\n                    <h3>{tournament.title}</h3>\n                    <div className=\"tournament-prize pulse\">{tournament.prize}</div>\n                  </div>\n\n                  <div className=\"tournament-meta\">\n                    <div className=\"tournament-meta-item\">\n                      <span className=\"meta-label\">Difficulty:</span>\n                      <span className=\"meta-value difficulty\">{tournament.difficulty}</span>\n                    </div>\n                    <div className=\"tournament-meta-item\">\n                      <span className=\"meta-label\">Participants:</span>\n                      <span className=\"meta-value\">{tournament.participants}</span>\n                    </div>\n                    <div className=\"tournament-meta-item\">\n                      <span className=\"meta-label\">Rounds:</span>\n                      <span className=\"meta-value\">{tournament.rounds}</span>\n                    </div>\n                    <div className=\"tournament-meta-item\">\n                      <span className=\"meta-label\">Dates:</span>\n                      <span className=\"meta-value\">{tournament.startDate} to {tournament.endDate}</span>\n                    </div>\n                  </div>\n\n                  <p className=\"tournament-description\">{tournament.description}</p>\n\n                  <div className=\"ai-match-indicator\">\n                    <div className=\"ai-icon pulse\">🧠</div>\n                    <div className=\"ai-match-text\">\n                      <strong>AI Matchmaking:</strong> {tournament.skillLevel}\n                    </div>\n                  </div>\n\n                  <div className=\"tournament-action\">\n                    {registeredTournaments.includes(tournament.id) ? (\n                      <button className=\"registered-tournament-btn\" disabled>\n                        Registered\n                      </button>\n                    ) : (\n                      <button\n                        className=\"register-tournament-btn btn-primary\"\n                        onClick={() => registerForTournament(tournament)}\n                      >\n                        Register Now\n                        <span className=\"btn-glow\"></span>\n                      </button>\n                    )}\n                    <button\n                      className=\"details-btn btn-arrow\"\n                      onClick={() => navigate(`/tournaments/${tournament.id}`)}\n                    >\n                      View Details\n                      <span className=\"arrow\">→</span>\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </ScrollReveal>\n        </>\n      )}\n\n      {/* 1v1 Battle Modal */}\n      {showOneVsOneModal && (\n        <div className=\"modal-overlay fade-in\">\n          <div className=\"one-vs-one-modal scale-in\">\n            <button className=\"close-modal\" onClick={() => setShowOneVsOneModal(false)}>×</button>\n\n            {!matchmaking && !matchFound && !friendBattleLink ? (\n              <>\n                <h2 className=\"animated-gradient\">Choose Battle Mode</h2>\n                <p className=\"modal-subtitle\">Select how you want to battle</p>\n\n                <div className=\"battle-mode-selector\">\n                  <button\n                    className={`battle-mode-btn ${battleMode === 'ai' ? 'active' : ''}`}\n                    onClick={() => setBattleMode('ai')}\n                  >\n                    <div className=\"mode-icon\">🧠</div>\n                    <div className=\"mode-title\">AI Matchmaking</div>\n                    <div className=\"mode-description\">Get matched with an opponent of similar skill level</div>\n                  </button>\n\n                  <button\n                    className={`battle-mode-btn ${battleMode === 'friend' ? 'active' : ''}`}\n                    onClick={() => setBattleMode('friend')}\n                  >\n                    <div className=\"mode-icon\">👥</div>\n                    <div className=\"mode-title\">Play with Friend</div>\n                    <div className=\"mode-description\">Create a battle and share the link with a friend</div>\n                  </button>\n                </div>\n\n                <div className=\"matchmaking-options stagger-fade-up\">\n                  <div className=\"option-group\" data-index=\"0\">\n                    <label>Difficulty Level</label>\n                    <div className=\"option-buttons\">\n                      <button\n                        className={selectedDifficulty === 'easy' ? 'active' : ''}\n                        onClick={() => setSelectedDifficulty('easy')}\n                      >\n                        Easy\n                      </button>\n                      <button\n                        className={selectedDifficulty === 'medium' ? 'active' : ''}\n                        onClick={() => setSelectedDifficulty('medium')}\n                      >\n                        Medium\n                      </button>\n                      <button\n                        className={selectedDifficulty === 'hard' ? 'active' : ''}\n                        onClick={() => setSelectedDifficulty('hard')}\n                      >\n                        Hard\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"option-group\" data-index=\"1\">\n                    <label>Problem Category</label>\n                    <div className=\"option-buttons\">\n                      <button\n                        className={selectedCategory === 'algorithms' ? 'active' : ''}\n                        onClick={() => setSelectedCategory('algorithms')}\n                      >\n                        Algorithms\n                      </button>\n                      <button\n                        className={selectedCategory === 'data-structures' ? 'active' : ''}\n                        onClick={() => setSelectedCategory('data-structures')}\n                      >\n                        Data Structures\n                      </button>\n                      <button\n                        className={selectedCategory === 'system-design' ? 'active' : ''}\n                        onClick={() => setSelectedCategory('system-design')}\n                      >\n                        System Design\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                {battleMode === 'ai' ? (\n                  <button\n                    className=\"start-matchmaking-btn btn-primary pulse\"\n                    onClick={startOneVsOneMatchmaking}\n                  >\n                    Start AI Matchmaking\n                    <span className=\"btn-glow\"></span>\n                  </button>\n                ) : (\n                  <button\n                    className=\"create-friend-battle-btn btn-primary pulse\"\n                    onClick={createFriendBattle}\n                  >\n                    Create Friend Battle\n                    <span className=\"btn-glow\"></span>\n                  </button>\n                )}\n              </>\n            ) : matchmaking ? (\n              <div className=\"matchmaking-progress fade-in\">\n                <div className=\"loading-spinner\"></div>\n                <h3>Finding Your Opponent</h3>\n                <p>Our AI is analyzing skill levels to find your perfect match...</p>\n              </div>\n            ) : matchFound ? (\n              <div className=\"match-found fade-in\">\n                <h3 className=\"pulse\">Match Found!</h3>\n                <div className=\"opponent-card hover-lift\">\n                  <img src={opponent.avatar} alt={opponent.name} className=\"opponent-avatar\" />\n                  <div className=\"opponent-info\">\n                    <h4>{opponent.name}</h4>\n                    <div className=\"opponent-stats stagger-fade-up\">\n                      <div className=\"stat\" data-index=\"0\">\n                        <span className=\"stat-label\">Rating:</span>\n                        <span className=\"stat-value\">{opponent.rating}</span>\n                      </div>\n                      <div className=\"stat\" data-index=\"1\">\n                        <span className=\"stat-label\">Win Rate:</span>\n                        <span className=\"stat-value\">{opponent.winRate}</span>\n                      </div>\n                      <div className=\"stat\" data-index=\"2\">\n                        <span className=\"stat-label\">Language:</span>\n                        <span className=\"stat-value\">{opponent.preferredLanguage}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"ai-match-indicator match-modal\">\n                  <div className=\"ai-icon pulse\">🧠</div>\n                  <div className=\"ai-match-text\">\n                    <strong>AI Matchmaking:</strong> {opponent.skillLevel}\n                  </div>\n                </div>\n\n                <div className=\"match-actions\">\n                  <button className=\"accept-match-btn btn-primary pulse\" onClick={acceptMatch}>\n                    Accept Match\n                    <span className=\"btn-glow\"></span>\n                  </button>\n                  <button className=\"decline-match-btn\" onClick={declineMatch}>\n                    Decline\n                  </button>\n                </div>\n              </div>\n            ) : friendBattleLink ? (\n              <div className=\"friend-battle-created fade-in\">\n                <h3 className=\"pulse\">Friend Battle Created!</h3>\n                <p className=\"friend-battle-instructions\">Share this link with your friend to start the battle:</p>\n\n                <div className=\"friend-battle-link-container\">\n                  <input\n                    type=\"text\"\n                    className=\"friend-battle-link\"\n                    value={friendBattleLink}\n                    readOnly\n                    onClick={(e) => e.target.select()}\n                  />\n                  <button\n                    className=\"copy-link-btn\"\n                    onClick={copyFriendBattleLink}\n                  >\n                    {showFriendLinkCopied ? 'Copied!' : 'Copy'}\n                  </button>\n                </div>\n\n                <div className=\"friend-battle-status\">\n                  <div className=\"status-icon pulse\">⏳</div>\n                  <p>Waiting for your friend to join...</p>\n                </div>\n\n                <div className=\"friend-battle-actions\">\n                  <button\n                    className=\"check-status-btn btn-primary\"\n                    onClick={startFriendBattle}\n                  >\n                    Check Status\n                    <span className=\"btn-glow\"></span>\n                  </button>\n                  <button\n                    className=\"create-new-btn\"\n                    onClick={() => setFriendBattleLink('')}\n                  >\n                    Create New Battle\n                  </button>\n                </div>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      )}\n\n      {/* Friend Battle Join Modal */}\n      {showJoinFriendBattle && (\n        <div className=\"modal-overlay fade-in\">\n          <div className=\"join-friend-battle-modal scale-in\">\n            <button className=\"close-modal\" onClick={() => setShowJoinFriendBattle(false)}>×</button>\n\n            <h3 className=\"pulse\">Friend Battle Invitation</h3>\n            <p>You've been invited to join a coding battle with a friend!</p>\n\n            <div className=\"battle-details-preview\">\n              <div className=\"battle-icon\">👥</div>\n              <div className=\"battle-preview-info\">\n                <h4>Friend Battle</h4>\n                <p>Join now to start coding together in real-time</p>\n              </div>\n            </div>\n\n            <div className=\"join-battle-actions\">\n              <button\n                className=\"join-battle-btn btn-primary pulse\"\n                onClick={() => joinFriendBattle(friendBattleId)}\n              >\n                Join Battle\n                <span className=\"btn-glow\"></span>\n              </button>\n              <button\n                className=\"decline-battle-btn\"\n                onClick={() => {\n                  setShowJoinFriendBattle(false);\n                  // Remove battle ID from URL without refreshing\n                  window.history.replaceState({}, document.title, window.location.pathname);\n                }}\n              >\n                Decline\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CodingBattles;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}