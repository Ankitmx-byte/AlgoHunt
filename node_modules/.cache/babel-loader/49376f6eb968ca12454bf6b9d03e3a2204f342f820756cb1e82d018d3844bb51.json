{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\pages\\\\CodingBattle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './CodingBattle.css';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport AntiCheatingMonitor from '../components/AntiCheatingMonitor';\nimport antiCheatingService from '../services/AntiCheatingService';\nimport CodeEditor from '../components/CodeEditor';\nimport CompilerOutput from '../components/CompilerOutput';\nimport codeCompilerService from '../services/CodeCompilerService';\n// Temporarily use a textarea instead of Monaco Editor\n// import Editor from '@monaco-editor/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodingBattle({\n  isDemoMode = false\n}) {\n  _s();\n  const {\n    battleId\n  } = useParams();\n  const navigate = useNavigate();\n  // Editor reference (commented out as not currently used)\n  // const editorRef = useRef(null);\n\n  // State for battle\n  const [battleState, setBattleState] = useState({\n    status: 'waiting',\n    // waiting, active, completed\n    problem: null,\n    opponent: null,\n    userCode: '',\n    userProgress: 0,\n    opponentProgress: 0,\n    winner: null,\n    timeRemaining: 1800 // 30 minutes in seconds\n  });\n\n  // State for UI\n  const [currentView, setCurrentView] = useState(isDemoMode ? 'battle' : 'matchmaking');\n  const [selectedLanguage, setSelectedLanguage] = useState('javascript');\n  // These state variables are defined but not currently used in the component\n  const [selectedDifficulty] = useState('medium');\n  const [selectedCategory] = useState('algorithms');\n  const [, setShowMatchmakingModal] = useState(!isDemoMode);\n  const [showHint, setShowHint] = useState(false);\n  const [showAiInsights, setShowAiInsights] = useState(false);\n  const [testCases, setTestCases] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Anti-cheating state\n  const [antiCheatingEnabled, setAntiCheatingEnabled] = useState(!isDemoMode);\n  const [showCheatingWarning, setShowCheatingWarning] = useState(false);\n\n  // Compiler state\n  const [compilerOutput, setCompilerOutput] = useState(null);\n  const [compilerError, setCompilerError] = useState(null);\n  const [isCompiling, setIsCompiling] = useState(false);\n  const [showCompilerOutput, setShowCompilerOutput] = useState(false);\n  const [editorTheme] = useState('vs-dark');\n\n  // Editor themes (commented out as not currently used)\n  // const editorThemes = {\n  //   javascript: 'vs-dark',\n  //   python: 'vs-dark',\n  //   java: 'vs-dark',\n  //   cpp: 'vs-dark',\n  //   csharp: 'vs-dark'\n  // };\n\n  // Get default starter code for selected language\n  const getDefaultStarterCode = language => {\n    if (!language) return '';\n    const defaultCode = {\n      javascript: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nfunction twoSum(nums, target) {\\n  // Your code here\\n}\",\n      python: \"def two_sum(nums, target):\\n    # Your code here\\n    pass\",\n      java: \"class Solution {\\n    public int[] twoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\",\n      cpp: \"#include <vector>\\n\\nclass Solution {\\npublic:\\n    std::vector<int> twoSum(std::vector<int>& nums, int target) {\\n        // Your code here\\n        return {0, 0};\\n    }\\n};\",\n      csharp: \"public class Solution {\\n    public int[] TwoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\"\n    };\n    return defaultCode[language] || '';\n  };\n\n  // Timer for countdown\n  const timerIntervalRef = useRef(null);\n  const startTimer = useCallback(() => {\n    timerIntervalRef.current = setInterval(() => {\n      setBattleState(prev => {\n        if (prev.timeRemaining <= 0) {\n          clearInterval(timerIntervalRef.current);\n          return {\n            ...prev,\n            status: 'completed'\n          };\n        }\n        return {\n          ...prev,\n          timeRemaining: prev.timeRemaining - 1\n        };\n      });\n    }, 1000);\n  }, []);\n\n  // Simulate AI opponent progress\n  const startAIOpponentSimulation = useCallback(() => {\n    const progressInterval = setInterval(() => {\n      setBattleState(prev => {\n        const newProgress = Math.min(prev.opponentProgress + Math.random() * 5, 100);\n\n        // If AI reaches 100%, they win\n        if (newProgress >= 100 && prev.userProgress < 100) {\n          clearInterval(progressInterval);\n          return {\n            ...prev,\n            opponentProgress: 100,\n            status: 'completed',\n            winner: 'opponent'\n          };\n        }\n        return {\n          ...prev,\n          opponentProgress: newProgress\n        };\n      });\n    }, 3000);\n\n    // Clean up interval after 5 minutes (simulating max battle time)\n    setTimeout(() => {\n      clearInterval(progressInterval);\n    }, 300000);\n  }, []);\n\n  // Fallback to demo battle if no battle info is found\n  const fallbackToDemoBattle = useCallback(() => {\n    console.warn('No battle info found, falling back to demo battle');\n\n    // Mock battle data\n    setBattleState({\n      status: 'active',\n      problem: {\n        id: 1,\n        title: \"Two Sum\",\n        description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\\n\\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\\n\\nYou can return the answer in any order.\",\n        difficulty: 'medium',\n        category: 'algorithms',\n        starterCode: {\n          javascript: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nfunction twoSum(nums, target) {\\n  // Your code here\\n}\",\n          python: \"def two_sum(nums, target):\\n    # Your code here\\n    pass\",\n          java: \"class Solution {\\n    public int[] twoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\",\n          cpp: \"#include <vector>\\n\\nclass Solution {\\npublic:\\n    std::vector<int> twoSum(std::vector<int>& nums, int target) {\\n        // Your code here\\n        return {0, 0};\\n    }\\n};\",\n          csharp: \"public class Solution {\\n    public int[] TwoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\"\n        }\n      },\n      opponent: {\n        name: \"JohnDoe123\",\n        rating: 1750,\n        winRate: \"68%\",\n        preferredLanguage: \"JavaScript\",\n        skillLevel: \"Intermediate\",\n        avatar: \"https://randomuser.me/api/portraits/men/32.jpg\"\n      },\n      userCode: getDefaultStarterCode(selectedLanguage),\n      userProgress: 0,\n      opponentProgress: 0,\n      winner: null,\n      timeRemaining: 1800\n    });\n    setTestCases([{\n      id: 1,\n      input: \"[2, 7, 11, 15], 9\",\n      expectedOutput: \"[0,1]\"\n    }, {\n      id: 2,\n      input: \"[3, 2, 4], 6\",\n      expectedOutput: \"[1,2]\"\n    }, {\n      id: 3,\n      input: \"[3, 3], 6\",\n      expectedOutput: \"[0,1]\"\n    }]);\n    setCurrentView('battle');\n    startTimer();\n  }, [selectedLanguage, startTimer]);\n\n  // Fetch battle details from API\n  const fetchBattleDetails = useCallback(() => {\n    // In a real implementation, this would fetch battle details from an API\n    // For now, we'll use the battle info stored in localStorage\n\n    // Check if we have battle info in localStorage\n    const battleInfoStr = localStorage.getItem('currentBattle');\n    const opponentStr = localStorage.getItem('currentOpponent');\n    if (battleInfoStr) {\n      try {\n        const battleInfo = JSON.parse(battleInfoStr);\n        const opponent = opponentStr ? JSON.parse(opponentStr) : null;\n\n        // Calculate time remaining based on start time\n        const startTime = battleInfo.startTime || Date.now();\n        const elapsedSeconds = Math.floor((Date.now() - startTime) / 1000);\n        const timeRemaining = Math.max(1800 - elapsedSeconds, 0); // 30 minutes max\n\n        // Set battle state\n        setBattleState({\n          status: 'active',\n          problem: {\n            id: 1,\n            title: \"Two Sum\",\n            description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\\n\\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\\n\\nYou can return the answer in any order.\",\n            difficulty: battleInfo.difficulty || 'medium',\n            category: battleInfo.category || 'algorithms',\n            starterCode: {\n              javascript: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nfunction twoSum(nums, target) {\\n  // Your code here\\n}\",\n              python: \"def two_sum(nums, target):\\n    # Your code here\\n    pass\",\n              java: \"class Solution {\\n    public int[] twoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\",\n              cpp: \"#include <vector>\\n\\nclass Solution {\\npublic:\\n    std::vector<int> twoSum(std::vector<int>& nums, int target) {\\n        // Your code here\\n        return {0, 0};\\n    }\\n};\",\n              csharp: \"public class Solution {\\n    public int[] TwoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\"\n            }\n          },\n          opponent: opponent || {\n            name: \"JohnDoe123\",\n            rating: 1750,\n            winRate: \"68%\",\n            preferredLanguage: \"JavaScript\",\n            skillLevel: \"Intermediate\",\n            avatar: \"https://randomuser.me/api/portraits/men/32.jpg\"\n          },\n          userCode: getDefaultStarterCode(selectedLanguage),\n          userProgress: 0,\n          opponentProgress: 0,\n          winner: null,\n          timeRemaining: timeRemaining\n        });\n        setTestCases([{\n          id: 1,\n          input: \"[2, 7, 11, 15], 9\",\n          expectedOutput: \"[0,1]\"\n        }, {\n          id: 2,\n          input: \"[3, 2, 4], 6\",\n          expectedOutput: \"[1,2]\"\n        }, {\n          id: 3,\n          input: \"[3, 3], 6\",\n          expectedOutput: \"[0,1]\"\n        }]);\n        setCurrentView('battle');\n        startTimer();\n\n        // Clear the localStorage items after successful initialization\n        // This prevents old battle data from being reused\n        if (!isDemoMode) {\n          setTimeout(() => {\n            localStorage.removeItem('currentBattle');\n            localStorage.removeItem('currentOpponent');\n          }, 5000);\n        }\n      } catch (error) {\n        console.error('Error parsing battle info:', error);\n        fallbackToDemoBattle();\n      }\n    } else {\n      // If no battle info is found, fall back to demo battle\n      fallbackToDemoBattle();\n    }\n  }, [selectedLanguage, startTimer, isDemoMode, fallbackToDemoBattle]);\n\n  // Start demo mode with AI opponent\n  const startDemoMode = useCallback(() => {\n    console.log(\"Starting Practice Mode...\");\n\n    // Hide matchmaking modal if open\n    setShowMatchmakingModal(false);\n\n    // Set current view to battle\n    setCurrentView('battle');\n\n    // Initialize a demo battle with a sample problem\n    setBattleState({\n      status: 'active',\n      problem: {\n        id: 1,\n        title: \"Two Sum\",\n        description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\\n\\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\\n\\nYou can return the answer in any order.\",\n        difficulty: selectedDifficulty || 'medium',\n        category: selectedCategory || 'algorithms',\n        starterCode: {\n          javascript: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nfunction twoSum(nums, target) {\\n  // Your code here\\n}\",\n          python: \"def two_sum(nums, target):\\n    # Your code here\\n    pass\",\n          java: \"class Solution {\\n    public int[] twoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\",\n          cpp: \"#include <vector>\\n\\nclass Solution {\\npublic:\\n    std::vector<int> twoSum(std::vector<int>& nums, int target) {\\n        // Your code here\\n        return {0, 0};\\n    }\\n};\",\n          csharp: \"public class Solution {\\n    public int[] TwoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\"\n        }\n      },\n      opponent: {\n        name: \"AI Opponent\",\n        rating: 1800,\n        winRate: \"75%\",\n        preferredLanguage: \"Python\",\n        skillLevel: \"Adaptive\",\n        avatar: \"https://randomuser.me/api/portraits/lego/1.jpg\"\n      },\n      userCode: getDefaultStarterCode(selectedLanguage || 'javascript'),\n      userProgress: 0,\n      opponentProgress: 0,\n      winner: null,\n      timeRemaining: 1800\n    });\n\n    // Set demo test cases\n    setTestCases([{\n      id: 1,\n      input: \"[2, 7, 11, 15], 9\",\n      expectedOutput: \"[0,1]\"\n    }, {\n      id: 2,\n      input: \"[3, 2, 4], 6\",\n      expectedOutput: \"[1,2]\"\n    }, {\n      id: 3,\n      input: \"[3, 3], 6\",\n      expectedOutput: \"[0,1]\"\n    }]);\n\n    // Start timer\n    startTimer();\n\n    // Simulate AI opponent progress updates\n    startAIOpponentSimulation();\n  }, [selectedLanguage, selectedDifficulty, selectedCategory, startTimer, startAIOpponentSimulation]);\n\n  // Start matchmaking\n  const startMatchmaking = useCallback(() => {\n    console.log(\"Starting matchmaking...\");\n    setShowMatchmakingModal(false);\n\n    // Simulate matchmaking\n    setTimeout(() => {\n      fetchBattleDetails();\n    }, 2000);\n  }, [fetchBattleDetails]);\n\n  // Initialize battle or demo mode\n  useEffect(() => {\n    console.log(\"CodingBattle component mounted, isDemoMode:\", isDemoMode);\n    if (isDemoMode) {\n      console.log(\"Starting demo mode automatically\");\n      startDemoMode();\n    } else if (battleId) {\n      // Check if user is registered for this battle\n      const registeredBattles = JSON.parse(localStorage.getItem('registeredBattles') || '[]');\n      const battleIdNum = parseInt(battleId, 10);\n\n      // Check if this battle is in the registered battles list or if there's a current battle in localStorage\n      const currentBattleStr = localStorage.getItem('currentBattle');\n      const isBattleInProgress = currentBattleStr && JSON.parse(currentBattleStr).id === battleIdNum;\n      if (registeredBattles.includes(battleIdNum) || isBattleInProgress) {\n        // Fetch battle details from API\n        fetchBattleDetails();\n      } else {\n        // If not registered, show a message and redirect to battles page\n        console.warn(\"Not registered for battle:\", battleIdNum);\n        alert(\"You are not registered for this battle. Please register first.\");\n        navigate('/battles');\n      }\n    }\n\n    // Cleanup timer on unmount\n    return () => {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n      }\n    };\n  }, [isDemoMode, battleId, fetchBattleDetails, startDemoMode, navigate]);\n\n  // Handle editor mount (commented out as not currently used)\n  // const handleEditorDidMount = (editor, monaco) => {\n  //   editorRef.current = editor;\n  // };\n\n  // Handle editor change\n  const handleEditorChange = value => {\n    setBattleState(prev => ({\n      ...prev,\n      userCode: value\n    }));\n\n    // Take code snapshot for anti-cheating analysis\n    if (antiCheatingEnabled && !isDemoMode) {\n      antiCheatingService.takeCodeSnapshot(value);\n    }\n  };\n\n  // Handle anti-cheating violations\n  const handleCheatingViolation = violations => {\n    setShowCheatingWarning(true);\n\n    // Log the violation\n    console.warn('Anti-cheating violation detected:', violations);\n\n    // In a real implementation, this would report to the server\n    // and potentially take action based on the severity\n  };\n\n  // Submit code for testing\n  const submitCode = async () => {\n    if (isSubmitting) return;\n    setIsSubmitting(true);\n    setIsCompiling(true);\n    setCompilerError(null);\n    setShowCompilerOutput(true);\n    try {\n      // Execute the code with the test cases\n      const executionResult = await codeCompilerService.executeCode(battleState.userCode, selectedLanguage, testCases);\n      if (!executionResult.success) {\n        // Handle compilation or execution error\n        setCompilerError(executionResult.error);\n        setCompilerOutput(null);\n        return;\n      }\n\n      // Set the compiler output\n      setCompilerOutput(executionResult.results);\n\n      // Calculate progress based on passing tests\n      const passedCount = executionResult.results.filter(r => r.passed).length;\n      const progress = passedCount / testCases.length * 100;\n\n      // Update battle state\n      setBattleState(prev => {\n        const newState = {\n          ...prev,\n          userProgress: progress\n        };\n\n        // Check if user won\n        if (progress >= 100 && prev.opponentProgress < 100) {\n          newState.status = 'completed';\n          newState.winner = 'user';\n        }\n        return newState;\n      });\n\n      // If this is a real battle (not demo mode), send results to opponent\n      if (!isDemoMode) {\n        // In a real implementation, this would send the results to the server\n        console.log('Sending results to opponent:', executionResult);\n\n        // Simulate opponent progress update\n        if (Math.random() > 0.7) {\n          // 30% chance opponent makes progress\n          const opponentProgress = Math.min(battleState.opponentProgress + Math.random() * 30, 100);\n          setBattleState(prev => ({\n            ...prev,\n            opponentProgress\n          }));\n\n          // Check if opponent won\n          if (opponentProgress >= 100) {\n            setBattleState(prev => ({\n              ...prev,\n              status: 'completed',\n              winner: 'opponent'\n            }));\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error executing code:', error);\n      setCompilerError('An unexpected error occurred while executing your code.');\n    } finally {\n      setIsSubmitting(false);\n      setIsCompiling(false);\n    }\n  };\n\n  // Format time remaining\n  const formatTimeRemaining = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  };\n\n  // Render matchmaking view\n  const renderMatchmakingView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coding-battle-main-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Coding Battle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"main-subtitle\",\n      children: \"Challenge your coding skills in real-time battles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-mode-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mode-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mode-icon\",\n          children: \"\\uD83C\\uDFC6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Competitive Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Challenge real opponents in a timed coding battle. Solve problems faster to win!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mode-button competitive\",\n          onClick: startMatchmaking,\n          children: \"Find Opponent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mode-card practice-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mode-icon\",\n          children: \"\\uD83C\\uDFCB\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Practice Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sharpen your skills with AI opponents. Perfect for beginners and pros alike.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mode-button practice\",\n          onClick: startDemoMode,\n          children: \"Start Practice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-number\",\n          children: \"10,000+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Active Coders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-number\",\n          children: \"500+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Coding Problems\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-number\",\n          children: \"50,000+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Battles Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"floating-practice-button\",\n      onClick: startDemoMode,\n      children: \"\\uD83C\\uDFCB\\uFE0F PRACTICE MODE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 507,\n    columnNumber: 5\n  }, this);\n\n  // Render battle interface\n  const renderBattleInterface = () => {\n    var _battleState$problem, _battleState$problem2, _battleState$problem3, _battleState$problem4, _battleState$opponent, _battleState$problem5;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-container\",\n      children: [isDemoMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"practice-mode-banner\",\n        children: \"Practice Mode - Sharpen your skills at your own pace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this), !isDemoMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"practice-mode-button\",\n        onClick: () => navigate('/battle/practice'),\n        children: \"Switch to Practice Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: ((_battleState$problem = battleState.problem) === null || _battleState$problem === void 0 ? void 0 : _battleState$problem.title) || 'Loading problem...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `difficulty ${(_battleState$problem2 = battleState.problem) === null || _battleState$problem2 === void 0 ? void 0 : _battleState$problem2.difficulty}`,\n              children: (_battleState$problem3 = battleState.problem) === null || _battleState$problem3 === void 0 ? void 0 : _battleState$problem3.difficulty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category\",\n              children: (_battleState$problem4 = battleState.problem) === null || _battleState$problem4 === void 0 ? void 0 : _battleState$problem4.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-timer\",\n          children: [\"Time: \", formatTimeRemaining(battleState.timeRemaining)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 9\n        }, this), !isDemoMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"anti-cheat-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"toggle-switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: antiCheatingEnabled,\n              onChange: () => setAntiCheatingEnabled(!antiCheatingEnabled)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"toggle-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"toggle-label\",\n            children: \"Anti-Cheating System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-status\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-progress\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-label\",\n                children: \"You\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-fill\",\n                  style: {\n                    width: `${battleState.userProgress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-percent\",\n                children: [Math.round(battleState.userProgress), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 13\n            }, this), battleState.opponent && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"opponent-progress\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-label\",\n                children: (_battleState$opponent = battleState.opponent) === null || _battleState$opponent === void 0 ? void 0 : _battleState$opponent.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-fill\",\n                  style: {\n                    width: `${battleState.opponentProgress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-percent\",\n                children: [Math.round(battleState.opponentProgress), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 7\n      }, this), !isDemoMode && /*#__PURE__*/_jsxDEV(AntiCheatingMonitor, {\n        battleId: battleId,\n        userId: \"current-user\",\n        isActive: antiCheatingEnabled,\n        onViolation: handleCheatingViolation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this), showCheatingWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content warning-modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u26A0\\uFE0F Fair Play Warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Our anti-cheating system has detected suspicious activity. Please ensure you are following the competition rules:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"warning-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Solve problems independently without external help\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Do not copy solutions from other sources\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Stay on the battle page during the competition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Do not use AI tools or code generators\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"warning-note\",\n            children: \"Continued violations may result in disqualification.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-modal warning-btn\",\n            onClick: () => setShowCheatingWarning(false),\n            children: \"I Understand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-description\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Problem Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (_battleState$problem5 = battleState.problem) === null || _battleState$problem5 === void 0 ? void 0 : _battleState$problem5.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-cases\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Test Cases\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"test-cases-list\",\n              children: testCases.map(testCase => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"test-case\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"test-case-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Input:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 675,\n                    columnNumber: 21\n                  }, this), \" \", testCase.input]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"test-case-output\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Expected Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 678,\n                    columnNumber: 21\n                  }, this), \" \", testCase.expectedOutput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 19\n                }, this)]\n              }, testCase.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 11\n          }, this), isDemoMode && battleState.opponent && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"opponent-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: battleState.opponent.avatar,\n              alt: battleState.opponent.name,\n              className: \"opponent-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"opponent-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: battleState.opponent.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Rating: \", battleState.opponent.rating]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Win Rate: \", battleState.opponent.winRate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Language: \", battleState.opponent.preferredLanguage]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedLanguage,\n              onChange: e => {\n                setSelectedLanguage(e.target.value);\n                setBattleState(prev => ({\n                  ...prev,\n                  userCode: getDefaultStarterCode(e.target.value)\n                }));\n              },\n              className: \"language-selector\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"javascript\",\n                children: \"JavaScript\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"python\",\n                children: \"Python\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"java\",\n                children: \"Java\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"cpp\",\n                children: \"C++\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"csharp\",\n                children: \"C#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editor-actions-top\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"reset-code-btn\",\n                onClick: () => {\n                  setBattleState(prev => ({\n                    ...prev,\n                    userCode: getDefaultStarterCode(selectedLanguage)\n                  }));\n                },\n                children: \"Reset Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-container\",\n            children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n              code: battleState.userCode,\n              language: selectedLanguage,\n              onChange: handleEditorChange,\n              theme: editorTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-footer\",\n            children: [showCompilerOutput && /*#__PURE__*/_jsxDEV(CompilerOutput, {\n              results: compilerOutput,\n              isLoading: isCompiling,\n              error: compilerError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editor-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"run-button\",\n                onClick: submitCode,\n                disabled: isSubmitting,\n                children: isSubmitting ? \"Running...\" : \"Run Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 753,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"hint-button\",\n                onClick: () => setShowHint(true),\n                children: \"Show Hint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"insights-button\",\n                onClick: () => setShowAiInsights(true),\n                children: \"Show AI Insights\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 7\n      }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Hint for Two Sum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Consider using a hash map (object in JavaScript) to store the numbers you've seen so far. For each number, check if its complement (target - num) exists in the hash map.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This approach allows you to find the solution in a single pass through the array.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint-steps\",\n            children: /*#__PURE__*/_jsxDEV(\"ol\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Create an empty hash map/object\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Iterate through the array\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"For each element, calculate the complement (target - current number)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Check if the complement exists in the hash map\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"If it does, return the indices of the current number and its complement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"If not, add the current number and its index to the hash map\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-modal\",\n            onClick: () => setShowHint(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 9\n      }, this), showAiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"AI Insights: Two Sum Problem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The Two Sum problem is a classic example where using a hash map can reduce the time complexity from O(n\\xB2) to O(n).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Instead of using nested loops to check every pair, you can use a single pass through the array, storing each number and its index in a hash map.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Solution Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"solution-analysis\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"analysis-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Brute Force Approach:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Use two nested loops to check all possible pairs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 804,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Time Complexity: O(n\\xB2)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 805,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Space Complexity: O(1)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 806,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"analysis-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Optimized Approach:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Use a hash map to store visited numbers and their indices\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Time Complexity: O(n)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 814,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Space Complexity: O(n)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 815,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"JavaScript Implementation Example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"code-example\",\n            children: `function twoSum(nums, target) {\n  const map = {};\n\n  for (let i = 0; i < nums.length; i++) {\n    const complement = target - nums[i];\n\n    if (map[complement] !== undefined) {\n      return [map[complement], i];\n    }\n\n    map[nums[i]] = i;\n  }\n\n  return null;\n}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-modal\",\n            onClick: () => setShowAiInsights(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 9\n      }, this), battleState.status === 'completed' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content battle-result\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: battleState.winner === 'user' ? 'Victory!' : 'Better luck next time!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: battleState.winner === 'user' ? 'Congratulations! You completed the challenge faster than your opponent.' : 'Your opponent completed the challenge first. Keep practicing!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Your Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [Math.round(battleState.userProgress), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 855,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Opponent Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [Math.round(battleState.opponentProgress), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate('/battles'),\n              children: \"Back to Battles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 863,\n              columnNumber: 15\n            }, this), battleState.winner === 'user' ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => window.location.reload(),\n              children: \"Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"practice-mode-result-btn\",\n              onClick: () => navigate('/battle/practice'),\n              children: \"Try in Practice Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coding-battle-container\",\n    children: [currentView === 'matchmaking' && renderMatchmakingView(), currentView === 'battle' && renderBattleInterface()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 882,\n    columnNumber: 5\n  }, this);\n}\n_s(CodingBattle, \"olM0MytcWU50So3zbWLxTBbutlk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CodingBattle;\nexport default CodingBattle;\nvar _c;\n$RefreshReg$(_c, \"CodingBattle\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useParams","useNavigate","AntiCheatingMonitor","antiCheatingService","CodeEditor","CompilerOutput","codeCompilerService","jsxDEV","_jsxDEV","CodingBattle","isDemoMode","_s","battleId","navigate","battleState","setBattleState","status","problem","opponent","userCode","userProgress","opponentProgress","winner","timeRemaining","currentView","setCurrentView","selectedLanguage","setSelectedLanguage","selectedDifficulty","selectedCategory","setShowMatchmakingModal","showHint","setShowHint","showAiInsights","setShowAiInsights","testCases","setTestCases","isSubmitting","setIsSubmitting","antiCheatingEnabled","setAntiCheatingEnabled","showCheatingWarning","setShowCheatingWarning","compilerOutput","setCompilerOutput","compilerError","setCompilerError","isCompiling","setIsCompiling","showCompilerOutput","setShowCompilerOutput","editorTheme","getDefaultStarterCode","language","defaultCode","javascript","python","java","cpp","csharp","timerIntervalRef","startTimer","current","setInterval","prev","clearInterval","startAIOpponentSimulation","progressInterval","newProgress","Math","min","random","setTimeout","fallbackToDemoBattle","console","warn","id","title","description","difficulty","category","starterCode","name","rating","winRate","preferredLanguage","skillLevel","avatar","input","expectedOutput","fetchBattleDetails","battleInfoStr","localStorage","getItem","opponentStr","battleInfo","JSON","parse","startTime","Date","now","elapsedSeconds","floor","max","removeItem","error","startDemoMode","log","startMatchmaking","registeredBattles","battleIdNum","parseInt","currentBattleStr","isBattleInProgress","includes","alert","handleEditorChange","value","takeCodeSnapshot","handleCheatingViolation","violations","submitCode","executionResult","executeCode","success","results","passedCount","filter","r","passed","length","progress","newState","formatTimeRemaining","seconds","minutes","remainingSeconds","renderMatchmakingView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderBattleInterface","_battleState$problem","_battleState$problem2","_battleState$problem3","_battleState$problem4","_battleState$opponent","_battleState$problem5","type","checked","onChange","style","width","round","userId","isActive","onViolation","map","testCase","src","alt","e","target","code","theme","isLoading","disabled","window","location","reload","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/pages/CodingBattle.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './CodingBattle.css';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport AntiCheatingMonitor from '../components/AntiCheatingMonitor';\nimport antiCheatingService from '../services/AntiCheatingService';\nimport CodeEditor from '../components/CodeEditor';\nimport CompilerOutput from '../components/CompilerOutput';\nimport codeCompilerService from '../services/CodeCompilerService';\n// Temporarily use a textarea instead of Monaco Editor\n// import Editor from '@monaco-editor/react';\n\nfunction CodingBattle({ isDemoMode = false }) {\n  const { battleId } = useParams();\n  const navigate = useNavigate();\n  // Editor reference (commented out as not currently used)\n  // const editorRef = useRef(null);\n\n  // State for battle\n  const [battleState, setBattleState] = useState({\n    status: 'waiting', // waiting, active, completed\n    problem: null,\n    opponent: null,\n    userCode: '',\n    userProgress: 0,\n    opponentProgress: 0,\n    winner: null,\n    timeRemaining: 1800 // 30 minutes in seconds\n  });\n\n  // State for UI\n  const [currentView, setCurrentView] = useState(isDemoMode ? 'battle' : 'matchmaking');\n  const [selectedLanguage, setSelectedLanguage] = useState('javascript');\n  // These state variables are defined but not currently used in the component\n  const [selectedDifficulty] = useState('medium');\n  const [selectedCategory] = useState('algorithms');\n  const [, setShowMatchmakingModal] = useState(!isDemoMode);\n  const [showHint, setShowHint] = useState(false);\n  const [showAiInsights, setShowAiInsights] = useState(false);\n  const [testCases, setTestCases] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Anti-cheating state\n  const [antiCheatingEnabled, setAntiCheatingEnabled] = useState(!isDemoMode);\n  const [showCheatingWarning, setShowCheatingWarning] = useState(false);\n\n  // Compiler state\n  const [compilerOutput, setCompilerOutput] = useState(null);\n  const [compilerError, setCompilerError] = useState(null);\n  const [isCompiling, setIsCompiling] = useState(false);\n  const [showCompilerOutput, setShowCompilerOutput] = useState(false);\n  const [editorTheme] = useState('vs-dark');\n\n  // Editor themes (commented out as not currently used)\n  // const editorThemes = {\n  //   javascript: 'vs-dark',\n  //   python: 'vs-dark',\n  //   java: 'vs-dark',\n  //   cpp: 'vs-dark',\n  //   csharp: 'vs-dark'\n  // };\n\n  // Get default starter code for selected language\n  const getDefaultStarterCode = (language) => {\n    if (!language) return '';\n\n    const defaultCode = {\n      javascript: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nfunction twoSum(nums, target) {\\n  // Your code here\\n}\",\n      python: \"def two_sum(nums, target):\\n    # Your code here\\n    pass\",\n      java: \"class Solution {\\n    public int[] twoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\",\n      cpp: \"#include <vector>\\n\\nclass Solution {\\npublic:\\n    std::vector<int> twoSum(std::vector<int>& nums, int target) {\\n        // Your code here\\n        return {0, 0};\\n    }\\n};\",\n      csharp: \"public class Solution {\\n    public int[] TwoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\"\n    };\n\n    return defaultCode[language] || '';\n  };\n\n  // Timer for countdown\n  const timerIntervalRef = useRef(null);\n\n  const startTimer = useCallback(() => {\n    timerIntervalRef.current = setInterval(() => {\n      setBattleState(prev => {\n        if (prev.timeRemaining <= 0) {\n          clearInterval(timerIntervalRef.current);\n          return { ...prev, status: 'completed' };\n        }\n        return { ...prev, timeRemaining: prev.timeRemaining - 1 };\n      });\n    }, 1000);\n  }, []);\n\n  // Simulate AI opponent progress\n  const startAIOpponentSimulation = useCallback(() => {\n    const progressInterval = setInterval(() => {\n      setBattleState(prev => {\n        const newProgress = Math.min(prev.opponentProgress + Math.random() * 5, 100);\n\n        // If AI reaches 100%, they win\n        if (newProgress >= 100 && prev.userProgress < 100) {\n          clearInterval(progressInterval);\n          return {\n            ...prev,\n            opponentProgress: 100,\n            status: 'completed',\n            winner: 'opponent'\n          };\n        }\n\n        return {\n          ...prev,\n          opponentProgress: newProgress\n        };\n      });\n    }, 3000);\n\n    // Clean up interval after 5 minutes (simulating max battle time)\n    setTimeout(() => {\n      clearInterval(progressInterval);\n    }, 300000);\n  }, []);\n\n  // Fallback to demo battle if no battle info is found\n  const fallbackToDemoBattle = useCallback(() => {\n    console.warn('No battle info found, falling back to demo battle');\n\n    // Mock battle data\n    setBattleState({\n      status: 'active',\n      problem: {\n        id: 1,\n        title: \"Two Sum\",\n        description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\\n\\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\\n\\nYou can return the answer in any order.\",\n        difficulty: 'medium',\n        category: 'algorithms',\n        starterCode: {\n          javascript: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nfunction twoSum(nums, target) {\\n  // Your code here\\n}\",\n          python: \"def two_sum(nums, target):\\n    # Your code here\\n    pass\",\n          java: \"class Solution {\\n    public int[] twoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\",\n          cpp: \"#include <vector>\\n\\nclass Solution {\\npublic:\\n    std::vector<int> twoSum(std::vector<int>& nums, int target) {\\n        // Your code here\\n        return {0, 0};\\n    }\\n};\",\n          csharp: \"public class Solution {\\n    public int[] TwoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\"\n        }\n      },\n      opponent: {\n        name: \"JohnDoe123\",\n        rating: 1750,\n        winRate: \"68%\",\n        preferredLanguage: \"JavaScript\",\n        skillLevel: \"Intermediate\",\n        avatar: \"https://randomuser.me/api/portraits/men/32.jpg\"\n      },\n      userCode: getDefaultStarterCode(selectedLanguage),\n      userProgress: 0,\n      opponentProgress: 0,\n      winner: null,\n      timeRemaining: 1800\n    });\n\n    setTestCases([\n      {\n        id: 1,\n        input: \"[2, 7, 11, 15], 9\",\n        expectedOutput: \"[0,1]\"\n      },\n      {\n        id: 2,\n        input: \"[3, 2, 4], 6\",\n        expectedOutput: \"[1,2]\"\n      },\n      {\n        id: 3,\n        input: \"[3, 3], 6\",\n        expectedOutput: \"[0,1]\"\n      }\n    ]);\n\n    setCurrentView('battle');\n    startTimer();\n  }, [selectedLanguage, startTimer]);\n\n  // Fetch battle details from API\n  const fetchBattleDetails = useCallback(() => {\n    // In a real implementation, this would fetch battle details from an API\n    // For now, we'll use the battle info stored in localStorage\n\n    // Check if we have battle info in localStorage\n    const battleInfoStr = localStorage.getItem('currentBattle');\n    const opponentStr = localStorage.getItem('currentOpponent');\n\n    if (battleInfoStr) {\n      try {\n        const battleInfo = JSON.parse(battleInfoStr);\n        const opponent = opponentStr ? JSON.parse(opponentStr) : null;\n\n        // Calculate time remaining based on start time\n        const startTime = battleInfo.startTime || Date.now();\n        const elapsedSeconds = Math.floor((Date.now() - startTime) / 1000);\n        const timeRemaining = Math.max(1800 - elapsedSeconds, 0); // 30 minutes max\n\n        // Set battle state\n        setBattleState({\n          status: 'active',\n          problem: {\n            id: 1,\n            title: \"Two Sum\",\n            description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\\n\\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\\n\\nYou can return the answer in any order.\",\n            difficulty: battleInfo.difficulty || 'medium',\n            category: battleInfo.category || 'algorithms',\n            starterCode: {\n              javascript: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nfunction twoSum(nums, target) {\\n  // Your code here\\n}\",\n              python: \"def two_sum(nums, target):\\n    # Your code here\\n    pass\",\n              java: \"class Solution {\\n    public int[] twoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\",\n              cpp: \"#include <vector>\\n\\nclass Solution {\\npublic:\\n    std::vector<int> twoSum(std::vector<int>& nums, int target) {\\n        // Your code here\\n        return {0, 0};\\n    }\\n};\",\n              csharp: \"public class Solution {\\n    public int[] TwoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\"\n            }\n          },\n          opponent: opponent || {\n            name: \"JohnDoe123\",\n            rating: 1750,\n            winRate: \"68%\",\n            preferredLanguage: \"JavaScript\",\n            skillLevel: \"Intermediate\",\n            avatar: \"https://randomuser.me/api/portraits/men/32.jpg\"\n          },\n          userCode: getDefaultStarterCode(selectedLanguage),\n          userProgress: 0,\n          opponentProgress: 0,\n          winner: null,\n          timeRemaining: timeRemaining\n        });\n\n        setTestCases([\n          {\n            id: 1,\n            input: \"[2, 7, 11, 15], 9\",\n            expectedOutput: \"[0,1]\"\n          },\n          {\n            id: 2,\n            input: \"[3, 2, 4], 6\",\n            expectedOutput: \"[1,2]\"\n          },\n          {\n            id: 3,\n            input: \"[3, 3], 6\",\n            expectedOutput: \"[0,1]\"\n          }\n        ]);\n\n        setCurrentView('battle');\n        startTimer();\n\n        // Clear the localStorage items after successful initialization\n        // This prevents old battle data from being reused\n        if (!isDemoMode) {\n          setTimeout(() => {\n            localStorage.removeItem('currentBattle');\n            localStorage.removeItem('currentOpponent');\n          }, 5000);\n        }\n      } catch (error) {\n        console.error('Error parsing battle info:', error);\n        fallbackToDemoBattle();\n      }\n    } else {\n      // If no battle info is found, fall back to demo battle\n      fallbackToDemoBattle();\n    }\n  }, [selectedLanguage, startTimer, isDemoMode, fallbackToDemoBattle]);\n\n  // Start demo mode with AI opponent\n  const startDemoMode = useCallback(() => {\n    console.log(\"Starting Practice Mode...\");\n\n    // Hide matchmaking modal if open\n    setShowMatchmakingModal(false);\n\n    // Set current view to battle\n    setCurrentView('battle');\n\n    // Initialize a demo battle with a sample problem\n    setBattleState({\n      status: 'active',\n      problem: {\n        id: 1,\n        title: \"Two Sum\",\n        description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\\n\\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\\n\\nYou can return the answer in any order.\",\n        difficulty: selectedDifficulty || 'medium',\n        category: selectedCategory || 'algorithms',\n        starterCode: {\n          javascript: \"/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nfunction twoSum(nums, target) {\\n  // Your code here\\n}\",\n          python: \"def two_sum(nums, target):\\n    # Your code here\\n    pass\",\n          java: \"class Solution {\\n    public int[] twoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\",\n          cpp: \"#include <vector>\\n\\nclass Solution {\\npublic:\\n    std::vector<int> twoSum(std::vector<int>& nums, int target) {\\n        // Your code here\\n        return {0, 0};\\n    }\\n};\",\n          csharp: \"public class Solution {\\n    public int[] TwoSum(int[] nums, int target) {\\n        // Your code here\\n        return new int[]{0, 0};\\n    }\\n}\"\n        }\n      },\n      opponent: {\n        name: \"AI Opponent\",\n        rating: 1800,\n        winRate: \"75%\",\n        preferredLanguage: \"Python\",\n        skillLevel: \"Adaptive\",\n        avatar: \"https://randomuser.me/api/portraits/lego/1.jpg\"\n      },\n      userCode: getDefaultStarterCode(selectedLanguage || 'javascript'),\n      userProgress: 0,\n      opponentProgress: 0,\n      winner: null,\n      timeRemaining: 1800\n    });\n\n    // Set demo test cases\n    setTestCases([\n      {\n        id: 1,\n        input: \"[2, 7, 11, 15], 9\",\n        expectedOutput: \"[0,1]\"\n      },\n      {\n        id: 2,\n        input: \"[3, 2, 4], 6\",\n        expectedOutput: \"[1,2]\"\n      },\n      {\n        id: 3,\n        input: \"[3, 3], 6\",\n        expectedOutput: \"[0,1]\"\n      }\n    ]);\n\n    // Start timer\n    startTimer();\n\n    // Simulate AI opponent progress updates\n    startAIOpponentSimulation();\n  }, [selectedLanguage, selectedDifficulty, selectedCategory, startTimer, startAIOpponentSimulation]);\n\n  // Start matchmaking\n  const startMatchmaking = useCallback(() => {\n    console.log(\"Starting matchmaking...\");\n    setShowMatchmakingModal(false);\n\n    // Simulate matchmaking\n    setTimeout(() => {\n      fetchBattleDetails();\n    }, 2000);\n  }, [fetchBattleDetails]);\n\n  // Initialize battle or demo mode\n  useEffect(() => {\n    console.log(\"CodingBattle component mounted, isDemoMode:\", isDemoMode);\n\n    if (isDemoMode) {\n      console.log(\"Starting demo mode automatically\");\n      startDemoMode();\n    } else if (battleId) {\n      // Check if user is registered for this battle\n      const registeredBattles = JSON.parse(localStorage.getItem('registeredBattles') || '[]');\n      const battleIdNum = parseInt(battleId, 10);\n\n      // Check if this battle is in the registered battles list or if there's a current battle in localStorage\n      const currentBattleStr = localStorage.getItem('currentBattle');\n      const isBattleInProgress = currentBattleStr && JSON.parse(currentBattleStr).id === battleIdNum;\n\n      if (registeredBattles.includes(battleIdNum) || isBattleInProgress) {\n        // Fetch battle details from API\n        fetchBattleDetails();\n      } else {\n        // If not registered, show a message and redirect to battles page\n        console.warn(\"Not registered for battle:\", battleIdNum);\n        alert(\"You are not registered for this battle. Please register first.\");\n        navigate('/battles');\n      }\n    }\n\n    // Cleanup timer on unmount\n    return () => {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n      }\n    };\n  }, [isDemoMode, battleId, fetchBattleDetails, startDemoMode, navigate]);\n\n\n\n  // Handle editor mount (commented out as not currently used)\n  // const handleEditorDidMount = (editor, monaco) => {\n  //   editorRef.current = editor;\n  // };\n\n  // Handle editor change\n  const handleEditorChange = (value) => {\n    setBattleState(prev => ({\n      ...prev,\n      userCode: value\n    }));\n\n    // Take code snapshot for anti-cheating analysis\n    if (antiCheatingEnabled && !isDemoMode) {\n      antiCheatingService.takeCodeSnapshot(value);\n    }\n  };\n\n  // Handle anti-cheating violations\n  const handleCheatingViolation = (violations) => {\n    setShowCheatingWarning(true);\n\n    // Log the violation\n    console.warn('Anti-cheating violation detected:', violations);\n\n    // In a real implementation, this would report to the server\n    // and potentially take action based on the severity\n  };\n\n  // Submit code for testing\n  const submitCode = async () => {\n    if (isSubmitting) return;\n\n    setIsSubmitting(true);\n    setIsCompiling(true);\n    setCompilerError(null);\n    setShowCompilerOutput(true);\n\n    try {\n      // Execute the code with the test cases\n      const executionResult = await codeCompilerService.executeCode(\n        battleState.userCode,\n        selectedLanguage,\n        testCases\n      );\n\n      if (!executionResult.success) {\n        // Handle compilation or execution error\n        setCompilerError(executionResult.error);\n        setCompilerOutput(null);\n        return;\n      }\n\n      // Set the compiler output\n      setCompilerOutput(executionResult.results);\n\n      // Calculate progress based on passing tests\n      const passedCount = executionResult.results.filter(r => r.passed).length;\n      const progress = (passedCount / testCases.length) * 100;\n\n      // Update battle state\n      setBattleState(prev => {\n        const newState = {\n          ...prev,\n          userProgress: progress\n        };\n\n        // Check if user won\n        if (progress >= 100 && prev.opponentProgress < 100) {\n          newState.status = 'completed';\n          newState.winner = 'user';\n        }\n\n        return newState;\n      });\n\n      // If this is a real battle (not demo mode), send results to opponent\n      if (!isDemoMode) {\n        // In a real implementation, this would send the results to the server\n        console.log('Sending results to opponent:', executionResult);\n\n        // Simulate opponent progress update\n        if (Math.random() > 0.7) { // 30% chance opponent makes progress\n          const opponentProgress = Math.min(\n            battleState.opponentProgress + Math.random() * 30,\n            100\n          );\n\n          setBattleState(prev => ({\n            ...prev,\n            opponentProgress\n          }));\n\n          // Check if opponent won\n          if (opponentProgress >= 100) {\n            setBattleState(prev => ({\n              ...prev,\n              status: 'completed',\n              winner: 'opponent'\n            }));\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error executing code:', error);\n      setCompilerError('An unexpected error occurred while executing your code.');\n    } finally {\n      setIsSubmitting(false);\n      setIsCompiling(false);\n    }\n  };\n\n  // Format time remaining\n  const formatTimeRemaining = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  };\n\n  // Render matchmaking view\n  const renderMatchmakingView = () => (\n    <div className=\"coding-battle-main-menu\">\n      <h1>Coding Battle</h1>\n      <p className=\"main-subtitle\">Challenge your coding skills in real-time battles</p>\n\n      <div className=\"battle-mode-cards\">\n        <div className=\"mode-card\">\n          <div className=\"mode-icon\">🏆</div>\n          <h2>Competitive Mode</h2>\n          <p>Challenge real opponents in a timed coding battle. Solve problems faster to win!</p>\n          <button className=\"mode-button competitive\" onClick={startMatchmaking}>\n            Find Opponent\n          </button>\n        </div>\n\n        <div className=\"mode-card practice-card\">\n          <div className=\"mode-icon\">🏋️</div>\n          <h2>Practice Mode</h2>\n          <p>Sharpen your skills with AI opponents. Perfect for beginners and pros alike.</p>\n          <button className=\"mode-button practice\" onClick={startDemoMode}>\n            Start Practice\n          </button>\n        </div>\n      </div>\n\n      <div className=\"battle-stats\">\n        <div className=\"stat\">\n          <span className=\"stat-number\">10,000+</span>\n          <span className=\"stat-label\">Active Coders</span>\n        </div>\n        <div className=\"stat\">\n          <span className=\"stat-number\">500+</span>\n          <span className=\"stat-label\">Coding Problems</span>\n        </div>\n        <div className=\"stat\">\n          <span className=\"stat-number\">50,000+</span>\n          <span className=\"stat-label\">Battles Completed</span>\n        </div>\n      </div>\n\n      {/* Floating Practice Mode Button */}\n      <button id=\"floating-practice-button\" onClick={startDemoMode}>\n        🏋️ PRACTICE MODE\n      </button>\n    </div>\n  );\n\n  // Render battle interface\n  const renderBattleInterface = () => (\n    <div className=\"battle-container\">\n      {isDemoMode && (\n        <div className=\"practice-mode-banner\">\n          Practice Mode - Sharpen your skills at your own pace\n        </div>\n      )}\n\n      {!isDemoMode && (\n        <button\n          className=\"practice-mode-button\"\n          onClick={() => navigate('/battle/practice')}\n        >\n          Switch to Practice Mode\n        </button>\n      )}\n\n      <div className=\"battle-header\">\n        <div className=\"problem-info\">\n          <h2>{battleState.problem?.title || 'Loading problem...'}</h2>\n          <div className=\"problem-meta\">\n            <span className={`difficulty ${battleState.problem?.difficulty}`}>\n              {battleState.problem?.difficulty}\n            </span>\n            <span className=\"category\">{battleState.problem?.category}</span>\n          </div>\n        </div>\n\n        <div className=\"battle-timer\">\n          Time: {formatTimeRemaining(battleState.timeRemaining)}\n        </div>\n\n        {!isDemoMode && (\n          <div className=\"anti-cheat-toggle\">\n            <label className=\"toggle-switch\">\n              <input\n                type=\"checkbox\"\n                checked={antiCheatingEnabled}\n                onChange={() => setAntiCheatingEnabled(!antiCheatingEnabled)}\n              />\n              <span className=\"toggle-slider\"></span>\n            </label>\n            <span className=\"toggle-label\">Anti-Cheating System</span>\n          </div>\n        )}\n\n        <div className=\"battle-status\">\n          <div className=\"progress-container\">\n            <div className=\"user-progress\">\n              <span className=\"progress-label\">You</span>\n              <div className=\"progress-bar\">\n                <div\n                  className=\"progress-fill\"\n                  style={{width: `${battleState.userProgress}%`}}\n                ></div>\n              </div>\n              <span className=\"progress-percent\">{Math.round(battleState.userProgress)}%</span>\n            </div>\n\n            {battleState.opponent && (\n              <div className=\"opponent-progress\">\n                <span className=\"progress-label\">{battleState.opponent?.name}</span>\n                <div className=\"progress-bar\">\n                  <div\n                    className=\"progress-fill\"\n                    style={{width: `${battleState.opponentProgress}%`}}\n                  ></div>\n                </div>\n                <span className=\"progress-percent\">{Math.round(battleState.opponentProgress)}%</span>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Anti-Cheating Monitor (only in competitive mode) */}\n      {!isDemoMode && (\n        <AntiCheatingMonitor\n          battleId={battleId}\n          userId=\"current-user\"\n          isActive={antiCheatingEnabled}\n          onViolation={handleCheatingViolation}\n        />\n      )}\n\n      {/* Cheating Warning Modal */}\n      {showCheatingWarning && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content warning-modal\">\n            <h3>⚠️ Fair Play Warning</h3>\n            <p>Our anti-cheating system has detected suspicious activity. Please ensure you are following the competition rules:</p>\n            <ul className=\"warning-list\">\n              <li>Solve problems independently without external help</li>\n              <li>Do not copy solutions from other sources</li>\n              <li>Stay on the battle page during the competition</li>\n              <li>Do not use AI tools or code generators</li>\n            </ul>\n            <p className=\"warning-note\">Continued violations may result in disqualification.</p>\n            <button\n              className=\"close-modal warning-btn\"\n              onClick={() => setShowCheatingWarning(false)}\n            >\n              I Understand\n            </button>\n          </div>\n        </div>\n      )}\n\n      <div className=\"battle-content\">\n        <div className=\"problem-panel\">\n          <div className=\"problem-description\">\n            <h3>Problem Description</h3>\n            <p>{battleState.problem?.description}</p>\n          </div>\n\n          <div className=\"test-cases\">\n            <h3>Test Cases</h3>\n            <div className=\"test-cases-list\">\n              {testCases.map(testCase => (\n                <div className=\"test-case\" key={testCase.id}>\n                  <div className=\"test-case-input\">\n                    <strong>Input:</strong> {testCase.input}\n                  </div>\n                  <div className=\"test-case-output\">\n                    <strong>Expected Output:</strong> {testCase.expectedOutput}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {isDemoMode && battleState.opponent && (\n            <div className=\"opponent-info\">\n              <img\n                src={battleState.opponent.avatar}\n                alt={battleState.opponent.name}\n                className=\"opponent-avatar\"\n              />\n              <div className=\"opponent-details\">\n                <h3>{battleState.opponent.name}</h3>\n                <p>Rating: {battleState.opponent.rating}</p>\n                <p>Win Rate: {battleState.opponent.winRate}</p>\n                <p>Language: {battleState.opponent.preferredLanguage}</p>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"editor-panel\">\n          <div className=\"editor-header\">\n            <select\n              value={selectedLanguage}\n              onChange={(e) => {\n                setSelectedLanguage(e.target.value);\n                setBattleState(prev => ({\n                  ...prev,\n                  userCode: getDefaultStarterCode(e.target.value)\n                }));\n              }}\n              className=\"language-selector\"\n            >\n              <option value=\"javascript\">JavaScript</option>\n              <option value=\"python\">Python</option>\n              <option value=\"java\">Java</option>\n              <option value=\"cpp\">C++</option>\n              <option value=\"csharp\">C#</option>\n            </select>\n\n            <div className=\"editor-actions-top\">\n              <button className=\"reset-code-btn\" onClick={() => {\n                setBattleState(prev => ({\n                  ...prev,\n                  userCode: getDefaultStarterCode(selectedLanguage)\n                }));\n              }}>\n                Reset Code\n              </button>\n            </div>\n          </div>\n\n          <div className=\"editor-container\">\n            <CodeEditor\n              code={battleState.userCode}\n              language={selectedLanguage}\n              onChange={handleEditorChange}\n              theme={editorTheme}\n            />\n          </div>\n\n          <div className=\"editor-footer\">\n            {showCompilerOutput && (\n              <CompilerOutput\n                results={compilerOutput}\n                isLoading={isCompiling}\n                error={compilerError}\n              />\n            )}\n\n            <div className=\"editor-actions\">\n              <button\n                className=\"run-button\"\n                onClick={submitCode}\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? \"Running...\" : \"Run Code\"}\n              </button>\n              <button className=\"hint-button\" onClick={() => setShowHint(true)}>\n                Show Hint\n              </button>\n              <button className=\"insights-button\" onClick={() => setShowAiInsights(true)}>\n                Show AI Insights\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showHint && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h3>Hint for Two Sum</h3>\n            <p>Consider using a hash map (object in JavaScript) to store the numbers you've seen so far. For each number, check if its complement (target - num) exists in the hash map.</p>\n            <p>This approach allows you to find the solution in a single pass through the array.</p>\n            <div className=\"hint-steps\">\n              <ol>\n                <li>Create an empty hash map/object</li>\n                <li>Iterate through the array</li>\n                <li>For each element, calculate the complement (target - current number)</li>\n                <li>Check if the complement exists in the hash map</li>\n                <li>If it does, return the indices of the current number and its complement</li>\n                <li>If not, add the current number and its index to the hash map</li>\n              </ol>\n            </div>\n            <button className=\"close-modal\" onClick={() => setShowHint(false)}>Close</button>\n          </div>\n        </div>\n      )}\n\n      {showAiInsights && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h3>AI Insights: Two Sum Problem</h3>\n            <p>The Two Sum problem is a classic example where using a hash map can reduce the time complexity from O(n²) to O(n).</p>\n            <p>Instead of using nested loops to check every pair, you can use a single pass through the array, storing each number and its index in a hash map.</p>\n\n            <h4>Solution Analysis</h4>\n            <div className=\"solution-analysis\">\n              <div className=\"analysis-item\">\n                <strong>Brute Force Approach:</strong>\n                <ul>\n                  <li>Use two nested loops to check all possible pairs</li>\n                  <li>Time Complexity: O(n²)</li>\n                  <li>Space Complexity: O(1)</li>\n                </ul>\n              </div>\n\n              <div className=\"analysis-item\">\n                <strong>Optimized Approach:</strong>\n                <ul>\n                  <li>Use a hash map to store visited numbers and their indices</li>\n                  <li>Time Complexity: O(n)</li>\n                  <li>Space Complexity: O(n)</li>\n                </ul>\n              </div>\n            </div>\n\n            <h4>JavaScript Implementation Example</h4>\n            <pre className=\"code-example\">\n{`function twoSum(nums, target) {\n  const map = {};\n\n  for (let i = 0; i < nums.length; i++) {\n    const complement = target - nums[i];\n\n    if (map[complement] !== undefined) {\n      return [map[complement], i];\n    }\n\n    map[nums[i]] = i;\n  }\n\n  return null;\n}`}\n            </pre>\n\n            <button className=\"close-modal\" onClick={() => setShowAiInsights(false)}>Close</button>\n          </div>\n        </div>\n      )}\n\n      {battleState.status === 'completed' && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content battle-result\">\n            <h3>{battleState.winner === 'user' ? 'Victory!' : 'Better luck next time!'}</h3>\n            <p>{battleState.winner === 'user'\n              ? 'Congratulations! You completed the challenge faster than your opponent.'\n              : 'Your opponent completed the challenge first. Keep practicing!'}\n            </p>\n            <div className=\"result-stats\">\n              <div className=\"stat\">\n                <span className=\"stat-label\">Your Progress</span>\n                <span className=\"stat-value\">{Math.round(battleState.userProgress)}%</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"stat-label\">Opponent Progress</span>\n                <span className=\"stat-value\">{Math.round(battleState.opponentProgress)}%</span>\n              </div>\n            </div>\n            <div className=\"result-actions\">\n              <button onClick={() => navigate('/battles')}>Back to Battles</button>\n              {battleState.winner === 'user' ? (\n                <button onClick={() => window.location.reload()}>Try Again</button>\n              ) : (\n                <button\n                  className=\"practice-mode-result-btn\"\n                  onClick={() => navigate('/battle/practice')}\n                >\n                  Try in Practice Mode\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"coding-battle-container\">\n      {currentView === 'matchmaking' && renderMatchmakingView()}\n      {currentView === 'battle' && renderBattleInterface()}\n    </div>\n  );\n}\n\nexport default CodingBattle;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}