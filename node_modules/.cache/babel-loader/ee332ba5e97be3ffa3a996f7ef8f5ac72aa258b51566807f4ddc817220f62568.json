{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\pages\\\\LearningPathDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ModuleContent from '../components/ModuleContent';\nimport { getModuleContent } from '../data/moduleContentData';\nimport { getLanguageLearningPathDetail } from '../data/languageLearningPathsData';\nimport './LearningPathDetail.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LearningPathDetail() {\n  _s();\n  var _userProgress$moduleP2, _userProgress$moduleP3, _userProgress$complet2;\n  const {\n    pathId\n  } = useParams();\n  const navigate = useNavigate();\n  const [path, setPath] = useState(null);\n  const [modules, setModules] = useState([]);\n  const [userProgress, setUserProgress] = useState({});\n  const [activeModuleId, setActiveModuleId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showModuleContent, setShowModuleContent] = useState(false);\n  const [currentModuleContent, setCurrentModuleContent] = useState(null);\n  useEffect(() => {\n    // Fetch learning path details\n    fetchLearningPath();\n    fetchModules();\n    fetchUserProgress();\n  }, [pathId]);\n  const fetchLearningPath = async () => {\n    try {\n      // In a real implementation, this would call your API\n      // For now, we'll use mock data\n      setLoading(true);\n\n      // Simulate API call\n      setTimeout(() => {\n        const mockPath = getMockPath(pathId);\n        setPath(mockPath);\n        setLoading(false);\n\n        // Set the first module as active by default if user hasn't started any module\n        if (mockPath && mockPath.modules && mockPath.modules.length > 0) {\n          setActiveModuleId(mockPath.modules[0].id);\n        }\n      }, 800);\n    } catch (error) {\n      console.error(\"Error fetching learning path:\", error);\n      setLoading(false);\n    }\n  };\n  const fetchModules = async () => {\n    try {\n      // In a real implementation, this would call your API\n      // For now, we'll use mock data\n      setTimeout(() => {\n        const mockModules = getMockModules(pathId);\n        setModules(mockModules);\n      }, 1000);\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n    }\n  };\n  const fetchUserProgress = async () => {\n    try {\n      // In a real implementation, this would call your API\n      // For now, we'll use mock data\n      setTimeout(() => {\n        const mockProgress = {\n          pathProgress: 35,\n          completedModules: [\"m1\", \"m2\"],\n          moduleProgress: {\n            \"m1\": 100,\n            \"m2\": 100,\n            \"m3\": 40,\n            \"m4\": 0,\n            \"m5\": 0\n          }\n        };\n        setUserProgress(mockProgress);\n      }, 1200);\n    } catch (error) {\n      console.error(\"Error fetching user progress:\", error);\n    }\n  };\n  const handleModuleClick = moduleId => {\n    setActiveModuleId(moduleId);\n    setShowModuleContent(false); // Hide module content when switching modules\n  };\n  const handleStartModule = moduleId => {\n    // Load module content\n    const moduleContent = getModuleContent(moduleId);\n    if (moduleContent) {\n      setCurrentModuleContent(moduleContent);\n      setShowModuleContent(true);\n\n      // In a real app, this would also update the user's progress\n      console.log(`Starting module ${moduleId}`);\n    } else {\n      console.error(`No content found for module ${moduleId}`);\n    }\n  };\n  const handleContinueModule = moduleId => {\n    // Similar to handleStartModule, but would resume from where the user left off\n    const moduleContent = getModuleContent(moduleId);\n    if (moduleContent) {\n      setCurrentModuleContent(moduleContent);\n      setShowModuleContent(true);\n\n      // In a real app, this would also load the user's progress\n      console.log(`Continuing module ${moduleId}`);\n    } else {\n      console.error(`No content found for module ${moduleId}`);\n    }\n  };\n  const handleCompleteModule = moduleId => {\n    // In a real app, this would update the user's progress\n    console.log(`Completed module ${moduleId}`);\n\n    // Update local state to reflect completion\n    setUserProgress(prev => ({\n      ...prev,\n      completedModules: [...(prev.completedModules || []), moduleId],\n      moduleProgress: {\n        ...(prev.moduleProgress || {}),\n        [moduleId]: 100\n      }\n    }));\n\n    // Return to module overview\n    setShowModuleContent(false);\n  };\n  const handleBackToModuleOverview = () => {\n    setShowModuleContent(false);\n  };\n  const handleBackToLearningPaths = () => {\n    navigate('/learning');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"learning-detail-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n  if (!path) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"learning-detail-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Learning Path Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The learning path you're looking for doesn't exist or has been removed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToLearningPaths,\n          className: \"back-btn\",\n          children: \"Back to Learning Paths\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n  const activeModule = modules.find(module => module.id === activeModuleId);\n\n  // If showing module content, render the ModuleContent component\n  if (showModuleContent && currentModuleContent) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"learning-detail-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"learning-detail-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToModuleOverview,\n          className: \"back-btn\",\n          children: \"\\u2190 Back to Module Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: currentModuleContent.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModuleContent, {\n        module: currentModuleContent,\n        onComplete: handleCompleteModule,\n        onBack: handleBackToModuleOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"learning-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"learning-detail-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackToLearningPaths,\n        className: \"back-btn\",\n        children: \"\\u2190 Back to Learning Paths\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: path.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"path-meta-detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"difficulty\",\n          children: path.difficulty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"modules-count\",\n          children: [path.moduleCount, \" Modules\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"estimated-time\",\n          children: path.estimatedTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"path-description\",\n        children: path.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overall-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-label\",\n          children: \"Overall Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            style: {\n              width: `${userProgress.pathProgress || 0}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [userProgress.pathProgress || 0, \"% Complete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"learning-detail-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modules-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Modules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modules-list\",\n          children: modules.map(module => {\n            var _userProgress$complet, _userProgress$moduleP;\n            const isCompleted = (_userProgress$complet = userProgress.completedModules) === null || _userProgress$complet === void 0 ? void 0 : _userProgress$complet.includes(module.id);\n            const progress = ((_userProgress$moduleP = userProgress.moduleProgress) === null || _userProgress$moduleP === void 0 ? void 0 : _userProgress$moduleP[module.id]) || 0;\n            const isActive = activeModuleId === module.id;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `module-item ${isActive ? 'active' : ''} ${isCompleted ? 'completed' : ''}`,\n              onClick: () => handleModuleClick(module.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"module-status\",\n                children: isCompleted ? '✓' : progress > 0 ? '⋯' : '○'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"module-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: module.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"module-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: module.estimatedTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this), progress > 0 && !isCompleted && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [progress, \"% complete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this)]\n            }, module.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"module-content\",\n        children: activeModule ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: activeModule.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"module-description\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: activeModule.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"module-topics\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Topics Covered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: activeModule.topics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: topic\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"module-resources\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Learning Resources\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"resources-list\",\n              children: activeModule.resources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"resource-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"resource-icon\",\n                  children: resource.type === 'video' ? '🎬' : resource.type === 'article' ? '📄' : resource.type === 'exercise' ? '💻' : '📚'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"resource-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: resource.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: resource.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"resource-meta\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: resource.type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: resource.duration\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"module-actions\",\n            children: ((_userProgress$moduleP2 = userProgress.moduleProgress) === null || _userProgress$moduleP2 === void 0 ? void 0 : _userProgress$moduleP2[activeModule.id]) > 0 && ((_userProgress$moduleP3 = userProgress.moduleProgress) === null || _userProgress$moduleP3 === void 0 ? void 0 : _userProgress$moduleP3[activeModule.id]) < 100 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"continue-module-btn\",\n              onClick: () => handleContinueModule(activeModule.id),\n              children: \"Continue Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this) : (_userProgress$complet2 = userProgress.completedModules) !== null && _userProgress$complet2 !== void 0 && _userProgress$complet2.includes(activeModule.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"review-module-btn\",\n              onClick: () => handleStartModule(activeModule.id),\n              children: \"Review Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"start-module-btn\",\n              onClick: () => handleStartModule(activeModule.id),\n              children: \"Start Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-module-selected\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a module from the sidebar to view its content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n\n// Mock data functions\n_s(LearningPathDetail, \"gX+Zk4WgWNoIpjDitBR3aepJx/s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = LearningPathDetail;\nfunction getMockPath(pathId) {\n  const paths = {\n    \"1\": {\n      id: \"1\",\n      title: \"Data Structures Fundamentals\",\n      difficulty: \"Beginner\",\n      moduleCount: 5,\n      estimatedTime: \"10-12 hours\",\n      description: \"Master the essential data structures that form the foundation of efficient algorithms and software development. This path covers arrays, linked lists, stacks, queues, trees, and more.\",\n      prerequisites: [\"Basic programming knowledge\", \"Understanding of variables and functions\"],\n      learningOutcomes: [\"Implement common data structures from scratch\", \"Analyze the time and space complexity of operations\", \"Choose the right data structure for specific problems\", \"Optimize code using appropriate data structures\"]\n    },\n    \"2\": {\n      id: \"2\",\n      title: \"Advanced Algorithms Mastery\",\n      difficulty: \"Advanced\",\n      moduleCount: 7,\n      estimatedTime: \"15-20 hours\",\n      description: \"Dive deep into advanced algorithmic techniques used in competitive programming and technical interviews. Learn graph algorithms, dynamic programming, and optimization techniques.\",\n      prerequisites: [\"Strong programming foundation\", \"Basic data structures knowledge\", \"Understanding of time complexity\"],\n      learningOutcomes: [\"Solve complex algorithmic problems efficiently\", \"Implement advanced algorithms from scratch\", \"Optimize solutions for time and space complexity\", \"Apply algorithmic thinking to real-world problems\"]\n    }\n  };\n  return paths[pathId];\n}\nfunction getMockModules(pathId) {\n  if (pathId === \"1\") {\n    return [{\n      id: \"m1\",\n      title: \"Arrays and Strings\",\n      description: \"Learn about arrays, dynamic arrays, and string manipulation techniques. Understand how arrays are stored in memory and the complexity of common operations.\",\n      estimatedTime: \"2 hours\",\n      topics: [\"Static vs Dynamic Arrays\", \"Array Memory Layout\", \"Common Array Operations\", \"String Manipulation\", \"Array-based Techniques\"],\n      resources: [{\n        type: \"article\",\n        title: \"Introduction to Arrays\",\n        description: \"A comprehensive guide to understanding arrays and their implementation\",\n        duration: \"15 min read\",\n        url: \"https://example.com/arrays-intro\"\n      }, {\n        type: \"video\",\n        title: \"Array Data Structure\",\n        description: \"Visual explanation of how arrays work in memory\",\n        duration: \"22 min\",\n        url: \"https://example.com/array-video\"\n      }, {\n        type: \"exercise\",\n        title: \"Array Manipulation Practice\",\n        description: \"Solve 5 problems involving array operations\",\n        duration: \"45 min\",\n        url: \"https://example.com/array-exercises\"\n      }]\n    }, {\n      id: \"m2\",\n      title: \"Linked Lists\",\n      description: \"Explore singly and doubly linked lists, their implementation, and common operations. Learn when to use linked lists over arrays.\",\n      estimatedTime: \"2.5 hours\",\n      topics: [\"Singly Linked Lists\", \"Doubly Linked Lists\", \"Circular Linked Lists\", \"Linked List Operations\", \"Linked List vs Arrays\"],\n      resources: [{\n        type: \"article\",\n        title: \"Linked Lists Explained\",\n        description: \"Detailed explanation of linked list data structures\",\n        duration: \"20 min read\",\n        url: \"https://example.com/linked-lists\"\n      }, {\n        type: \"video\",\n        title: \"Implementing Linked Lists\",\n        description: \"Step-by-step guide to implementing linked lists from scratch\",\n        duration: \"35 min\",\n        url: \"https://example.com/linked-list-implementation\"\n      }, {\n        type: \"exercise\",\n        title: \"Linked List Challenges\",\n        description: \"Practice problems focusing on linked list manipulation\",\n        duration: \"1 hour\",\n        url: \"https://example.com/linked-list-exercises\"\n      }]\n    }, {\n      id: \"m3\",\n      title: \"Stacks and Queues\",\n      description: \"Learn about stack and queue data structures, their implementations, and applications. Understand LIFO and FIFO principles.\",\n      estimatedTime: \"2 hours\",\n      topics: [\"Stack Operations and Implementation\", \"Queue Operations and Implementation\", \"Circular Queues\", \"Priority Queues\", \"Applications of Stacks and Queues\"],\n      resources: [{\n        type: \"article\",\n        title: \"Understanding Stacks and Queues\",\n        description: \"Comprehensive guide to stack and queue data structures\",\n        duration: \"25 min read\",\n        url: \"https://example.com/stacks-queues\"\n      }, {\n        type: \"video\",\n        title: \"Stack and Queue Visualized\",\n        description: \"Visual explanation of how stacks and queues work\",\n        duration: \"28 min\",\n        url: \"https://example.com/stack-queue-video\"\n      }, {\n        type: \"exercise\",\n        title: \"Stack and Queue Problems\",\n        description: \"Solve problems using stacks and queues\",\n        duration: \"50 min\",\n        url: \"https://example.com/stack-queue-exercises\"\n      }]\n    }, {\n      id: \"m4\",\n      title: \"Trees and Binary Search Trees\",\n      description: \"Explore tree data structures with a focus on binary trees and binary search trees. Learn tree traversal algorithms and operations.\",\n      estimatedTime: \"3 hours\",\n      topics: [\"Tree Terminology\", \"Binary Trees\", \"Binary Search Trees\", \"Tree Traversal Algorithms\", \"BST Operations\"],\n      resources: [{\n        type: \"article\",\n        title: \"Introduction to Trees\",\n        description: \"Learn about tree data structures and their properties\",\n        duration: \"30 min read\",\n        url: \"https://example.com/trees-intro\"\n      }, {\n        type: \"video\",\n        title: \"Binary Search Trees Explained\",\n        description: \"Detailed explanation of BST with examples\",\n        duration: \"40 min\",\n        url: \"https://example.com/bst-video\"\n      }, {\n        type: \"exercise\",\n        title: \"Tree Traversal Practice\",\n        description: \"Implement different tree traversal algorithms\",\n        duration: \"1.5 hours\",\n        url: \"https://example.com/tree-exercises\"\n      }]\n    }, {\n      id: \"m5\",\n      title: \"Hash Tables\",\n      description: \"Learn about hash tables, hash functions, collision resolution, and implementation techniques. Understand when to use hash tables for optimal performance.\",\n      estimatedTime: \"2.5 hours\",\n      topics: [\"Hash Functions\", \"Collision Resolution Techniques\", \"Hash Table Implementation\", \"Hash Table Operations\", \"Applications of Hash Tables\"],\n      resources: [{\n        type: \"article\",\n        title: \"Hash Tables Demystified\",\n        description: \"Comprehensive guide to understanding hash tables\",\n        duration: \"25 min read\",\n        url: \"https://example.com/hash-tables\"\n      }, {\n        type: \"video\",\n        title: \"Hash Functions and Collision Resolution\",\n        description: \"Learn about different hash functions and handling collisions\",\n        duration: \"35 min\",\n        url: \"https://example.com/hash-functions-video\"\n      }, {\n        type: \"exercise\",\n        title: \"Hash Table Implementation Challenge\",\n        description: \"Build your own hash table from scratch\",\n        duration: \"1 hour\",\n        url: \"https://example.com/hash-table-exercise\"\n      }]\n    }];\n  } else if (pathId === \"2\") {\n    // Return modules for Advanced Algorithms Mastery path\n    return [{\n      id: \"m1\",\n      title: \"Graph Algorithms Fundamentals\",\n      description: \"Learn about graph representations and fundamental graph algorithms including traversals, shortest paths, and minimum spanning trees.\",\n      estimatedTime: \"3 hours\",\n      topics: [\"Graph Representations\", \"Breadth-First Search (BFS)\", \"Depth-First Search (DFS)\", \"Topological Sort\", \"Connected Components\"],\n      resources: [{\n        type: \"article\",\n        title: \"Introduction to Graph Theory\",\n        description: \"Comprehensive overview of graph concepts and terminology\",\n        duration: \"30 min read\",\n        url: \"https://example.com/graph-theory\"\n      }, {\n        type: \"video\",\n        title: \"Graph Traversal Algorithms\",\n        description: \"Visual explanation of BFS and DFS with examples\",\n        duration: \"45 min\",\n        url: \"https://example.com/graph-traversal\"\n      }, {\n        type: \"exercise\",\n        title: \"Graph Algorithm Implementation\",\n        description: \"Implement BFS, DFS, and topological sort\",\n        duration: \"1.5 hours\",\n        url: \"https://example.com/graph-exercises\"\n      }]\n    }\n    // Additional modules would be defined here\n    ];\n  }\n  return [];\n}\nexport default LearningPathDetail;\nvar _c;\n$RefreshReg$(_c, \"LearningPathDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","ModuleContent","getModuleContent","getLanguageLearningPathDetail","jsxDEV","_jsxDEV","Fragment","_Fragment","LearningPathDetail","_s","_userProgress$moduleP2","_userProgress$moduleP3","_userProgress$complet2","pathId","navigate","path","setPath","modules","setModules","userProgress","setUserProgress","activeModuleId","setActiveModuleId","loading","setLoading","showModuleContent","setShowModuleContent","currentModuleContent","setCurrentModuleContent","fetchLearningPath","fetchModules","fetchUserProgress","setTimeout","mockPath","getMockPath","length","id","error","console","mockModules","getMockModules","mockProgress","pathProgress","completedModules","moduleProgress","handleModuleClick","moduleId","handleStartModule","moduleContent","log","handleContinueModule","handleCompleteModule","prev","handleBackToModuleOverview","handleBackToLearningPaths","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","activeModule","find","module","title","onComplete","onBack","difficulty","moduleCount","estimatedTime","description","style","width","map","_userProgress$complet","_userProgress$moduleP","isCompleted","includes","progress","isActive","topics","topic","index","resources","resource","type","duration","_c","paths","prerequisites","learningOutcomes","url","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/pages/LearningPathDetail.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ModuleContent from '../components/ModuleContent';\nimport { getModuleContent } from '../data/moduleContentData';\nimport { getLanguageLearningPathDetail } from '../data/languageLearningPathsData';\nimport './LearningPathDetail.css';\n\nfunction LearningPathDetail() {\n  const { pathId } = useParams();\n  const navigate = useNavigate();\n  const [path, setPath] = useState(null);\n  const [modules, setModules] = useState([]);\n  const [userProgress, setUserProgress] = useState({});\n  const [activeModuleId, setActiveModuleId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showModuleContent, setShowModuleContent] = useState(false);\n  const [currentModuleContent, setCurrentModuleContent] = useState(null);\n\n  useEffect(() => {\n    // Fetch learning path details\n    fetchLearningPath();\n    fetchModules();\n    fetchUserProgress();\n  }, [pathId]);\n\n  const fetchLearningPath = async () => {\n    try {\n      // In a real implementation, this would call your API\n      // For now, we'll use mock data\n      setLoading(true);\n\n      // Simulate API call\n      setTimeout(() => {\n        const mockPath = getMockPath(pathId);\n        setPath(mockPath);\n        setLoading(false);\n\n        // Set the first module as active by default if user hasn't started any module\n        if (mockPath && mockPath.modules && mockPath.modules.length > 0) {\n          setActiveModuleId(mockPath.modules[0].id);\n        }\n      }, 800);\n    } catch (error) {\n      console.error(\"Error fetching learning path:\", error);\n      setLoading(false);\n    }\n  };\n\n  const fetchModules = async () => {\n    try {\n      // In a real implementation, this would call your API\n      // For now, we'll use mock data\n      setTimeout(() => {\n        const mockModules = getMockModules(pathId);\n        setModules(mockModules);\n      }, 1000);\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n    }\n  };\n\n  const fetchUserProgress = async () => {\n    try {\n      // In a real implementation, this would call your API\n      // For now, we'll use mock data\n      setTimeout(() => {\n        const mockProgress = {\n          pathProgress: 35,\n          completedModules: [\"m1\", \"m2\"],\n          moduleProgress: {\n            \"m1\": 100,\n            \"m2\": 100,\n            \"m3\": 40,\n            \"m4\": 0,\n            \"m5\": 0\n          }\n        };\n        setUserProgress(mockProgress);\n      }, 1200);\n    } catch (error) {\n      console.error(\"Error fetching user progress:\", error);\n    }\n  };\n\n  const handleModuleClick = (moduleId) => {\n    setActiveModuleId(moduleId);\n    setShowModuleContent(false); // Hide module content when switching modules\n  };\n\n  const handleStartModule = (moduleId) => {\n    // Load module content\n    const moduleContent = getModuleContent(moduleId);\n    if (moduleContent) {\n      setCurrentModuleContent(moduleContent);\n      setShowModuleContent(true);\n\n      // In a real app, this would also update the user's progress\n      console.log(`Starting module ${moduleId}`);\n    } else {\n      console.error(`No content found for module ${moduleId}`);\n    }\n  };\n\n  const handleContinueModule = (moduleId) => {\n    // Similar to handleStartModule, but would resume from where the user left off\n    const moduleContent = getModuleContent(moduleId);\n    if (moduleContent) {\n      setCurrentModuleContent(moduleContent);\n      setShowModuleContent(true);\n\n      // In a real app, this would also load the user's progress\n      console.log(`Continuing module ${moduleId}`);\n    } else {\n      console.error(`No content found for module ${moduleId}`);\n    }\n  };\n\n  const handleCompleteModule = (moduleId) => {\n    // In a real app, this would update the user's progress\n    console.log(`Completed module ${moduleId}`);\n\n    // Update local state to reflect completion\n    setUserProgress(prev => ({\n      ...prev,\n      completedModules: [...(prev.completedModules || []), moduleId],\n      moduleProgress: {\n        ...(prev.moduleProgress || {}),\n        [moduleId]: 100\n      }\n    }));\n\n    // Return to module overview\n    setShowModuleContent(false);\n  };\n\n  const handleBackToModuleOverview = () => {\n    setShowModuleContent(false);\n  };\n\n  const handleBackToLearningPaths = () => {\n    navigate('/learning');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"learning-detail-container\">\n        <div className=\"loading-spinner\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (!path) {\n    return (\n      <div className=\"learning-detail-container\">\n        <div className=\"error-message\">\n          <h2>Learning Path Not Found</h2>\n          <p>The learning path you're looking for doesn't exist or has been removed.</p>\n          <button onClick={handleBackToLearningPaths} className=\"back-btn\">\n            Back to Learning Paths\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const activeModule = modules.find(module => module.id === activeModuleId);\n\n  // If showing module content, render the ModuleContent component\n  if (showModuleContent && currentModuleContent) {\n    return (\n      <div className=\"learning-detail-container\">\n        <div className=\"learning-detail-header\">\n          <button onClick={handleBackToModuleOverview} className=\"back-btn\">\n            ← Back to Module Overview\n          </button>\n          <h1>{currentModuleContent.title}</h1>\n        </div>\n\n        <ModuleContent\n          module={currentModuleContent}\n          onComplete={handleCompleteModule}\n          onBack={handleBackToModuleOverview}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"learning-detail-container\">\n      <div className=\"learning-detail-header\">\n        <button onClick={handleBackToLearningPaths} className=\"back-btn\">\n          ← Back to Learning Paths\n        </button>\n        <h1>{path.title}</h1>\n        <div className=\"path-meta-detail\">\n          <span className=\"difficulty\">{path.difficulty}</span>\n          <span className=\"modules-count\">{path.moduleCount} Modules</span>\n          <span className=\"estimated-time\">{path.estimatedTime}</span>\n        </div>\n        <p className=\"path-description\">{path.description}</p>\n        <div className=\"overall-progress\">\n          <div className=\"progress-label\">Overall Progress</div>\n          <div className=\"progress-bar\">\n            <div\n              className=\"progress\"\n              style={{ width: `${userProgress.pathProgress || 0}%` }}\n            ></div>\n            <span>{userProgress.pathProgress || 0}% Complete</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"learning-detail-content\">\n        <div className=\"modules-sidebar\">\n          <h2>Modules</h2>\n          <div className=\"modules-list\">\n            {modules.map(module => {\n              const isCompleted = userProgress.completedModules?.includes(module.id);\n              const progress = userProgress.moduleProgress?.[module.id] || 0;\n              const isActive = activeModuleId === module.id;\n\n              return (\n                <div\n                  key={module.id}\n                  className={`module-item ${isActive ? 'active' : ''} ${isCompleted ? 'completed' : ''}`}\n                  onClick={() => handleModuleClick(module.id)}\n                >\n                  <div className=\"module-status\">\n                    {isCompleted ? '✓' : progress > 0 ? '⋯' : '○'}\n                  </div>\n                  <div className=\"module-info\">\n                    <h3>{module.title}</h3>\n                    <div className=\"module-meta\">\n                      <span>{module.estimatedTime}</span>\n                      {progress > 0 && !isCompleted && (\n                        <span>{progress}% complete</span>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        <div className=\"module-content\">\n          {activeModule ? (\n            <>\n              <h2>{activeModule.title}</h2>\n              <div className=\"module-description\">\n                <p>{activeModule.description}</p>\n              </div>\n\n              <div className=\"module-topics\">\n                <h3>Topics Covered</h3>\n                <ul>\n                  {activeModule.topics.map((topic, index) => (\n                    <li key={index}>{topic}</li>\n                  ))}\n                </ul>\n              </div>\n\n              <div className=\"module-resources\">\n                <h3>Learning Resources</h3>\n                <div className=\"resources-list\">\n                  {activeModule.resources.map((resource, index) => (\n                    <div key={index} className=\"resource-item\">\n                      <div className=\"resource-icon\">\n                        {resource.type === 'video' ? '🎬' :\n                         resource.type === 'article' ? '📄' :\n                         resource.type === 'exercise' ? '💻' : '📚'}\n                      </div>\n                      <div className=\"resource-info\">\n                        <h4>{resource.title}</h4>\n                        <p>{resource.description}</p>\n                        <div className=\"resource-meta\">\n                          <span>{resource.type}</span>\n                          <span>{resource.duration}</span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"module-actions\">\n                {userProgress.moduleProgress?.[activeModule.id] > 0 && userProgress.moduleProgress?.[activeModule.id] < 100 ? (\n                  <button\n                    className=\"continue-module-btn\"\n                    onClick={() => handleContinueModule(activeModule.id)}\n                  >\n                    Continue Module\n                  </button>\n                ) : userProgress.completedModules?.includes(activeModule.id) ? (\n                  <button\n                    className=\"review-module-btn\"\n                    onClick={() => handleStartModule(activeModule.id)}\n                  >\n                    Review Module\n                  </button>\n                ) : (\n                  <button\n                    className=\"start-module-btn\"\n                    onClick={() => handleStartModule(activeModule.id)}\n                  >\n                    Start Module\n                  </button>\n                )}\n              </div>\n            </>\n          ) : (\n            <div className=\"no-module-selected\">\n              <p>Select a module from the sidebar to view its content</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Mock data functions\nfunction getMockPath(pathId) {\n  const paths = {\n    \"1\": {\n      id: \"1\",\n      title: \"Data Structures Fundamentals\",\n      difficulty: \"Beginner\",\n      moduleCount: 5,\n      estimatedTime: \"10-12 hours\",\n      description: \"Master the essential data structures that form the foundation of efficient algorithms and software development. This path covers arrays, linked lists, stacks, queues, trees, and more.\",\n      prerequisites: [\"Basic programming knowledge\", \"Understanding of variables and functions\"],\n      learningOutcomes: [\n        \"Implement common data structures from scratch\",\n        \"Analyze the time and space complexity of operations\",\n        \"Choose the right data structure for specific problems\",\n        \"Optimize code using appropriate data structures\"\n      ]\n    },\n    \"2\": {\n      id: \"2\",\n      title: \"Advanced Algorithms Mastery\",\n      difficulty: \"Advanced\",\n      moduleCount: 7,\n      estimatedTime: \"15-20 hours\",\n      description: \"Dive deep into advanced algorithmic techniques used in competitive programming and technical interviews. Learn graph algorithms, dynamic programming, and optimization techniques.\",\n      prerequisites: [\"Strong programming foundation\", \"Basic data structures knowledge\", \"Understanding of time complexity\"],\n      learningOutcomes: [\n        \"Solve complex algorithmic problems efficiently\",\n        \"Implement advanced algorithms from scratch\",\n        \"Optimize solutions for time and space complexity\",\n        \"Apply algorithmic thinking to real-world problems\"\n      ]\n    }\n  };\n\n  return paths[pathId];\n}\n\nfunction getMockModules(pathId) {\n  if (pathId === \"1\") {\n    return [\n      {\n        id: \"m1\",\n        title: \"Arrays and Strings\",\n        description: \"Learn about arrays, dynamic arrays, and string manipulation techniques. Understand how arrays are stored in memory and the complexity of common operations.\",\n        estimatedTime: \"2 hours\",\n        topics: [\n          \"Static vs Dynamic Arrays\",\n          \"Array Memory Layout\",\n          \"Common Array Operations\",\n          \"String Manipulation\",\n          \"Array-based Techniques\"\n        ],\n        resources: [\n          {\n            type: \"article\",\n            title: \"Introduction to Arrays\",\n            description: \"A comprehensive guide to understanding arrays and their implementation\",\n            duration: \"15 min read\",\n            url: \"https://example.com/arrays-intro\"\n          },\n          {\n            type: \"video\",\n            title: \"Array Data Structure\",\n            description: \"Visual explanation of how arrays work in memory\",\n            duration: \"22 min\",\n            url: \"https://example.com/array-video\"\n          },\n          {\n            type: \"exercise\",\n            title: \"Array Manipulation Practice\",\n            description: \"Solve 5 problems involving array operations\",\n            duration: \"45 min\",\n            url: \"https://example.com/array-exercises\"\n          }\n        ]\n      },\n      {\n        id: \"m2\",\n        title: \"Linked Lists\",\n        description: \"Explore singly and doubly linked lists, their implementation, and common operations. Learn when to use linked lists over arrays.\",\n        estimatedTime: \"2.5 hours\",\n        topics: [\n          \"Singly Linked Lists\",\n          \"Doubly Linked Lists\",\n          \"Circular Linked Lists\",\n          \"Linked List Operations\",\n          \"Linked List vs Arrays\"\n        ],\n        resources: [\n          {\n            type: \"article\",\n            title: \"Linked Lists Explained\",\n            description: \"Detailed explanation of linked list data structures\",\n            duration: \"20 min read\",\n            url: \"https://example.com/linked-lists\"\n          },\n          {\n            type: \"video\",\n            title: \"Implementing Linked Lists\",\n            description: \"Step-by-step guide to implementing linked lists from scratch\",\n            duration: \"35 min\",\n            url: \"https://example.com/linked-list-implementation\"\n          },\n          {\n            type: \"exercise\",\n            title: \"Linked List Challenges\",\n            description: \"Practice problems focusing on linked list manipulation\",\n            duration: \"1 hour\",\n            url: \"https://example.com/linked-list-exercises\"\n          }\n        ]\n      },\n      {\n        id: \"m3\",\n        title: \"Stacks and Queues\",\n        description: \"Learn about stack and queue data structures, their implementations, and applications. Understand LIFO and FIFO principles.\",\n        estimatedTime: \"2 hours\",\n        topics: [\n          \"Stack Operations and Implementation\",\n          \"Queue Operations and Implementation\",\n          \"Circular Queues\",\n          \"Priority Queues\",\n          \"Applications of Stacks and Queues\"\n        ],\n        resources: [\n          {\n            type: \"article\",\n            title: \"Understanding Stacks and Queues\",\n            description: \"Comprehensive guide to stack and queue data structures\",\n            duration: \"25 min read\",\n            url: \"https://example.com/stacks-queues\"\n          },\n          {\n            type: \"video\",\n            title: \"Stack and Queue Visualized\",\n            description: \"Visual explanation of how stacks and queues work\",\n            duration: \"28 min\",\n            url: \"https://example.com/stack-queue-video\"\n          },\n          {\n            type: \"exercise\",\n            title: \"Stack and Queue Problems\",\n            description: \"Solve problems using stacks and queues\",\n            duration: \"50 min\",\n            url: \"https://example.com/stack-queue-exercises\"\n          }\n        ]\n      },\n      {\n        id: \"m4\",\n        title: \"Trees and Binary Search Trees\",\n        description: \"Explore tree data structures with a focus on binary trees and binary search trees. Learn tree traversal algorithms and operations.\",\n        estimatedTime: \"3 hours\",\n        topics: [\n          \"Tree Terminology\",\n          \"Binary Trees\",\n          \"Binary Search Trees\",\n          \"Tree Traversal Algorithms\",\n          \"BST Operations\"\n        ],\n        resources: [\n          {\n            type: \"article\",\n            title: \"Introduction to Trees\",\n            description: \"Learn about tree data structures and their properties\",\n            duration: \"30 min read\",\n            url: \"https://example.com/trees-intro\"\n          },\n          {\n            type: \"video\",\n            title: \"Binary Search Trees Explained\",\n            description: \"Detailed explanation of BST with examples\",\n            duration: \"40 min\",\n            url: \"https://example.com/bst-video\"\n          },\n          {\n            type: \"exercise\",\n            title: \"Tree Traversal Practice\",\n            description: \"Implement different tree traversal algorithms\",\n            duration: \"1.5 hours\",\n            url: \"https://example.com/tree-exercises\"\n          }\n        ]\n      },\n      {\n        id: \"m5\",\n        title: \"Hash Tables\",\n        description: \"Learn about hash tables, hash functions, collision resolution, and implementation techniques. Understand when to use hash tables for optimal performance.\",\n        estimatedTime: \"2.5 hours\",\n        topics: [\n          \"Hash Functions\",\n          \"Collision Resolution Techniques\",\n          \"Hash Table Implementation\",\n          \"Hash Table Operations\",\n          \"Applications of Hash Tables\"\n        ],\n        resources: [\n          {\n            type: \"article\",\n            title: \"Hash Tables Demystified\",\n            description: \"Comprehensive guide to understanding hash tables\",\n            duration: \"25 min read\",\n            url: \"https://example.com/hash-tables\"\n          },\n          {\n            type: \"video\",\n            title: \"Hash Functions and Collision Resolution\",\n            description: \"Learn about different hash functions and handling collisions\",\n            duration: \"35 min\",\n            url: \"https://example.com/hash-functions-video\"\n          },\n          {\n            type: \"exercise\",\n            title: \"Hash Table Implementation Challenge\",\n            description: \"Build your own hash table from scratch\",\n            duration: \"1 hour\",\n            url: \"https://example.com/hash-table-exercise\"\n          }\n        ]\n      }\n    ];\n  } else if (pathId === \"2\") {\n    // Return modules for Advanced Algorithms Mastery path\n    return [\n      {\n        id: \"m1\",\n        title: \"Graph Algorithms Fundamentals\",\n        description: \"Learn about graph representations and fundamental graph algorithms including traversals, shortest paths, and minimum spanning trees.\",\n        estimatedTime: \"3 hours\",\n        topics: [\n          \"Graph Representations\",\n          \"Breadth-First Search (BFS)\",\n          \"Depth-First Search (DFS)\",\n          \"Topological Sort\",\n          \"Connected Components\"\n        ],\n        resources: [\n          {\n            type: \"article\",\n            title: \"Introduction to Graph Theory\",\n            description: \"Comprehensive overview of graph concepts and terminology\",\n            duration: \"30 min read\",\n            url: \"https://example.com/graph-theory\"\n          },\n          {\n            type: \"video\",\n            title: \"Graph Traversal Algorithms\",\n            description: \"Visual explanation of BFS and DFS with examples\",\n            duration: \"45 min\",\n            url: \"https://example.com/graph-traversal\"\n          },\n          {\n            type: \"exercise\",\n            title: \"Graph Algorithm Implementation\",\n            description: \"Implement BFS, DFS, and topological sort\",\n            duration: \"1.5 hours\",\n            url: \"https://example.com/graph-exercises\"\n          }\n        ]\n      },\n      // Additional modules would be defined here\n    ];\n  }\n\n  return [];\n}\n\nexport default LearningPathDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}