{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\components\\\\ScrollReveal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/animations.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollReveal = ({\n  children,\n  animation = 'fade-in-up',\n  delay = 0,\n  threshold = 0.1,\n  duration = 0.6,\n  once = true\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const elementRef = useRef(null);\n  useEffect(() => {\n    const currentElement = elementRef.current;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        setIsVisible(true);\n        if (once) {\n          observer.unobserve(currentElement);\n        }\n      } else if (!once) {\n        setIsVisible(false);\n      }\n    }, {\n      root: null,\n      rootMargin: '0px',\n      threshold: threshold\n    });\n    if (currentElement) {\n      observer.observe(currentElement);\n    }\n    return () => {\n      if (currentElement) {\n        observer.unobserve(currentElement);\n      }\n    };\n  }, [once, threshold]);\n  const style = {\n    opacity: isVisible ? 1 : 0,\n    transform: isVisible ? 'none' : getInitialTransform(animation),\n    transition: `opacity ${duration}s ease, transform ${duration}s ease`,\n    transitionDelay: `${delay}s`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: elementRef,\n    style: style,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to determine initial transform based on animation type\n_s(ScrollReveal, \"ars/gJ7qRrRI4qdM8DRo1FWAkKE=\");\n_c = ScrollReveal;\nconst getInitialTransform = animation => {\n  switch (animation) {\n    case 'fade-in-up':\n      return 'translateY(30px)';\n    case 'fade-in-down':\n      return 'translateY(-30px)';\n    case 'fade-in-left':\n      return 'translateX(-30px)';\n    case 'fade-in-right':\n      return 'translateX(30px)';\n    case 'scale-in':\n      return 'scale(0.9)';\n    default:\n      return 'none';\n  }\n};\nexport default ScrollReveal;\nvar _c;\n$RefreshReg$(_c, \"ScrollReveal\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ScrollReveal","children","animation","delay","threshold","duration","once","_s","isVisible","setIsVisible","elementRef","currentElement","current","observer","IntersectionObserver","entry","isIntersecting","unobserve","root","rootMargin","observe","style","opacity","transform","getInitialTransform","transition","transitionDelay","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/components/ScrollReveal.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/animations.css';\n\nconst ScrollReveal = ({ \n  children, \n  animation = 'fade-in-up', \n  delay = 0,\n  threshold = 0.1,\n  duration = 0.6,\n  once = true\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const elementRef = useRef(null);\n  \n  useEffect(() => {\n    const currentElement = elementRef.current;\n    \n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n          if (once) {\n            observer.unobserve(currentElement);\n          }\n        } else if (!once) {\n          setIsVisible(false);\n        }\n      },\n      {\n        root: null,\n        rootMargin: '0px',\n        threshold: threshold\n      }\n    );\n    \n    if (currentElement) {\n      observer.observe(currentElement);\n    }\n    \n    return () => {\n      if (currentElement) {\n        observer.unobserve(currentElement);\n      }\n    };\n  }, [once, threshold]);\n  \n  const style = {\n    opacity: isVisible ? 1 : 0,\n    transform: isVisible ? 'none' : getInitialTransform(animation),\n    transition: `opacity ${duration}s ease, transform ${duration}s ease`,\n    transitionDelay: `${delay}s`\n  };\n  \n  return (\n    <div ref={elementRef} style={style}>\n      {children}\n    </div>\n  );\n};\n\n// Helper function to determine initial transform based on animation type\nconst getInitialTransform = (animation) => {\n  switch (animation) {\n    case 'fade-in-up':\n      return 'translateY(30px)';\n    case 'fade-in-down':\n      return 'translateY(-30px)';\n    case 'fade-in-left':\n      return 'translateX(-30px)';\n    case 'fade-in-right':\n      return 'translateX(30px)';\n    case 'scale-in':\n      return 'scale(0.9)';\n    default:\n      return 'none';\n  }\n};\n\nexport default ScrollReveal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAGA,CAAC;EACpBC,QAAQ;EACRC,SAAS,GAAG,YAAY;EACxBC,KAAK,GAAG,CAAC;EACTC,SAAS,GAAG,GAAG;EACfC,QAAQ,GAAG,GAAG;EACdC,IAAI,GAAG;AACT,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMa,UAAU,GAAGd,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd,MAAMgB,cAAc,GAAGD,UAAU,CAACE,OAAO;IAEzC,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,CAAC,CAACC,KAAK,CAAC,KAAK;MACX,IAAIA,KAAK,CAACC,cAAc,EAAE;QACxBP,YAAY,CAAC,IAAI,CAAC;QAClB,IAAIH,IAAI,EAAE;UACRO,QAAQ,CAACI,SAAS,CAACN,cAAc,CAAC;QACpC;MACF,CAAC,MAAM,IAAI,CAACL,IAAI,EAAE;QAChBG,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC,EACD;MACES,IAAI,EAAE,IAAI;MACVC,UAAU,EAAE,KAAK;MACjBf,SAAS,EAAEA;IACb,CACF,CAAC;IAED,IAAIO,cAAc,EAAE;MAClBE,QAAQ,CAACO,OAAO,CAACT,cAAc,CAAC;IAClC;IAEA,OAAO,MAAM;MACX,IAAIA,cAAc,EAAE;QAClBE,QAAQ,CAACI,SAAS,CAACN,cAAc,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,CAACL,IAAI,EAAEF,SAAS,CAAC,CAAC;EAErB,MAAMiB,KAAK,GAAG;IACZC,OAAO,EAAEd,SAAS,GAAG,CAAC,GAAG,CAAC;IAC1Be,SAAS,EAAEf,SAAS,GAAG,MAAM,GAAGgB,mBAAmB,CAACtB,SAAS,CAAC;IAC9DuB,UAAU,EAAE,WAAWpB,QAAQ,qBAAqBA,QAAQ,QAAQ;IACpEqB,eAAe,EAAE,GAAGvB,KAAK;EAC3B,CAAC;EAED,oBACEJ,OAAA;IAAK4B,GAAG,EAAEjB,UAAW;IAACW,KAAK,EAAEA,KAAM;IAAApB,QAAA,EAChCA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;;AAED;AAAAxB,EAAA,CAzDMP,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA0DlB,MAAMwB,mBAAmB,GAAItB,SAAS,IAAK;EACzC,QAAQA,SAAS;IACf,KAAK,YAAY;MACf,OAAO,kBAAkB;IAC3B,KAAK,cAAc;MACjB,OAAO,mBAAmB;IAC5B,KAAK,cAAc;MACjB,OAAO,mBAAmB;IAC5B,KAAK,eAAe;MAClB,OAAO,kBAAkB;IAC3B,KAAK,UAAU;MACb,OAAO,YAAY;IACrB;MACE,OAAO,MAAM;EACjB;AACF,CAAC;AAED,eAAeF,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}