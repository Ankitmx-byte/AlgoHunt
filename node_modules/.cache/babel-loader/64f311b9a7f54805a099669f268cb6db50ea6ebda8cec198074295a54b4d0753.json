{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\components\\\\AnimatedText.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './AnimatedText.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedText = ({\n  text,\n  variant = 'gradient',\n  animation = 'typing',\n  speed = 50,\n  delay = 0,\n  repeat = false,\n  repeatDelay = 2000,\n  cursor = true,\n  className = '',\n  onComplete = () => {},\n  ...props\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isTyping, setIsTyping] = useState(false);\n  const [isComplete, setIsComplete] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const timeoutRef = useRef(null);\n\n  // Text variants\n  const textClasses = ['animated-text', `animated-text-${variant}`, `animated-text-${animation}`, isComplete ? 'animated-text-complete' : '', cursor ? 'animated-text-cursor' : '', className].filter(Boolean).join(' ');\n\n  // Initialize typing animation\n  useEffect(() => {\n    // Reset when text changes\n    setDisplayText('');\n    setCurrentIndex(0);\n    setIsComplete(false);\n    setIsTyping(false);\n    setIsDeleting(false);\n\n    // Clear any existing timeout\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    // Start typing after delay\n    timeoutRef.current = setTimeout(() => {\n      setIsTyping(true);\n    }, delay);\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [text, delay]);\n\n  // Handle typing animation\n  useEffect(() => {\n    if (!isTyping) return;\n    if (!isDeleting && currentIndex < text.length) {\n      // Typing forward\n      timeoutRef.current = setTimeout(() => {\n        setDisplayText(prev => prev + text[currentIndex]);\n        setCurrentIndex(prev => prev + 1);\n      }, speed);\n    } else if (isDeleting && displayText.length > 0) {\n      // Deleting\n      timeoutRef.current = setTimeout(() => {\n        setDisplayText(prev => prev.slice(0, -1));\n      }, speed / 2);\n    } else if (isDeleting && displayText.length === 0) {\n      // Reset after deleting\n      setIsDeleting(false);\n      setCurrentIndex(0);\n    } else if (repeat && !isDeleting) {\n      // Completed typing, prepare to delete if repeat is enabled\n      setIsComplete(true);\n      onComplete();\n      if (repeat) {\n        timeoutRef.current = setTimeout(() => {\n          setIsDeleting(true);\n          setIsComplete(false);\n        }, repeatDelay);\n      }\n    } else {\n      // Completed typing without repeat\n      setIsComplete(true);\n      onComplete();\n    }\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [currentIndex, isTyping, isDeleting, text, speed, repeat, repeatDelay, displayText, onComplete]);\n\n  // Handle different animation types\n  const renderText = () => {\n    if (animation === 'typing') {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"animated-text-content\",\n        children: [displayText, cursor && !isComplete && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"animated-text-cursor-symbol\",\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this);\n    } else if (animation === 'word-by-word') {\n      return text.split(' ').map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `animated-text-word ${index < displayText.split(' ').length ? 'animated-text-word-visible' : ''}`,\n        style: {\n          animationDelay: `${index * 0.1}s`\n        },\n        children: [word, \"\\xA0\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this));\n    } else if (animation === 'letter-by-letter') {\n      return text.split('').map((letter, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `animated-text-letter ${index < displayText.length ? 'animated-text-letter-visible' : ''}`,\n        style: {\n          animationDelay: `${index * 0.03}s`\n        },\n        children: letter\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this));\n    } else if (animation === 'fade-in') {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"animated-text-content\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this);\n    } else {\n      return text;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: textClasses,\n    ...props,\n    children: renderText()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedText, \"gLTx2edryoB/gB36FXcecklzzAg=\");\n_c = AnimatedText;\nexport default AnimatedText;\nvar _c;\n$RefreshReg$(_c, \"AnimatedText\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","AnimatedText","text","variant","animation","speed","delay","repeat","repeatDelay","cursor","className","onComplete","props","_s","displayText","setDisplayText","currentIndex","setCurrentIndex","isTyping","setIsTyping","isComplete","setIsComplete","isDeleting","setIsDeleting","timeoutRef","textClasses","filter","Boolean","join","current","clearTimeout","setTimeout","length","prev","slice","renderText","children","fileName","_jsxFileName","lineNumber","columnNumber","split","map","word","index","style","animationDelay","letter","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/components/AnimatedText.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './AnimatedText.css';\n\nconst AnimatedText = ({\n  text,\n  variant = 'gradient',\n  animation = 'typing',\n  speed = 50,\n  delay = 0,\n  repeat = false,\n  repeatDelay = 2000,\n  cursor = true,\n  className = '',\n  onComplete = () => {},\n  ...props\n}) => {\n  const [displayText, setDisplayText] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isTyping, setIsTyping] = useState(false);\n  const [isComplete, setIsComplete] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const timeoutRef = useRef(null);\n  \n  // Text variants\n  const textClasses = [\n    'animated-text',\n    `animated-text-${variant}`,\n    `animated-text-${animation}`,\n    isComplete ? 'animated-text-complete' : '',\n    cursor ? 'animated-text-cursor' : '',\n    className\n  ].filter(Boolean).join(' ');\n  \n  // Initialize typing animation\n  useEffect(() => {\n    // Reset when text changes\n    setDisplayText('');\n    setCurrentIndex(0);\n    setIsComplete(false);\n    setIsTyping(false);\n    setIsDeleting(false);\n    \n    // Clear any existing timeout\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    \n    // Start typing after delay\n    timeoutRef.current = setTimeout(() => {\n      setIsTyping(true);\n    }, delay);\n    \n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [text, delay]);\n  \n  // Handle typing animation\n  useEffect(() => {\n    if (!isTyping) return;\n    \n    if (!isDeleting && currentIndex < text.length) {\n      // Typing forward\n      timeoutRef.current = setTimeout(() => {\n        setDisplayText(prev => prev + text[currentIndex]);\n        setCurrentIndex(prev => prev + 1);\n      }, speed);\n    } else if (isDeleting && displayText.length > 0) {\n      // Deleting\n      timeoutRef.current = setTimeout(() => {\n        setDisplayText(prev => prev.slice(0, -1));\n      }, speed / 2);\n    } else if (isDeleting && displayText.length === 0) {\n      // Reset after deleting\n      setIsDeleting(false);\n      setCurrentIndex(0);\n    } else if (repeat && !isDeleting) {\n      // Completed typing, prepare to delete if repeat is enabled\n      setIsComplete(true);\n      onComplete();\n      \n      if (repeat) {\n        timeoutRef.current = setTimeout(() => {\n          setIsDeleting(true);\n          setIsComplete(false);\n        }, repeatDelay);\n      }\n    } else {\n      // Completed typing without repeat\n      setIsComplete(true);\n      onComplete();\n    }\n    \n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [currentIndex, isTyping, isDeleting, text, speed, repeat, repeatDelay, displayText, onComplete]);\n  \n  // Handle different animation types\n  const renderText = () => {\n    if (animation === 'typing') {\n      return (\n        <span className=\"animated-text-content\">\n          {displayText}\n          {cursor && !isComplete && <span className=\"animated-text-cursor-symbol\">|</span>}\n        </span>\n      );\n    } else if (animation === 'word-by-word') {\n      return text.split(' ').map((word, index) => (\n        <span \n          key={index} \n          className={`animated-text-word ${index < displayText.split(' ').length ? 'animated-text-word-visible' : ''}`}\n          style={{ animationDelay: `${index * 0.1}s` }}\n        >\n          {word}&nbsp;\n        </span>\n      ));\n    } else if (animation === 'letter-by-letter') {\n      return text.split('').map((letter, index) => (\n        <span \n          key={index} \n          className={`animated-text-letter ${index < displayText.length ? 'animated-text-letter-visible' : ''}`}\n          style={{ animationDelay: `${index * 0.03}s` }}\n        >\n          {letter}\n        </span>\n      ));\n    } else if (animation === 'fade-in') {\n      return (\n        <span className=\"animated-text-content\">\n          {text}\n        </span>\n      );\n    } else {\n      return text;\n    }\n  };\n  \n  return (\n    <span className={textClasses} {...props}>\n      {renderText()}\n    </span>\n  );\n};\n\nexport default AnimatedText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}