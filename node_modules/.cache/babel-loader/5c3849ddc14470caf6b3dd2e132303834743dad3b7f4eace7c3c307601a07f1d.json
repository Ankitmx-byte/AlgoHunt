{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\components\\\\JobBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './JobBoard.css';\nimport JobCard from './JobCard';\nimport FilterBar from './FilterBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobBoard() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState({\n    role: '',\n    experience: '',\n    location: '',\n    company: ''\n  });\n  useEffect(() => {\n    // Fetch personalized job recommendations based on user's coding performance\n    fetchPersonalizedJobs();\n  }, [filters]);\n  const fetchPersonalizedJobs = async () => {\n    // In a real implementation, this would call your API with user performance data\n    // and return AI-matched job opportunities\n    const response = await fetch('/api/jobs/recommended');\n    const data = await response.json();\n    setJobs(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-board-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-board-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Get Your Dream Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"subtitle\",\n        children: \"AI-matched opportunities based on your coding performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feature-banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Applying to jobs has never been easier \\u2728\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Our AI analyzes your coding battles and matches you with the perfect opportunities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"see-how-button\",\n        children: \"See how it works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      filters: filters,\n      setFilters: setFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-listings\",\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        job: job,\n        matchScore: job.matchScore // AI-calculated match percentage\n        ,\n        skillGaps: job.skillGaps // Areas where user could improve\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(JobBoard, \"QkRi76za1Fz5TdPxEWQNG7kI0lg=\");\n_c = JobBoard;\nexport default JobBoard;\nvar _c;\n$RefreshReg$(_c, \"JobBoard\");","map":{"version":3,"names":["React","useState","useEffect","JobCard","FilterBar","jsxDEV","_jsxDEV","JobBoard","_s","jobs","setJobs","filters","setFilters","role","experience","location","company","fetchPersonalizedJobs","response","fetch","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","matchScore","skillGaps","id","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/components/JobBoard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './JobBoard.css';\nimport JobCard from './JobCard';\nimport FilterBar from './FilterBar';\n\nfunction JobBoard() {\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState({\n    role: '',\n    experience: '',\n    location: '',\n    company: ''\n  });\n  \n  useEffect(() => {\n    // Fetch personalized job recommendations based on user's coding performance\n    fetchPersonalizedJobs();\n  }, [filters]);\n  \n  const fetchPersonalizedJobs = async () => {\n    // In a real implementation, this would call your API with user performance data\n    // and return AI-matched job opportunities\n    const response = await fetch('/api/jobs/recommended');\n    const data = await response.json();\n    setJobs(data);\n  };\n\n  return (\n    <div className=\"job-board-container\">\n      <div className=\"job-board-header\">\n        <h1>Get Your Dream Job</h1>\n        <span className=\"subtitle\">AI-matched opportunities based on your coding performance</span>\n      </div>\n      \n      <div className=\"feature-banner\">\n        <p>Applying to jobs has never been easier âœ¨</p>\n        <p>Our AI analyzes your coding battles and matches you with the perfect opportunities</p>\n        <button className=\"see-how-button\">See how it works</button>\n      </div>\n      \n      <FilterBar filters={filters} setFilters={setFilters} />\n      \n      <div className=\"job-listings\">\n        {jobs.map(job => (\n          <JobCard \n            key={job.id} \n            job={job}\n            matchScore={job.matchScore} // AI-calculated match percentage\n            skillGaps={job.skillGaps} // Areas where user could improve\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default JobBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}