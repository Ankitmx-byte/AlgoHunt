{"ast":null,"code":"// This file contains learning paths for various programming languages\n// Each path is structured from beginner to advanced levels\n// Content is based on open source educational resources\n\nexport const getLanguageLearningPaths = () => {\n  return [{\n    id: \"lang-js-1\",\n    title: \"JavaScript Fundamentals\",\n    difficulty: \"Beginner\",\n    moduleCount: 8,\n    estimatedTime: \"20-25 hours\",\n    description: \"Master the fundamentals of JavaScript, the language of the web. Learn syntax, data types, functions, and basic DOM manipulation to build interactive websites.\",\n    source: \"MDN Web Docs, JavaScript.info\",\n    category: \"Frontend\",\n    tags: [\"JavaScript\", \"Web Development\", \"Frontend\"],\n    prerequisites: [\"Basic HTML and CSS knowledge\", \"Understanding of how the web works\"],\n    learningOutcomes: [\"Write clean, efficient JavaScript code\", \"Understand JavaScript data types and structures\", \"Create interactive web elements with DOM manipulation\", \"Debug JavaScript code effectively\", \"Build simple web applications\"]\n  }, {\n    id: \"lang-py-1\",\n    title: \"Python Fundamentals\",\n    difficulty: \"Beginner\",\n    moduleCount: 7,\n    estimatedTime: \"18-22 hours\",\n    description: \"Learn Python from scratch - one of the most beginner-friendly and versatile programming languages. Master syntax, data structures, functions, and file operations.\",\n    source: \"Python.org, Real Python\",\n    category: \"Backend\",\n    tags: [\"Python\", \"Programming Basics\", \"Backend\"],\n    prerequisites: [\"No prior programming experience required\"],\n    learningOutcomes: [\"Write clean, Pythonic code\", \"Understand Python data types and structures\", \"Create functions and use modules\", \"Work with files and external data\", \"Build simple command-line applications\"]\n  }, {\n    id: \"lang-java-1\",\n    title: \"Java Fundamentals\",\n    difficulty: \"Beginner\",\n    moduleCount: 9,\n    estimatedTime: \"25-30 hours\",\n    description: \"Start your journey with Java, a powerful object-oriented language used in enterprise applications, Android development, and more. Learn core concepts, syntax, and object-oriented programming principles.\",\n    source: \"Oracle Java Documentation, Java Tutorials\",\n    category: \"Backend\",\n    tags: [\"Java\", \"Object-Oriented Programming\", \"Backend\"],\n    prerequisites: [\"No prior programming experience required, but helpful\"],\n    learningOutcomes: [\"Write and compile Java programs\", \"Understand object-oriented programming concepts\", \"Create classes and implement inheritance\", \"Handle exceptions and debug Java code\", \"Build simple Java applications\"]\n  }, {\n    id: \"lang-cpp-1\",\n    title: \"C++ Fundamentals\",\n    difficulty: \"Beginner\",\n    moduleCount: 10,\n    estimatedTime: \"30-35 hours\",\n    description: \"Learn C++, a powerful language used in systems programming, game development, and performance-critical applications. Master syntax, memory management, and object-oriented concepts.\",\n    source: \"CPlusPlus.com, C++ Reference\",\n    category: \"Systems Programming\",\n    tags: [\"C++\", \"Systems Programming\", \"Performance\"],\n    prerequisites: [\"No prior programming experience required, but helpful\"],\n    learningOutcomes: [\"Write and compile C++ programs\", \"Understand memory management and pointers\", \"Implement object-oriented programming in C++\", \"Use the Standard Template Library (STL)\", \"Build efficient C++ applications\"]\n  }, {\n    id: \"lang-csharp-1\",\n    title: \"C# Fundamentals\",\n    difficulty: \"Beginner\",\n    moduleCount: 8,\n    estimatedTime: \"22-28 hours\",\n    description: \"Start with C#, Microsoft's powerful language for building Windows applications, games with Unity, and web applications with ASP.NET. Learn syntax, object-oriented concepts, and basic application development.\",\n    source: \"Microsoft Learn, C# Documentation\",\n    category: \"Backend\",\n    tags: [\"C#\", \".NET\", \"Windows Development\"],\n    prerequisites: [\"No prior programming experience required, but helpful\"],\n    learningOutcomes: [\"Write and compile C# programs\", \"Understand object-oriented programming concepts\", \"Work with the .NET framework\", \"Create simple Windows applications\", \"Understand LINQ and collections\"]\n  }, {\n    id: \"lang-ruby-1\",\n    title: \"Ruby Fundamentals\",\n    difficulty: \"Beginner\",\n    moduleCount: 6,\n    estimatedTime: \"15-20 hours\",\n    description: \"Learn Ruby, an elegant, readable language known for its simplicity and productivity. Master syntax, object-oriented concepts, and the Ruby way of solving problems.\",\n    source: \"Ruby-Lang.org, Ruby Documentation\",\n    category: \"Backend\",\n    tags: [\"Ruby\", \"Web Development\", \"Backend\"],\n    prerequisites: [\"No prior programming experience required\"],\n    learningOutcomes: [\"Write clean, idiomatic Ruby code\", \"Understand Ruby's object-oriented approach\", \"Use Ruby's built-in classes and modules\", \"Work with collections and blocks\", \"Build simple Ruby applications\"]\n  }, {\n    id: \"lang-go-1\",\n    title: \"Go (Golang) Fundamentals\",\n    difficulty: \"Beginner\",\n    moduleCount: 7,\n    estimatedTime: \"18-24 hours\",\n    description: \"Start with Go, a modern language designed for simplicity, efficiency, and concurrency. Learn syntax, data structures, and Go's approach to building reliable software.\",\n    source: \"Golang.org, Go Documentation\",\n    category: \"Backend\",\n    tags: [\"Go\", \"Golang\", \"Systems Programming\"],\n    prerequisites: [\"Basic programming concepts helpful but not required\"],\n    learningOutcomes: [\"Write clean, efficient Go code\", \"Understand Go's type system and data structures\", \"Implement concurrency with goroutines and channels\", \"Use Go's standard library effectively\", \"Build command-line applications and web servers\"]\n  }, {\n    id: \"lang-swift-1\",\n    title: \"Swift Fundamentals\",\n    difficulty: \"Beginner\",\n    moduleCount: 7,\n    estimatedTime: \"20-25 hours\",\n    description: \"Learn Swift, Apple's modern language for iOS, macOS, watchOS, and tvOS development. Master syntax, data structures, and the foundations of app development.\",\n    source: \"Swift.org, Apple Developer Documentation\",\n    category: \"Mobile Development\",\n    tags: [\"Swift\", \"iOS Development\", \"Apple\"],\n    prerequisites: [\"No prior programming experience required\"],\n    learningOutcomes: [\"Write clean, safe Swift code\", \"Understand Swift's type system and optionals\", \"Work with Swift collections and control flow\", \"Implement object-oriented and functional programming concepts\", \"Build simple iOS applications\"]\n  }];\n};\n\n// Get detailed information about a specific language learning path\nexport const getLanguageLearningPathDetail = pathId => {\n  const allPaths = getLanguageLearningPaths();\n  const path = allPaths.find(p => p.id === pathId);\n  if (!path) return null;\n\n  // Add modules information based on the path ID\n  switch (pathId) {\n    case \"lang-js-1\":\n      return {\n        ...path,\n        modules: getJavaScriptModules()\n      };\n    case \"lang-py-1\":\n      return {\n        ...path,\n        modules: getPythonModules()\n      };\n    // Add cases for other languages as they are implemented\n    default:\n      return path;\n  }\n};\n\n// JavaScript modules\nconst getJavaScriptModules = () => {\n  return [{\n    id: \"js-mod-1\",\n    title: \"JavaScript Introduction & Setup\",\n    description: \"Get started with JavaScript by understanding its role in web development and setting up your development environment.\",\n    estimatedTime: \"2-3 hours\",\n    topics: [\"JavaScript history\", \"Development tools\", \"Browser console\", \"First JavaScript program\"]\n  }, {\n    id: \"js-mod-2\",\n    title: \"JavaScript Syntax & Data Types\",\n    description: \"Learn the basic syntax of JavaScript and understand the different data types available in the language.\",\n    estimatedTime: \"3-4 hours\",\n    topics: [\"Variables\", \"Data types\", \"Operators\", \"Type conversion\"]\n  }, {\n    id: \"js-mod-3\",\n    title: \"Control Flow & Functions\",\n    description: \"Master control flow statements and learn how to create and use functions in JavaScript.\",\n    estimatedTime: \"3-4 hours\",\n    topics: [\"Conditionals\", \"Loops\", \"Function declaration\", \"Parameters & return values\"]\n  }, {\n    id: \"js-mod-4\",\n    title: \"Arrays & Objects\",\n    description: \"Explore JavaScript's core data structures: arrays and objects, and learn how to manipulate them effectively.\",\n    estimatedTime: \"3-4 hours\",\n    topics: [\"Array methods\", \"Object properties\", \"Nested structures\", \"Destructuring\"]\n  }, {\n    id: \"js-mod-5\",\n    title: \"DOM Manipulation\",\n    description: \"Learn how to interact with HTML using JavaScript by manipulating the Document Object Model (DOM).\",\n    estimatedTime: \"3-4 hours\",\n    topics: [\"Selecting elements\", \"Modifying content\", \"Event handling\", \"Creating elements\"]\n  }, {\n    id: \"js-mod-6\",\n    title: \"Asynchronous JavaScript\",\n    description: \"Understand how to work with asynchronous operations in JavaScript using callbacks, promises, and async/await.\",\n    estimatedTime: \"3-4 hours\",\n    topics: [\"Callbacks\", \"Promises\", \"Async/await\", \"Fetch API\"]\n  }, {\n    id: \"js-mod-7\",\n    title: \"Error Handling & Debugging\",\n    description: \"Learn techniques for handling errors and debugging JavaScript code effectively.\",\n    estimatedTime: \"2-3 hours\",\n    topics: [\"Try/catch blocks\", \"Error types\", \"Browser DevTools\", \"Debugging techniques\"]\n  }, {\n    id: \"js-mod-8\",\n    title: \"Final Project: Interactive Web Application\",\n    description: \"Apply everything you've learned to build a complete interactive web application using JavaScript.\",\n    estimatedTime: \"3-4 hours\",\n    topics: [\"Project planning\", \"Implementation\", \"Testing\", \"Deployment\"]\n  }];\n};\n\n// Python modules\nconst getPythonModules = () => {\n  return [{\n    id: \"py-mod-1\",\n    title: \"Python Introduction & Setup\",\n    description: \"Get started with Python by understanding its philosophy and setting up your development environment.\",\n    estimatedTime: \"2-3 hours\",\n    topics: [\"Python philosophy\", \"Installation\", \"IDLE & editors\", \"First Python program\"]\n  }, {\n    id: \"py-mod-2\",\n    title: \"Python Syntax & Data Types\",\n    description: \"Learn the basic syntax of Python and understand the different data types available in the language.\",\n    estimatedTime: \"3-4 hours\",\n    topics: [\"Variables\", \"Numbers & strings\", \"Lists & tuples\", \"Dictionaries & sets\"]\n  }, {\n    id: \"py-mod-3\",\n    title: \"Control Flow & Functions\",\n    description: \"Master control flow statements and learn how to create and use functions in Python.\",\n    estimatedTime: \"3-4 hours\",\n    topics: [\"Conditionals\", \"Loops\", \"Function definition\", \"Parameters & return values\"]\n  }, {\n    id: \"py-mod-4\",\n    title: \"Working with Files & Exceptions\",\n    description: \"Learn how to read from and write to files, and handle exceptions in Python.\",\n    estimatedTime: \"2-3 hours\",\n    topics: [\"File operations\", \"Reading & writing\", \"Exception handling\", \"Context managers\"]\n  }, {\n    id: \"py-mod-5\",\n    title: \"Modules & Packages\",\n    description: \"Understand how to organize code using modules and packages, and use Python's standard library.\",\n    estimatedTime: \"2-3 hours\",\n    topics: [\"Creating modules\", \"Importing\", \"Standard library\", \"Third-party packages\"]\n  }, {\n    id: \"py-mod-6\",\n    title: \"Object-Oriented Programming\",\n    description: \"Learn the principles of object-oriented programming and how to implement them in Python.\",\n    estimatedTime: \"3-4 hours\",\n    topics: [\"Classes & objects\", \"Inheritance\", \"Encapsulation\", \"Polymorphism\"]\n  }, {\n    id: \"py-mod-7\",\n    title: \"Final Project: Command-Line Application\",\n    description: \"Apply everything you've learned to build a complete command-line application using Python.\",\n    estimatedTime: \"3-4 hours\",\n    topics: [\"Project planning\", \"Implementation\", \"Testing\", \"Documentation\"]\n  }];\n};\nexport default getLanguageLearningPaths;","map":{"version":3,"names":["getLanguageLearningPaths","id","title","difficulty","moduleCount","estimatedTime","description","source","category","tags","prerequisites","learningOutcomes","getLanguageLearningPathDetail","pathId","allPaths","path","find","p","modules","getJavaScriptModules","getPythonModules","topics"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/data/languageLearningPathsData.js"],"sourcesContent":["// This file contains learning paths for various programming languages\n// Each path is structured from beginner to advanced levels\n// Content is based on open source educational resources\n\nexport const getLanguageLearningPaths = () => {\n  return [\n    {\n      id: \"lang-js-1\",\n      title: \"JavaScript Fundamentals\",\n      difficulty: \"Beginner\",\n      moduleCount: 8,\n      estimatedTime: \"20-25 hours\",\n      description: \"Master the fundamentals of JavaScript, the language of the web. Learn syntax, data types, functions, and basic DOM manipulation to build interactive websites.\",\n      source: \"MDN Web Docs, JavaScript.info\",\n      category: \"Frontend\",\n      tags: [\"JavaScript\", \"Web Development\", \"Frontend\"],\n      prerequisites: [\"Basic HTML and CSS knowledge\", \"Understanding of how the web works\"],\n      learningOutcomes: [\n        \"Write clean, efficient JavaScript code\",\n        \"Understand JavaScript data types and structures\",\n        \"Create interactive web elements with DOM manipulation\",\n        \"Debug JavaScript code effectively\",\n        \"Build simple web applications\"\n      ]\n    },\n    {\n      id: \"lang-py-1\",\n      title: \"Python Fundamentals\",\n      difficulty: \"Beginner\",\n      moduleCount: 7,\n      estimatedTime: \"18-22 hours\",\n      description: \"Learn Python from scratch - one of the most beginner-friendly and versatile programming languages. Master syntax, data structures, functions, and file operations.\",\n      source: \"Python.org, Real Python\",\n      category: \"Backend\",\n      tags: [\"Python\", \"Programming Basics\", \"Backend\"],\n      prerequisites: [\"No prior programming experience required\"],\n      learningOutcomes: [\n        \"Write clean, Pythonic code\",\n        \"Understand Python data types and structures\",\n        \"Create functions and use modules\",\n        \"Work with files and external data\",\n        \"Build simple command-line applications\"\n      ]\n    },\n    {\n      id: \"lang-java-1\",\n      title: \"Java Fundamentals\",\n      difficulty: \"Beginner\",\n      moduleCount: 9,\n      estimatedTime: \"25-30 hours\",\n      description: \"Start your journey with Java, a powerful object-oriented language used in enterprise applications, Android development, and more. Learn core concepts, syntax, and object-oriented programming principles.\",\n      source: \"Oracle Java Documentation, Java Tutorials\",\n      category: \"Backend\",\n      tags: [\"Java\", \"Object-Oriented Programming\", \"Backend\"],\n      prerequisites: [\"No prior programming experience required, but helpful\"],\n      learningOutcomes: [\n        \"Write and compile Java programs\",\n        \"Understand object-oriented programming concepts\",\n        \"Create classes and implement inheritance\",\n        \"Handle exceptions and debug Java code\",\n        \"Build simple Java applications\"\n      ]\n    },\n    {\n      id: \"lang-cpp-1\",\n      title: \"C++ Fundamentals\",\n      difficulty: \"Beginner\",\n      moduleCount: 10,\n      estimatedTime: \"30-35 hours\",\n      description: \"Learn C++, a powerful language used in systems programming, game development, and performance-critical applications. Master syntax, memory management, and object-oriented concepts.\",\n      source: \"CPlusPlus.com, C++ Reference\",\n      category: \"Systems Programming\",\n      tags: [\"C++\", \"Systems Programming\", \"Performance\"],\n      prerequisites: [\"No prior programming experience required, but helpful\"],\n      learningOutcomes: [\n        \"Write and compile C++ programs\",\n        \"Understand memory management and pointers\",\n        \"Implement object-oriented programming in C++\",\n        \"Use the Standard Template Library (STL)\",\n        \"Build efficient C++ applications\"\n      ]\n    },\n    {\n      id: \"lang-csharp-1\",\n      title: \"C# Fundamentals\",\n      difficulty: \"Beginner\",\n      moduleCount: 8,\n      estimatedTime: \"22-28 hours\",\n      description: \"Start with C#, Microsoft's powerful language for building Windows applications, games with Unity, and web applications with ASP.NET. Learn syntax, object-oriented concepts, and basic application development.\",\n      source: \"Microsoft Learn, C# Documentation\",\n      category: \"Backend\",\n      tags: [\"C#\", \".NET\", \"Windows Development\"],\n      prerequisites: [\"No prior programming experience required, but helpful\"],\n      learningOutcomes: [\n        \"Write and compile C# programs\",\n        \"Understand object-oriented programming concepts\",\n        \"Work with the .NET framework\",\n        \"Create simple Windows applications\",\n        \"Understand LINQ and collections\"\n      ]\n    },\n    {\n      id: \"lang-ruby-1\",\n      title: \"Ruby Fundamentals\",\n      difficulty: \"Beginner\",\n      moduleCount: 6,\n      estimatedTime: \"15-20 hours\",\n      description: \"Learn Ruby, an elegant, readable language known for its simplicity and productivity. Master syntax, object-oriented concepts, and the Ruby way of solving problems.\",\n      source: \"Ruby-Lang.org, Ruby Documentation\",\n      category: \"Backend\",\n      tags: [\"Ruby\", \"Web Development\", \"Backend\"],\n      prerequisites: [\"No prior programming experience required\"],\n      learningOutcomes: [\n        \"Write clean, idiomatic Ruby code\",\n        \"Understand Ruby's object-oriented approach\",\n        \"Use Ruby's built-in classes and modules\",\n        \"Work with collections and blocks\",\n        \"Build simple Ruby applications\"\n      ]\n    },\n    {\n      id: \"lang-go-1\",\n      title: \"Go (Golang) Fundamentals\",\n      difficulty: \"Beginner\",\n      moduleCount: 7,\n      estimatedTime: \"18-24 hours\",\n      description: \"Start with Go, a modern language designed for simplicity, efficiency, and concurrency. Learn syntax, data structures, and Go's approach to building reliable software.\",\n      source: \"Golang.org, Go Documentation\",\n      category: \"Backend\",\n      tags: [\"Go\", \"Golang\", \"Systems Programming\"],\n      prerequisites: [\"Basic programming concepts helpful but not required\"],\n      learningOutcomes: [\n        \"Write clean, efficient Go code\",\n        \"Understand Go's type system and data structures\",\n        \"Implement concurrency with goroutines and channels\",\n        \"Use Go's standard library effectively\",\n        \"Build command-line applications and web servers\"\n      ]\n    },\n    {\n      id: \"lang-swift-1\",\n      title: \"Swift Fundamentals\",\n      difficulty: \"Beginner\",\n      moduleCount: 7,\n      estimatedTime: \"20-25 hours\",\n      description: \"Learn Swift, Apple's modern language for iOS, macOS, watchOS, and tvOS development. Master syntax, data structures, and the foundations of app development.\",\n      source: \"Swift.org, Apple Developer Documentation\",\n      category: \"Mobile Development\",\n      tags: [\"Swift\", \"iOS Development\", \"Apple\"],\n      prerequisites: [\"No prior programming experience required\"],\n      learningOutcomes: [\n        \"Write clean, safe Swift code\",\n        \"Understand Swift's type system and optionals\",\n        \"Work with Swift collections and control flow\",\n        \"Implement object-oriented and functional programming concepts\",\n        \"Build simple iOS applications\"\n      ]\n    }\n  ];\n};\n\n// Get detailed information about a specific language learning path\nexport const getLanguageLearningPathDetail = (pathId) => {\n  const allPaths = getLanguageLearningPaths();\n  const path = allPaths.find(p => p.id === pathId);\n  \n  if (!path) return null;\n  \n  // Add modules information based on the path ID\n  switch(pathId) {\n    case \"lang-js-1\":\n      return {\n        ...path,\n        modules: getJavaScriptModules()\n      };\n    case \"lang-py-1\":\n      return {\n        ...path,\n        modules: getPythonModules()\n      };\n    // Add cases for other languages as they are implemented\n    default:\n      return path;\n  }\n};\n\n// JavaScript modules\nconst getJavaScriptModules = () => {\n  return [\n    {\n      id: \"js-mod-1\",\n      title: \"JavaScript Introduction & Setup\",\n      description: \"Get started with JavaScript by understanding its role in web development and setting up your development environment.\",\n      estimatedTime: \"2-3 hours\",\n      topics: [\"JavaScript history\", \"Development tools\", \"Browser console\", \"First JavaScript program\"]\n    },\n    {\n      id: \"js-mod-2\",\n      title: \"JavaScript Syntax & Data Types\",\n      description: \"Learn the basic syntax of JavaScript and understand the different data types available in the language.\",\n      estimatedTime: \"3-4 hours\",\n      topics: [\"Variables\", \"Data types\", \"Operators\", \"Type conversion\"]\n    },\n    {\n      id: \"js-mod-3\",\n      title: \"Control Flow & Functions\",\n      description: \"Master control flow statements and learn how to create and use functions in JavaScript.\",\n      estimatedTime: \"3-4 hours\",\n      topics: [\"Conditionals\", \"Loops\", \"Function declaration\", \"Parameters & return values\"]\n    },\n    {\n      id: \"js-mod-4\",\n      title: \"Arrays & Objects\",\n      description: \"Explore JavaScript's core data structures: arrays and objects, and learn how to manipulate them effectively.\",\n      estimatedTime: \"3-4 hours\",\n      topics: [\"Array methods\", \"Object properties\", \"Nested structures\", \"Destructuring\"]\n    },\n    {\n      id: \"js-mod-5\",\n      title: \"DOM Manipulation\",\n      description: \"Learn how to interact with HTML using JavaScript by manipulating the Document Object Model (DOM).\",\n      estimatedTime: \"3-4 hours\",\n      topics: [\"Selecting elements\", \"Modifying content\", \"Event handling\", \"Creating elements\"]\n    },\n    {\n      id: \"js-mod-6\",\n      title: \"Asynchronous JavaScript\",\n      description: \"Understand how to work with asynchronous operations in JavaScript using callbacks, promises, and async/await.\",\n      estimatedTime: \"3-4 hours\",\n      topics: [\"Callbacks\", \"Promises\", \"Async/await\", \"Fetch API\"]\n    },\n    {\n      id: \"js-mod-7\",\n      title: \"Error Handling & Debugging\",\n      description: \"Learn techniques for handling errors and debugging JavaScript code effectively.\",\n      estimatedTime: \"2-3 hours\",\n      topics: [\"Try/catch blocks\", \"Error types\", \"Browser DevTools\", \"Debugging techniques\"]\n    },\n    {\n      id: \"js-mod-8\",\n      title: \"Final Project: Interactive Web Application\",\n      description: \"Apply everything you've learned to build a complete interactive web application using JavaScript.\",\n      estimatedTime: \"3-4 hours\",\n      topics: [\"Project planning\", \"Implementation\", \"Testing\", \"Deployment\"]\n    }\n  ];\n};\n\n// Python modules\nconst getPythonModules = () => {\n  return [\n    {\n      id: \"py-mod-1\",\n      title: \"Python Introduction & Setup\",\n      description: \"Get started with Python by understanding its philosophy and setting up your development environment.\",\n      estimatedTime: \"2-3 hours\",\n      topics: [\"Python philosophy\", \"Installation\", \"IDLE & editors\", \"First Python program\"]\n    },\n    {\n      id: \"py-mod-2\",\n      title: \"Python Syntax & Data Types\",\n      description: \"Learn the basic syntax of Python and understand the different data types available in the language.\",\n      estimatedTime: \"3-4 hours\",\n      topics: [\"Variables\", \"Numbers & strings\", \"Lists & tuples\", \"Dictionaries & sets\"]\n    },\n    {\n      id: \"py-mod-3\",\n      title: \"Control Flow & Functions\",\n      description: \"Master control flow statements and learn how to create and use functions in Python.\",\n      estimatedTime: \"3-4 hours\",\n      topics: [\"Conditionals\", \"Loops\", \"Function definition\", \"Parameters & return values\"]\n    },\n    {\n      id: \"py-mod-4\",\n      title: \"Working with Files & Exceptions\",\n      description: \"Learn how to read from and write to files, and handle exceptions in Python.\",\n      estimatedTime: \"2-3 hours\",\n      topics: [\"File operations\", \"Reading & writing\", \"Exception handling\", \"Context managers\"]\n    },\n    {\n      id: \"py-mod-5\",\n      title: \"Modules & Packages\",\n      description: \"Understand how to organize code using modules and packages, and use Python's standard library.\",\n      estimatedTime: \"2-3 hours\",\n      topics: [\"Creating modules\", \"Importing\", \"Standard library\", \"Third-party packages\"]\n    },\n    {\n      id: \"py-mod-6\",\n      title: \"Object-Oriented Programming\",\n      description: \"Learn the principles of object-oriented programming and how to implement them in Python.\",\n      estimatedTime: \"3-4 hours\",\n      topics: [\"Classes & objects\", \"Inheritance\", \"Encapsulation\", \"Polymorphism\"]\n    },\n    {\n      id: \"py-mod-7\",\n      title: \"Final Project: Command-Line Application\",\n      description: \"Apply everything you've learned to build a complete command-line application using Python.\",\n      estimatedTime: \"3-4 hours\",\n      topics: [\"Project planning\", \"Implementation\", \"Testing\", \"Documentation\"]\n    }\n  ];\n};\n\nexport default getLanguageLearningPaths;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}