{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\components\\\\Chatbot\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FaRobot, FaUser, FaPaperPlane, FaTimes } from 'react-icons/fa';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: \"Hello! I'm AlgoBot, your coding assistant. How can I help you today?\",\n    isUser: false,\n    timestamp: new Date(),\n    suggestions: [{\n      text: \"What is AlgoHunt?\",\n      value: \"What is AlgoHunt?\"\n    }, {\n      text: \"Tell me about coding battles\",\n      value: \"Tell me about coding battles\"\n    }, {\n      text: \"How do learning paths work?\",\n      value: \"How do learning paths work?\"\n    }]\n  }]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [sessionId, setSessionId] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom of messages\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleInputChange = e => {\n    setInputMessage(e.target.value);\n  };\n  const handleSuggestionClick = suggestion => {\n    sendMessage(suggestion);\n  };\n  const sendMessage = async text => {\n    if (!text && !inputMessage.trim()) return;\n    const messageText = text || inputMessage;\n\n    // Add user message to chat\n    const userMessage = {\n      id: Date.now(),\n      text: messageText,\n      isUser: true,\n      timestamp: new Date()\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInputMessage('');\n    setIsTyping(true);\n    try {\n      // Send message to backend\n      const response = await fetch('/api/chatbot/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messageText,\n          sessionId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        // Save session ID if not already set\n        if (!sessionId) {\n          setSessionId(data.data.sessionId);\n        }\n\n        // Add bot response to chat\n        const botMessage = {\n          id: Date.now() + 1,\n          text: data.data.message,\n          isUser: false,\n          timestamp: new Date(),\n          suggestions: data.data.suggestions || [],\n          resources: data.data.resources || []\n        };\n        setTimeout(() => {\n          setMessages(prevMessages => [...prevMessages, botMessage]);\n          setIsTyping(false);\n        }, 500); // Slight delay to simulate typing\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Add error message\n      const errorMessage = {\n        id: Date.now() + 1,\n        text: \"Sorry, I'm having trouble connecting right now. Please try again later.\",\n        isUser: false,\n        timestamp: new Date()\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n      setIsTyping(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    sendMessage();\n  };\n  const formatTimestamp = timestamp => {\n    return new Date(timestamp).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggle\",\n      onClick: toggleChatbot,\n      \"aria-label\": isOpen ? \"Close chatbot\" : \"Open chatbot\",\n      children: isOpen ? /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(FaRobot, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-dialog\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(FaRobot, {\n          className: \"chatbot-header-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AlgoBot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-close\",\n          onClick: toggleChatbot,\n          \"aria-label\": \"Close chatbot\",\n          children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-message ${message.isUser ? 'user-message' : 'bot-message'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: message.isUser ? /*#__PURE__*/_jsxDEV(FaUser, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(FaRobot, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-timestamp\",\n              children: formatTimestamp(message.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this), !message.isUser && message.suggestions && message.suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-suggestions\",\n              children: message.suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSuggestionClick(suggestion.value),\n                className: \"suggestion-button\",\n                children: suggestion.text\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 21\n            }, this), !message.isUser && message.resources && message.resources.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-resources\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Resources:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: message.resources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: resource.url,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: resource.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 29\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-message bot-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: /*#__PURE__*/_jsxDEV(FaRobot, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chatbot-input\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: handleInputChange,\n          placeholder: \"Type your message...\",\n          \"aria-label\": \"Type your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          \"aria-label\": \"Send message\",\n          children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"6gvTsFr0oOvtIXWpmTYNJ8JqSvY=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FaRobot","FaUser","FaPaperPlane","FaTimes","jsxDEV","_jsxDEV","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","id","text","isUser","timestamp","Date","suggestions","value","inputMessage","setInputMessage","sessionId","setSessionId","isTyping","setIsTyping","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","toggleChatbot","handleInputChange","e","target","handleSuggestionClick","suggestion","sendMessage","trim","messageText","userMessage","now","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","data","json","success","botMessage","resources","setTimeout","error","console","errorMessage","handleSubmit","preventDefault","formatTimestamp","toLocaleTimeString","hour","minute","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","length","index","resource","href","url","rel","title","ref","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/components/Chatbot/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FaRobot, FaUser, FaPaperPlane, FaTimes } from 'react-icons/fa';\nimport './Chatbot.css';\n\nconst Chatbot = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([\n    {\n      id: 1,\n      text: \"Hello! I'm AlgoBot, your coding assistant. How can I help you today?\",\n      isUser: false,\n      timestamp: new Date(),\n      suggestions: [\n        { text: \"What is AlgoHunt?\", value: \"What is AlgoHunt?\" },\n        { text: \"Tell me about coding battles\", value: \"Tell me about coding battles\" },\n        { text: \"How do learning paths work?\", value: \"How do learning paths work?\" }\n      ]\n    }\n  ]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [sessionId, setSessionId] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom of messages\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleInputChange = (e) => {\n    setInputMessage(e.target.value);\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    sendMessage(suggestion);\n  };\n\n  const sendMessage = async (text) => {\n    if (!text && !inputMessage.trim()) return;\n\n    const messageText = text || inputMessage;\n\n    // Add user message to chat\n    const userMessage = {\n      id: Date.now(),\n      text: messageText,\n      isUser: true,\n      timestamp: new Date()\n    };\n\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInputMessage('');\n    setIsTyping(true);\n\n    try {\n      // Send message to backend\n      const response = await fetch('/api/chatbot/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: messageText,\n          sessionId\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        // Save session ID if not already set\n        if (!sessionId) {\n          setSessionId(data.data.sessionId);\n        }\n\n        // Add bot response to chat\n        const botMessage = {\n          id: Date.now() + 1,\n          text: data.data.message,\n          isUser: false,\n          timestamp: new Date(),\n          suggestions: data.data.suggestions || [],\n          resources: data.data.resources || []\n        };\n\n        setTimeout(() => {\n          setMessages(prevMessages => [...prevMessages, botMessage]);\n          setIsTyping(false);\n        }, 500); // Slight delay to simulate typing\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Add error message\n      const errorMessage = {\n        id: Date.now() + 1,\n        text: \"Sorry, I'm having trouble connecting right now. Please try again later.\",\n        isUser: false,\n        timestamp: new Date()\n      };\n\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n      setIsTyping(false);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendMessage();\n  };\n\n  const formatTimestamp = (timestamp) => {\n    return new Date(timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      {/* Chatbot toggle button */}\n      <button\n        className=\"chatbot-toggle\"\n        onClick={toggleChatbot}\n        aria-label={isOpen ? \"Close chatbot\" : \"Open chatbot\"}\n      >\n        {isOpen ? <FaTimes /> : <FaRobot />}\n      </button>\n\n      {/* Chatbot dialog */}\n      {isOpen && (\n        <div className=\"chatbot-dialog\">\n          <div className=\"chatbot-header\">\n            <FaRobot className=\"chatbot-header-icon\" />\n            <h3>AlgoBot</h3>\n            <button\n              className=\"chatbot-close\"\n              onClick={toggleChatbot}\n              aria-label=\"Close chatbot\"\n            >\n              <FaTimes />\n            </button>\n          </div>\n\n          <div className=\"chatbot-messages\">\n            {messages.map((message) => (\n              <div\n                key={message.id}\n                className={`chatbot-message ${message.isUser ? 'user-message' : 'bot-message'}`}\n              >\n                <div className=\"message-avatar\">\n                  {message.isUser ? <FaUser /> : <FaRobot />}\n                </div>\n                <div className=\"message-content\">\n                  <div className=\"message-text\">{message.text}</div>\n                  <div className=\"message-timestamp\">{formatTimestamp(message.timestamp)}</div>\n\n                  {/* Suggestions */}\n                  {!message.isUser && message.suggestions && message.suggestions.length > 0 && (\n                    <div className=\"message-suggestions\">\n                      {message.suggestions.map((suggestion, index) => (\n                        <button\n                          key={index}\n                          onClick={() => handleSuggestionClick(suggestion.value)}\n                          className=\"suggestion-button\"\n                        >\n                          {suggestion.text}\n                        </button>\n                      ))}\n                    </div>\n                  )}\n\n                  {/* Resources */}\n                  {!message.isUser && message.resources && message.resources.length > 0 && (\n                    <div className=\"message-resources\">\n                      <h4>Resources:</h4>\n                      <ul>\n                        {message.resources.map((resource, index) => (\n                          <li key={index}>\n                            <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                              {resource.title}\n                            </a>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n\n            {/* Typing indicator */}\n            {isTyping && (\n              <div className=\"chatbot-message bot-message\">\n                <div className=\"message-avatar\">\n                  <FaRobot />\n                </div>\n                <div className=\"message-content\">\n                  <div className=\"typing-indicator\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div ref={messagesEndRef} />\n          </div>\n\n          <form className=\"chatbot-input\" onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              value={inputMessage}\n              onChange={handleInputChange}\n              placeholder=\"Type your message...\"\n              aria-label=\"Type your message\"\n            />\n            <button type=\"submit\" aria-label=\"Send message\">\n              <FaPaperPlane />\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}