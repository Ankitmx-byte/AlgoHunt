{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\pages\\\\CodingBattleArena.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ScrollReveal from '../components/ScrollReveal';\nimport './CodingBattleArena.css';\nimport '../styles/animations.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodingBattleArena() {\n  _s();\n  const {\n    battleId\n  } = useParams();\n  const navigate = useNavigate();\n  const [battle, setBattle] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('javascript');\n  const [problem, setProblem] = useState(null);\n  const [testCases, setTestCases] = useState([]);\n  const [testResults, setTestResults] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showHint, setShowHint] = useState(false);\n  const [showSolution, setShowSolution] = useState(false);\n  const [battleEnded, setBattleEnded] = useState(false);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [userProgress, setUserProgress] = useState(0);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [showFullScreen, setShowFullScreen] = useState(false);\n  const [isFriendBattle, setIsFriendBattle] = useState(false);\n  useEffect(() => {\n    // Load battle data from localStorage\n    const battleData = localStorage.getItem('currentBattle');\n    const opponentData = localStorage.getItem('currentOpponent');\n    if (battleData) {\n      const parsedBattle = JSON.parse(battleData);\n      setBattle(parsedBattle);\n\n      // Check if this is a friend battle\n      if (parsedBattle.isFriendBattle) {\n        setIsFriendBattle(true);\n      }\n\n      // Set time left based on difficulty or use the battle's duration if available\n      let duration = parsedBattle.duration || 30; // Default 30 minutes\n      if (!parsedBattle.duration) {\n        // If no duration is specified, set based on difficulty\n        if (parsedBattle.difficulty === 'easy') duration = 20;\n        if (parsedBattle.difficulty === 'hard') duration = 45;\n      }\n      setTimeLeft(duration * 60); // Convert to seconds\n    } else {\n      // If no battle data, create a default battle\n      const defaultBattle = {\n        id: battleId,\n        difficulty: 'Medium',\n        category: 'Algorithms',\n        startTime: Date.now(),\n        duration: 30\n      };\n      setBattle(defaultBattle);\n      setTimeLeft(30 * 60); // 30 minutes in seconds\n\n      // Save to localStorage for consistency\n      localStorage.setItem('currentBattle', JSON.stringify(defaultBattle));\n    }\n    if (opponentData) {\n      setOpponent(JSON.parse(opponentData));\n    } else {\n      // If no opponent data, create a default opponent\n      const defaultOpponent = {\n        name: \"Alex Chen\",\n        rating: 1842,\n        winRate: \"68%\",\n        preferredLanguage: \"Python\",\n        skillLevel: \"92% match for your skill level\",\n        avatar: \"https://randomuser.me/api/portraits/men/32.jpg\"\n      };\n      setOpponent(defaultOpponent);\n\n      // Save to localStorage for consistency\n      localStorage.setItem('currentOpponent', JSON.stringify(defaultOpponent));\n    }\n\n    // Load problem based on difficulty and category\n    loadProblem();\n    setLoading(false);\n  }, [battleId]);\n\n  // Timer countdown\n  useEffect(() => {\n    if (timeLeft > 0 && !battleEnded) {\n      const timer = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0 && !battleEnded) {\n      endBattle();\n    }\n  }, [timeLeft, battleEnded]);\n\n  // Simulate opponent progress\n  useEffect(() => {\n    if (!battleEnded && opponent) {\n      // Start with a delay to give the user time to read the problem\n      const initialDelay = setTimeout(() => {\n        // Create a more realistic opponent progress simulation\n        const interval = setInterval(() => {\n          setOpponentProgress(prev => {\n            var _battle$difficulty, _battle$difficulty2;\n            // Make progress increments smaller and more realistic\n            // The increment is based on difficulty and varies slightly\n            let baseIncrement;\n            if ((battle === null || battle === void 0 ? void 0 : (_battle$difficulty = battle.difficulty) === null || _battle$difficulty === void 0 ? void 0 : _battle$difficulty.toLowerCase()) === 'easy') {\n              baseIncrement = 0.8; // Faster progress on easy problems\n            } else if ((battle === null || battle === void 0 ? void 0 : (_battle$difficulty2 = battle.difficulty) === null || _battle$difficulty2 === void 0 ? void 0 : _battle$difficulty2.toLowerCase()) === 'hard') {\n              baseIncrement = 0.3; // Slower progress on hard problems\n            } else {\n              baseIncrement = 0.5; // Medium difficulty default\n            }\n\n            // Add some randomness to the increment\n            const randomFactor = Math.random() * 0.5 + 0.75; // Between 0.75 and 1.25\n            const increment = baseIncrement * randomFactor;\n\n            // Calculate new progress\n            const newProgress = prev + increment;\n\n            // Simulate the opponent getting stuck sometimes\n            const stuckProbability = 0.05; // 5% chance of getting stuck each update\n            if (Math.random() < stuckProbability && prev > 30) {\n              // If stuck, don't increase progress this time\n              return prev;\n            }\n\n            // If opponent reaches 100%, they've finished\n            if (newProgress >= 100) {\n              clearInterval(interval);\n              handleOpponentFinished();\n              return 100;\n            }\n            return newProgress;\n          });\n        }, 8000); // Slower updates (every 8 seconds)\n\n        return () => clearInterval(interval);\n      }, 15000); // 15 second initial delay\n\n      return () => clearTimeout(initialDelay);\n    }\n  }, [opponent, battleEnded, battle === null || battle === void 0 ? void 0 : battle.difficulty]);\n  const loadProblem = () => {\n    // In a real app, this would fetch from an API\n    // For now, we'll use a mock problem\n    const mockProblem = {\n      title: \"Two Sum\",\n      description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice.\",\n      examples: [{\n        input: \"nums = [2,7,11,15], target = 9\",\n        output: \"[0,1]\",\n        explanation: \"Because nums[0] + nums[1] == 9, we return [0, 1].\"\n      }, {\n        input: \"nums = [3,2,4], target = 6\",\n        output: \"[1,2]\",\n        explanation: \"Because nums[1] + nums[2] == 6, we return [1, 2].\"\n      }],\n      constraints: [\"2 <= nums.length <= 10^4\", \"-10^9 <= nums[i] <= 10^9\", \"-10^9 <= target <= 10^9\", \"Only one valid answer exists.\"],\n      difficulty: \"Easy\",\n      hints: [\"Try using a hash map to store the values you've seen so far.\", \"For each element, check if target - current element exists in the hash map.\"],\n      solution: `function twoSum(nums, target) {\n  const map = new Map();\n\n  for (let i = 0; i < nums.length; i++) {\n    const complement = target - nums[i];\n\n    if (map.has(complement)) {\n      return [map.get(complement), i];\n    }\n\n    map.set(nums[i], i);\n  }\n\n  return null;\n}`\n    };\n    setProblem(mockProblem);\n\n    // Set up test cases\n    setTestCases([{\n      input: \"twoSum([2,7,11,15], 9)\",\n      expectedOutput: \"[0,1]\"\n    }, {\n      input: \"twoSum([3,2,4], 6)\",\n      expectedOutput: \"[1,2]\"\n    }, {\n      input: \"twoSum([3,3], 6)\",\n      expectedOutput: \"[0,1]\"\n    }]);\n\n    // Set initial code template\n    setCode(`function twoSum(nums, target) {\n  // Your solution here\n}`);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const runCode = () => {\n    setIsRunning(true);\n\n    // Simulate code execution\n    setTimeout(() => {\n      // In a real app, this would actually execute the code\n      // For now, we'll simulate results\n\n      // Generate more realistic test results with some randomness\n      const results = testCases.map(test => {\n        // 80% chance of passing a test when running code\n        const passed = Math.random() < 0.8;\n        return {\n          input: test.input,\n          expectedOutput: test.expectedOutput,\n          actualOutput: passed ? test.expectedOutput : \"[1,0]\",\n          // Different output if failed\n          passed: passed\n        };\n      });\n      setTestResults(results);\n      setIsRunning(false);\n\n      // Update progress\n      const passedTests = results.filter(r => r.passed).length;\n      const progress = passedTests / testCases.length * 100;\n      setUserProgress(progress);\n\n      // Don't automatically end the battle when tests pass\n      // Let the user explicitly submit their solution\n    }, 1500);\n  };\n  const submitSolution = () => {\n    setIsSubmitting(true);\n\n    // Simulate submission\n    setTimeout(() => {\n      // Generate test results with high chance of success for submission\n      const results = testCases.map(test => {\n        // 90% chance of passing a test when submitting\n        const passed = Math.random() < 0.9;\n        return {\n          input: test.input,\n          expectedOutput: test.expectedOutput,\n          actualOutput: passed ? test.expectedOutput : \"[1,0]\",\n          // Different output if failed\n          passed: passed\n        };\n      });\n      setTestResults(results);\n\n      // Update progress\n      const passedTests = results.filter(r => r.passed).length;\n      const progress = passedTests / testCases.length * 100;\n      setUserProgress(progress);\n\n      // Check if all tests passed\n      if (passedTests === testCases.length) {\n        // Show success message\n        const successMessage = document.createElement('div');\n        successMessage.className = 'submission-success';\n        successMessage.innerHTML = '<div class=\"success-icon\">✓</div><div>All tests passed! Great job!</div>';\n        document.querySelector('.code-section').appendChild(successMessage);\n\n        // Remove the message after 3 seconds\n        setTimeout(() => {\n          if (document.querySelector('.submission-success')) {\n            document.querySelector('.submission-success').remove();\n          }\n        }, 3000);\n\n        // Only end the battle if the user has completed all tests\n        // and has a significant lead over the opponent\n        if (opponentProgress < 80) {\n          endBattle(true);\n        }\n      }\n      setIsSubmitting(false);\n    }, 2000);\n  };\n  const handleOpponentFinished = () => {\n    if (!battleEnded) {\n      // Opponent finished first\n      endBattle(false);\n    }\n  };\n  const endBattle = (userWon = false) => {\n    setBattleEnded(true);\n\n    // Calculate the battle duration in seconds\n    const battleDuration = battle !== null && battle !== void 0 && battle.duration ? battle.duration * 60 : 30 * 60; // Default to 30 minutes\n\n    // Get current date/time for completion timestamp\n    const completedAt = new Date().toISOString();\n\n    // Save result to localStorage\n    const result = {\n      battleId,\n      battleTitle: (battle === null || battle === void 0 ? void 0 : battle.title) || '1v1 Coding Battle',\n      userWon,\n      opponentName: (opponent === null || opponent === void 0 ? void 0 : opponent.name) || 'Unknown',\n      problem: (problem === null || problem === void 0 ? void 0 : problem.title) || 'Two Sum',\n      // Ensure problem title is always defined\n      userProgress,\n      opponentProgress: userWon ? Math.max(0, userProgress - 5) : 100,\n      timeSpent: timeLeft > 0 ? battleDuration - timeLeft : battleDuration,\n      completedAt\n    };\n    localStorage.setItem(`battleResult_${battleId}`, JSON.stringify(result));\n\n    // Show result modal or navigate to results page\n    setTimeout(() => {\n      navigate(`/battle/${battleId}/results`);\n    }, 3000);\n  };\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    const message = {\n      id: Date.now(),\n      sender: 'You',\n      text: newMessage,\n      timestamp: new Date().toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    };\n    setChatMessages([...chatMessages, message]);\n    setNewMessage('');\n\n    // Simulate opponent response\n    setTimeout(() => {\n      const responses = [\"I'm still working on this problem.\", \"This is challenging!\", \"How are you approaching this?\", \"I think I'm getting close.\", \"Good luck!\"];\n      const opponentMessage = {\n        id: Date.now() + 1,\n        sender: (opponent === null || opponent === void 0 ? void 0 : opponent.name) || 'Opponent',\n        text: responses[Math.floor(Math.random() * responses.length)],\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n      setChatMessages(prev => [...prev, opponentMessage]);\n    }, 2000);\n  };\n  const toggleFullScreen = () => {\n    setShowFullScreen(!showFullScreen);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-arena-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-text\",\n          children: \"Loading battle arena...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `battle-arena-container ${showFullScreen ? 'fullscreen' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: (battle === null || battle === void 0 ? void 0 : battle.title) || '1v1 Coding Battle'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"difficulty\",\n            children: (battle === null || battle === void 0 ? void 0 : battle.difficulty) || 'Medium'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"category\",\n            children: (battle === null || battle === void 0 ? void 0 : battle.category) || 'Algorithms'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timer\",\n            children: [\"Time Left: \", formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), (battle === null || battle === void 0 ? void 0 : battle.originalDuration) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"duration\",\n            children: [\"Original Duration: \", battle.originalDuration, \" mins\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), isFriendBattle && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"friend-battle-badge\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"friend-icon\",\n              children: \"\\uD83D\\uDC65\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), \" Friend Battle\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fullscreen-btn\",\n          onClick: toggleFullScreen,\n          children: showFullScreen ? 'Exit Fullscreen' : 'Fullscreen'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-name\",\n            children: \"You\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"progress-percentage\",\n            children: [Math.round(userProgress), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${userProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vs-indicator\",\n        children: \"VS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-progress opponent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-name\",\n            children: (opponent === null || opponent === void 0 ? void 0 : opponent.name) || 'Opponent'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"progress-percentage\",\n            children: [Math.round(opponentProgress), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${opponentProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: (problem === null || problem === void 0 ? void 0 : problem.title) || 'Problem Title'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-difficulty\",\n            children: (problem === null || problem === void 0 ? void 0 : problem.difficulty) || 'Medium'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-description\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: problem === null || problem === void 0 ? void 0 : problem.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"examples\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Examples:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this), problem === null || problem === void 0 ? void 0 : problem.examples.map((example, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"example-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Input:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this), \" \", example.input]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"example-output\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Output:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 21\n                }, this), \" \", example.output]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 19\n              }, this), example.explanation && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"example-explanation\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Explanation:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 23\n                }, this), \" \", example.explanation]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"constraints\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Constraints:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: problem === null || problem === void 0 ? void 0 : problem.constraints.map((constraint, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: constraint\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hints\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Hints:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: problem === null || problem === void 0 ? void 0 : problem.hints.map((hint, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: hint\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), !showHint && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: () => setShowHint(true),\n            children: \"Show Hints\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this), showSolution && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"solution\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Solution:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: problem === null || problem === void 0 ? void 0 : problem.solution\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: language,\n            onChange: e => setLanguage(e.target.value),\n            className: \"language-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"javascript\",\n              children: \"JavaScript\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"python\",\n              children: \"Python\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"java\",\n              children: \"Java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cpp\",\n              children: \"C++\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"run-btn\",\n              onClick: runCode,\n              disabled: isRunning || isSubmitting,\n              children: isRunning ? 'Running...' : 'Run Code'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-btn\",\n              onClick: submitSolution,\n              disabled: isRunning || isSubmitting,\n              children: isSubmitting ? 'Submitting...' : 'Submit Solution'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-editor\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: code,\n            onChange: e => setCode(e.target.value),\n            className: \"code-textarea\",\n            spellCheck: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Test Results:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this), testResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-list\",\n            children: testResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `result-item ${result.passed ? 'passed' : 'failed'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"test-number\",\n                  children: [\"Test \", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"result-status\",\n                  children: result.passed ? 'Passed' : 'Failed'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Input:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 25\n                  }, this), \" \", result.input]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-expected\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Expected:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 25\n                  }, this), \" \", result.expectedOutput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-actual\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Your Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 25\n                  }, this), \" \", result.actualOutput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-results\",\n            children: \"Run your code to see test results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Battle Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this), isFriendBattle && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"friend-battle-chat-badge\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"friend-icon\",\n              children: \"\\uD83D\\uDC65\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 17\n            }, this), \" Friend Battle Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: chatMessages.length > 0 ? chatMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${message.sender === 'You' ? 'user' : 'opponent'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-sender\",\n                children: message.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: message.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 19\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-messages\",\n            children: isFriendBattle ? \"Chat with your friend while you solve the problem together!\" : \"No messages yet. Start the conversation!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chat-input\",\n          onSubmit: sendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            disabled: battleEnded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !newMessage.trim() || battleEnded,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), battleEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-ended-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: userProgress >= opponentProgress ? 'You Won!' : 'You Lost!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Redirecting to results page...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 5\n  }, this);\n}\n_s(CodingBattleArena, \"deOOZfF2IONdPrZG6fgedZVNRXY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CodingBattleArena;\nexport default CodingBattleArena;\nvar _c;\n$RefreshReg$(_c, \"CodingBattleArena\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","ScrollReveal","jsxDEV","_jsxDEV","CodingBattleArena","_s","battleId","navigate","battle","setBattle","opponent","setOpponent","loading","setLoading","timeLeft","setTimeLeft","code","setCode","language","setLanguage","problem","setProblem","testCases","setTestCases","testResults","setTestResults","isRunning","setIsRunning","isSubmitting","setIsSubmitting","showHint","setShowHint","showSolution","setShowSolution","battleEnded","setBattleEnded","opponentProgress","setOpponentProgress","userProgress","setUserProgress","chatMessages","setChatMessages","newMessage","setNewMessage","showFullScreen","setShowFullScreen","isFriendBattle","setIsFriendBattle","battleData","localStorage","getItem","opponentData","parsedBattle","JSON","parse","duration","difficulty","defaultBattle","id","category","startTime","Date","now","setItem","stringify","defaultOpponent","name","rating","winRate","preferredLanguage","skillLevel","avatar","loadProblem","timer","setTimeout","clearTimeout","endBattle","initialDelay","interval","setInterval","prev","_battle$difficulty","_battle$difficulty2","baseIncrement","toLowerCase","randomFactor","Math","random","increment","newProgress","stuckProbability","clearInterval","handleOpponentFinished","mockProblem","title","description","examples","input","output","explanation","constraints","hints","solution","expectedOutput","formatTime","seconds","mins","floor","secs","toString","padStart","runCode","results","map","test","passed","actualOutput","passedTests","filter","r","length","progress","submitSolution","successMessage","document","createElement","className","innerHTML","querySelector","appendChild","remove","userWon","battleDuration","completedAt","toISOString","result","battleTitle","opponentName","max","timeSpent","sendMessage","e","preventDefault","trim","message","sender","text","timestamp","toLocaleTimeString","hour","minute","responses","opponentMessage","toggleFullScreen","children","fileName","_jsxFileName","lineNumber","columnNumber","originalDuration","onClick","round","style","width","example","index","constraint","hint","value","onChange","target","disabled","spellCheck","onSubmit","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/pages/CodingBattleArena.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ScrollReveal from '../components/ScrollReveal';\nimport './CodingBattleArena.css';\nimport '../styles/animations.css';\n\nfunction CodingBattleArena() {\n  const { battleId } = useParams();\n  const navigate = useNavigate();\n  const [battle, setBattle] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('javascript');\n  const [problem, setProblem] = useState(null);\n  const [testCases, setTestCases] = useState([]);\n  const [testResults, setTestResults] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showHint, setShowHint] = useState(false);\n  const [showSolution, setShowSolution] = useState(false);\n  const [battleEnded, setBattleEnded] = useState(false);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [userProgress, setUserProgress] = useState(0);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [showFullScreen, setShowFullScreen] = useState(false);\n  const [isFriendBattle, setIsFriendBattle] = useState(false);\n\n  useEffect(() => {\n    // Load battle data from localStorage\n    const battleData = localStorage.getItem('currentBattle');\n    const opponentData = localStorage.getItem('currentOpponent');\n\n    if (battleData) {\n      const parsedBattle = JSON.parse(battleData);\n      setBattle(parsedBattle);\n\n      // Check if this is a friend battle\n      if (parsedBattle.isFriendBattle) {\n        setIsFriendBattle(true);\n      }\n\n      // Set time left based on difficulty or use the battle's duration if available\n      let duration = parsedBattle.duration || 30; // Default 30 minutes\n      if (!parsedBattle.duration) {\n        // If no duration is specified, set based on difficulty\n        if (parsedBattle.difficulty === 'easy') duration = 20;\n        if (parsedBattle.difficulty === 'hard') duration = 45;\n      }\n\n      setTimeLeft(duration * 60); // Convert to seconds\n    } else {\n      // If no battle data, create a default battle\n      const defaultBattle = {\n        id: battleId,\n        difficulty: 'Medium',\n        category: 'Algorithms',\n        startTime: Date.now(),\n        duration: 30\n      };\n      setBattle(defaultBattle);\n      setTimeLeft(30 * 60); // 30 minutes in seconds\n\n      // Save to localStorage for consistency\n      localStorage.setItem('currentBattle', JSON.stringify(defaultBattle));\n    }\n\n    if (opponentData) {\n      setOpponent(JSON.parse(opponentData));\n    } else {\n      // If no opponent data, create a default opponent\n      const defaultOpponent = {\n        name: \"Alex Chen\",\n        rating: 1842,\n        winRate: \"68%\",\n        preferredLanguage: \"Python\",\n        skillLevel: \"92% match for your skill level\",\n        avatar: \"https://randomuser.me/api/portraits/men/32.jpg\"\n      };\n      setOpponent(defaultOpponent);\n\n      // Save to localStorage for consistency\n      localStorage.setItem('currentOpponent', JSON.stringify(defaultOpponent));\n    }\n\n    // Load problem based on difficulty and category\n    loadProblem();\n\n    setLoading(false);\n  }, [battleId]);\n\n  // Timer countdown\n  useEffect(() => {\n    if (timeLeft > 0 && !battleEnded) {\n      const timer = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0 && !battleEnded) {\n      endBattle();\n    }\n  }, [timeLeft, battleEnded]);\n\n  // Simulate opponent progress\n  useEffect(() => {\n    if (!battleEnded && opponent) {\n      // Start with a delay to give the user time to read the problem\n      const initialDelay = setTimeout(() => {\n        // Create a more realistic opponent progress simulation\n        const interval = setInterval(() => {\n          setOpponentProgress(prev => {\n            // Make progress increments smaller and more realistic\n            // The increment is based on difficulty and varies slightly\n            let baseIncrement;\n            if (battle?.difficulty?.toLowerCase() === 'easy') {\n              baseIncrement = 0.8; // Faster progress on easy problems\n            } else if (battle?.difficulty?.toLowerCase() === 'hard') {\n              baseIncrement = 0.3; // Slower progress on hard problems\n            } else {\n              baseIncrement = 0.5; // Medium difficulty default\n            }\n\n            // Add some randomness to the increment\n            const randomFactor = Math.random() * 0.5 + 0.75; // Between 0.75 and 1.25\n            const increment = baseIncrement * randomFactor;\n\n            // Calculate new progress\n            const newProgress = prev + increment;\n\n            // Simulate the opponent getting stuck sometimes\n            const stuckProbability = 0.05; // 5% chance of getting stuck each update\n            if (Math.random() < stuckProbability && prev > 30) {\n              // If stuck, don't increase progress this time\n              return prev;\n            }\n\n            // If opponent reaches 100%, they've finished\n            if (newProgress >= 100) {\n              clearInterval(interval);\n              handleOpponentFinished();\n              return 100;\n            }\n\n            return newProgress;\n          });\n        }, 8000); // Slower updates (every 8 seconds)\n\n        return () => clearInterval(interval);\n      }, 15000); // 15 second initial delay\n\n      return () => clearTimeout(initialDelay);\n    }\n  }, [opponent, battleEnded, battle?.difficulty]);\n\n  const loadProblem = () => {\n    // In a real app, this would fetch from an API\n    // For now, we'll use a mock problem\n    const mockProblem = {\n      title: \"Two Sum\",\n      description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice.\",\n      examples: [\n        {\n          input: \"nums = [2,7,11,15], target = 9\",\n          output: \"[0,1]\",\n          explanation: \"Because nums[0] + nums[1] == 9, we return [0, 1].\"\n        },\n        {\n          input: \"nums = [3,2,4], target = 6\",\n          output: \"[1,2]\",\n          explanation: \"Because nums[1] + nums[2] == 6, we return [1, 2].\"\n        }\n      ],\n      constraints: [\n        \"2 <= nums.length <= 10^4\",\n        \"-10^9 <= nums[i] <= 10^9\",\n        \"-10^9 <= target <= 10^9\",\n        \"Only one valid answer exists.\"\n      ],\n      difficulty: \"Easy\",\n      hints: [\n        \"Try using a hash map to store the values you've seen so far.\",\n        \"For each element, check if target - current element exists in the hash map.\"\n      ],\n      solution: `function twoSum(nums, target) {\n  const map = new Map();\n\n  for (let i = 0; i < nums.length; i++) {\n    const complement = target - nums[i];\n\n    if (map.has(complement)) {\n      return [map.get(complement), i];\n    }\n\n    map.set(nums[i], i);\n  }\n\n  return null;\n}`\n    };\n\n    setProblem(mockProblem);\n\n    // Set up test cases\n    setTestCases([\n      { input: \"twoSum([2,7,11,15], 9)\", expectedOutput: \"[0,1]\" },\n      { input: \"twoSum([3,2,4], 6)\", expectedOutput: \"[1,2]\" },\n      { input: \"twoSum([3,3], 6)\", expectedOutput: \"[0,1]\" }\n    ]);\n\n    // Set initial code template\n    setCode(`function twoSum(nums, target) {\n  // Your solution here\n}`);\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const runCode = () => {\n    setIsRunning(true);\n\n    // Simulate code execution\n    setTimeout(() => {\n      // In a real app, this would actually execute the code\n      // For now, we'll simulate results\n\n      // Generate more realistic test results with some randomness\n      const results = testCases.map(test => {\n        // 80% chance of passing a test when running code\n        const passed = Math.random() < 0.8;\n        return {\n          input: test.input,\n          expectedOutput: test.expectedOutput,\n          actualOutput: passed ? test.expectedOutput : \"[1,0]\", // Different output if failed\n          passed: passed\n        };\n      });\n\n      setTestResults(results);\n      setIsRunning(false);\n\n      // Update progress\n      const passedTests = results.filter(r => r.passed).length;\n      const progress = (passedTests / testCases.length) * 100;\n      setUserProgress(progress);\n\n      // Don't automatically end the battle when tests pass\n      // Let the user explicitly submit their solution\n    }, 1500);\n  };\n\n  const submitSolution = () => {\n    setIsSubmitting(true);\n\n    // Simulate submission\n    setTimeout(() => {\n      // Generate test results with high chance of success for submission\n      const results = testCases.map(test => {\n        // 90% chance of passing a test when submitting\n        const passed = Math.random() < 0.9;\n        return {\n          input: test.input,\n          expectedOutput: test.expectedOutput,\n          actualOutput: passed ? test.expectedOutput : \"[1,0]\", // Different output if failed\n          passed: passed\n        };\n      });\n\n      setTestResults(results);\n\n      // Update progress\n      const passedTests = results.filter(r => r.passed).length;\n      const progress = (passedTests / testCases.length) * 100;\n      setUserProgress(progress);\n\n      // Check if all tests passed\n      if (passedTests === testCases.length) {\n        // Show success message\n        const successMessage = document.createElement('div');\n        successMessage.className = 'submission-success';\n        successMessage.innerHTML = '<div class=\"success-icon\">✓</div><div>All tests passed! Great job!</div>';\n        document.querySelector('.code-section').appendChild(successMessage);\n\n        // Remove the message after 3 seconds\n        setTimeout(() => {\n          if (document.querySelector('.submission-success')) {\n            document.querySelector('.submission-success').remove();\n          }\n        }, 3000);\n\n        // Only end the battle if the user has completed all tests\n        // and has a significant lead over the opponent\n        if (opponentProgress < 80) {\n          endBattle(true);\n        }\n      }\n\n      setIsSubmitting(false);\n    }, 2000);\n  };\n\n  const handleOpponentFinished = () => {\n    if (!battleEnded) {\n      // Opponent finished first\n      endBattle(false);\n    }\n  };\n\n  const endBattle = (userWon = false) => {\n    setBattleEnded(true);\n\n    // Calculate the battle duration in seconds\n    const battleDuration = battle?.duration ? battle.duration * 60 : 30 * 60; // Default to 30 minutes\n\n    // Get current date/time for completion timestamp\n    const completedAt = new Date().toISOString();\n\n    // Save result to localStorage\n    const result = {\n      battleId,\n      battleTitle: battle?.title || '1v1 Coding Battle',\n      userWon,\n      opponentName: opponent?.name || 'Unknown',\n      problem: problem?.title || 'Two Sum', // Ensure problem title is always defined\n      userProgress,\n      opponentProgress: userWon ? Math.max(0, userProgress - 5) : 100,\n      timeSpent: timeLeft > 0 ? (battleDuration - timeLeft) : battleDuration,\n      completedAt\n    };\n\n    localStorage.setItem(`battleResult_${battleId}`, JSON.stringify(result));\n\n    // Show result modal or navigate to results page\n    setTimeout(() => {\n      navigate(`/battle/${battleId}/results`);\n    }, 3000);\n  };\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    const message = {\n      id: Date.now(),\n      sender: 'You',\n      text: newMessage,\n      timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n    };\n\n    setChatMessages([...chatMessages, message]);\n    setNewMessage('');\n\n    // Simulate opponent response\n    setTimeout(() => {\n      const responses = [\n        \"I'm still working on this problem.\",\n        \"This is challenging!\",\n        \"How are you approaching this?\",\n        \"I think I'm getting close.\",\n        \"Good luck!\"\n      ];\n\n      const opponentMessage = {\n        id: Date.now() + 1,\n        sender: opponent?.name || 'Opponent',\n        text: responses[Math.floor(Math.random() * responses.length)],\n        timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n      };\n\n      setChatMessages(prev => [...prev, opponentMessage]);\n    }, 2000);\n  };\n\n  const toggleFullScreen = () => {\n    setShowFullScreen(!showFullScreen);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"battle-arena-container\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <div className=\"loading-text\">Loading battle arena...</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`battle-arena-container ${showFullScreen ? 'fullscreen' : ''}`}>\n      <div className=\"battle-header\">\n        <div className=\"battle-info\">\n          <h1>{battle?.title || '1v1 Coding Battle'}</h1>\n          <div className=\"battle-meta\">\n            <span className=\"difficulty\">{battle?.difficulty || 'Medium'}</span>\n            <span className=\"category\">{battle?.category || 'Algorithms'}</span>\n            <span className=\"timer\">Time Left: {formatTime(timeLeft)}</span>\n            {battle?.originalDuration && (\n              <span className=\"duration\">Original Duration: {battle.originalDuration} mins</span>\n            )}\n            {isFriendBattle && (\n              <span className=\"friend-battle-badge\">\n                <span className=\"friend-icon\">👥</span> Friend Battle\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"battle-actions\">\n          <button className=\"fullscreen-btn\" onClick={toggleFullScreen}>\n            {showFullScreen ? 'Exit Fullscreen' : 'Fullscreen'}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"battle-progress-container\">\n        <div className=\"player-progress\">\n          <div className=\"player-info\">\n            <span className=\"player-name\">You</span>\n            <span className=\"progress-percentage\">{Math.round(userProgress)}%</span>\n          </div>\n          <div className=\"progress-bar\">\n            <div className=\"progress-fill\" style={{ width: `${userProgress}%` }}></div>\n          </div>\n        </div>\n\n        <div className=\"vs-indicator\">VS</div>\n\n        <div className=\"player-progress opponent\">\n          <div className=\"player-info\">\n            <span className=\"player-name\">{opponent?.name || 'Opponent'}</span>\n            <span className=\"progress-percentage\">{Math.round(opponentProgress)}%</span>\n          </div>\n          <div className=\"progress-bar\">\n            <div className=\"progress-fill\" style={{ width: `${opponentProgress}%` }}></div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"battle-content\">\n        <div className=\"problem-section\">\n          <div className=\"problem-header\">\n            <h2>{problem?.title || 'Problem Title'}</h2>\n            <div className=\"problem-difficulty\">{problem?.difficulty || 'Medium'}</div>\n          </div>\n\n          <div className=\"problem-description\">\n            <p>{problem?.description}</p>\n\n            <div className=\"examples\">\n              <h3>Examples:</h3>\n              {problem?.examples.map((example, index) => (\n                <div key={index} className=\"example\">\n                  <div className=\"example-input\">\n                    <strong>Input:</strong> {example.input}\n                  </div>\n                  <div className=\"example-output\">\n                    <strong>Output:</strong> {example.output}\n                  </div>\n                  {example.explanation && (\n                    <div className=\"example-explanation\">\n                      <strong>Explanation:</strong> {example.explanation}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n\n            <div className=\"constraints\">\n              <h3>Constraints:</h3>\n              <ul>\n                {problem?.constraints.map((constraint, index) => (\n                  <li key={index}>{constraint}</li>\n                ))}\n              </ul>\n            </div>\n\n            {showHint && (\n              <div className=\"hints\">\n                <h3>Hints:</h3>\n                <ul>\n                  {problem?.hints.map((hint, index) => (\n                    <li key={index}>{hint}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            {!showHint && (\n              <button className=\"hint-btn\" onClick={() => setShowHint(true)}>\n                Show Hints\n              </button>\n            )}\n\n            {showSolution && (\n              <div className=\"solution\">\n                <h3>Solution:</h3>\n                <pre>{problem?.solution}</pre>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"code-section\">\n          <div className=\"code-header\">\n            <select\n              value={language}\n              onChange={(e) => setLanguage(e.target.value)}\n              className=\"language-select\"\n            >\n              <option value=\"javascript\">JavaScript</option>\n              <option value=\"python\">Python</option>\n              <option value=\"java\">Java</option>\n              <option value=\"cpp\">C++</option>\n            </select>\n\n            <div className=\"code-actions\">\n              <button\n                className=\"run-btn\"\n                onClick={runCode}\n                disabled={isRunning || isSubmitting}\n              >\n                {isRunning ? 'Running...' : 'Run Code'}\n              </button>\n              <button\n                className=\"submit-btn\"\n                onClick={submitSolution}\n                disabled={isRunning || isSubmitting}\n              >\n                {isSubmitting ? 'Submitting...' : 'Submit Solution'}\n              </button>\n            </div>\n          </div>\n\n          <div className=\"code-editor\">\n            <textarea\n              value={code}\n              onChange={(e) => setCode(e.target.value)}\n              className=\"code-textarea\"\n              spellCheck=\"false\"\n            />\n          </div>\n\n          <div className=\"test-results\">\n            <h3>Test Results:</h3>\n            {testResults.length > 0 ? (\n              <div className=\"results-list\">\n                {testResults.map((result, index) => (\n                  <div\n                    key={index}\n                    className={`result-item ${result.passed ? 'passed' : 'failed'}`}\n                  >\n                    <div className=\"result-header\">\n                      <span className=\"test-number\">Test {index + 1}</span>\n                      <span className=\"result-status\">\n                        {result.passed ? 'Passed' : 'Failed'}\n                      </span>\n                    </div>\n                    <div className=\"result-details\">\n                      <div className=\"result-input\">\n                        <strong>Input:</strong> {result.input}\n                      </div>\n                      <div className=\"result-expected\">\n                        <strong>Expected:</strong> {result.expectedOutput}\n                      </div>\n                      <div className=\"result-actual\">\n                        <strong>Your Output:</strong> {result.actualOutput}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"no-results\">\n                Run your code to see test results\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"chat-section\">\n          <div className=\"chat-header\">\n            <h3>Battle Chat</h3>\n            {isFriendBattle && (\n              <div className=\"friend-battle-chat-badge\">\n                <span className=\"friend-icon\">👥</span> Friend Battle Chat\n              </div>\n            )}\n          </div>\n\n          <div className=\"chat-messages\">\n            {chatMessages.length > 0 ? (\n              chatMessages.map(message => (\n                <div\n                  key={message.id}\n                  className={`chat-message ${message.sender === 'You' ? 'user' : 'opponent'}`}\n                >\n                  <div className=\"message-header\">\n                    <span className=\"message-sender\">{message.sender}</span>\n                    <span className=\"message-time\">{message.timestamp}</span>\n                  </div>\n                  <div className=\"message-text\">{message.text}</div>\n                </div>\n              ))\n            ) : (\n              <div className=\"no-messages\">\n                {isFriendBattle\n                  ? \"Chat with your friend while you solve the problem together!\"\n                  : \"No messages yet. Start the conversation!\"}\n              </div>\n            )}\n          </div>\n\n          <form className=\"chat-input\" onSubmit={sendMessage}>\n            <input\n              type=\"text\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              placeholder=\"Type a message...\"\n              disabled={battleEnded}\n            />\n            <button type=\"submit\" disabled={!newMessage.trim() || battleEnded}>\n              Send\n            </button>\n          </form>\n        </div>\n      </div>\n\n      {battleEnded && (\n        <div className=\"battle-ended-overlay\">\n          <div className=\"battle-result\">\n            <h2>{userProgress >= opponentProgress ? 'You Won!' : 'You Lost!'}</h2>\n            <p>Redirecting to results page...</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CodingBattleArena;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}