{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\pages\\\\CodingBattleArena.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ScrollReveal from '../components/ScrollReveal';\nimport './CodingBattleArena.css';\nimport '../styles/animations.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodingBattleArena() {\n  _s();\n  const {\n    battleId\n  } = useParams();\n  const navigate = useNavigate();\n  const [battle, setBattle] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('javascript');\n  const [problem, setProblem] = useState(null);\n  const [testCases, setTestCases] = useState([]);\n  const [testResults, setTestResults] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showHint, setShowHint] = useState(false);\n  const [showSolution, setShowSolution] = useState(false);\n  const [battleEnded, setBattleEnded] = useState(false);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [userProgress, setUserProgress] = useState(0);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [showFullScreen, setShowFullScreen] = useState(false);\n  const [isFriendBattle, setIsFriendBattle] = useState(false);\n  useEffect(() => {\n    // Load battle data from localStorage\n    const battleData = localStorage.getItem('currentBattle');\n    const opponentData = localStorage.getItem('currentOpponent');\n    if (battleData) {\n      const parsedBattle = JSON.parse(battleData);\n      setBattle(parsedBattle);\n\n      // Check if this is a friend battle\n      if (parsedBattle.isFriendBattle) {\n        setIsFriendBattle(true);\n      }\n\n      // Check if the battle has started flag is set\n      if (parsedBattle.battleStarted) {\n        console.log(\"Battle has started flag is set\");\n      } else {\n        console.log(\"Battle has not started yet\");\n        // Set the flag to indicate the battle has started\n        parsedBattle.battleStarted = true;\n        localStorage.setItem('currentBattle', JSON.stringify(parsedBattle));\n      }\n\n      // Set time left based on difficulty or use the battle's duration if available\n      let duration = parsedBattle.duration || 30; // Default 30 minutes\n      if (!parsedBattle.duration) {\n        // If no duration is specified, set based on difficulty\n        if (parsedBattle.difficulty === 'easy') duration = 20;\n        if (parsedBattle.difficulty === 'hard') duration = 45;\n      }\n      setTimeLeft(duration * 60); // Convert to seconds\n    } else {\n      // If no battle data, create a default battle\n      const defaultBattle = {\n        id: battleId,\n        title: \"1v1 Coding Battle\",\n        difficulty: 'Medium',\n        category: 'Algorithms',\n        startTime: Date.now(),\n        duration: 30,\n        battleStarted: true // Set the flag to indicate the battle has started\n      };\n      setBattle(defaultBattle);\n      setTimeLeft(30 * 60); // 30 minutes in seconds\n\n      // Save to localStorage for consistency\n      localStorage.setItem('currentBattle', JSON.stringify(defaultBattle));\n    }\n    if (opponentData) {\n      setOpponent(JSON.parse(opponentData));\n    } else {\n      // If no opponent data, create a default opponent\n      const defaultOpponent = {\n        name: \"Alex Chen\",\n        rating: 1842,\n        winRate: \"68%\",\n        preferredLanguage: \"Python\",\n        skillLevel: \"92% match for your skill level\",\n        avatar: \"https://randomuser.me/api/portraits/men/32.jpg\"\n      };\n      setOpponent(defaultOpponent);\n\n      // Save to localStorage for consistency\n      localStorage.setItem('currentOpponent', JSON.stringify(defaultOpponent));\n    }\n\n    // Load problem based on difficulty and category\n    loadProblem();\n    setLoading(false);\n  }, [battleId]);\n\n  // Timer countdown\n  useEffect(() => {\n    if (timeLeft > 0 && !battleEnded) {\n      const timer = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0 && !battleEnded) {\n      endBattle(false, true); // Pass forceEnd=true when time runs out\n    }\n  }, [timeLeft, battleEnded]);\n\n  // Simulate opponent progress\n  useEffect(() => {\n    if (!battleEnded && opponent) {\n      // Start with a delay to give the user time to read the problem\n      const initialDelay = setTimeout(() => {\n        // Create a more realistic opponent progress simulation\n        const interval = setInterval(() => {\n          setOpponentProgress(prev => {\n            var _battle$difficulty, _battle$difficulty2;\n            // Make progress increments smaller and more realistic\n            // The increment is based on difficulty and varies slightly\n            let baseIncrement;\n            if ((battle === null || battle === void 0 ? void 0 : (_battle$difficulty = battle.difficulty) === null || _battle$difficulty === void 0 ? void 0 : _battle$difficulty.toLowerCase()) === 'easy') {\n              baseIncrement = 0.8; // Faster progress on easy problems\n            } else if ((battle === null || battle === void 0 ? void 0 : (_battle$difficulty2 = battle.difficulty) === null || _battle$difficulty2 === void 0 ? void 0 : _battle$difficulty2.toLowerCase()) === 'hard') {\n              baseIncrement = 0.3; // Slower progress on hard problems\n            } else {\n              baseIncrement = 0.5; // Medium difficulty default\n            }\n\n            // Add some randomness to the increment\n            const randomFactor = Math.random() * 0.5 + 0.75; // Between 0.75 and 1.25\n            const increment = baseIncrement * randomFactor;\n\n            // Calculate new progress\n            const newProgress = prev + increment;\n\n            // Simulate the opponent getting stuck sometimes\n            const stuckProbability = 0.05; // 5% chance of getting stuck each update\n            if (Math.random() < stuckProbability && prev > 30) {\n              // If stuck, don't increase progress this time\n              return prev;\n            }\n\n            // If opponent reaches 100%, they've finished\n            if (newProgress >= 100) {\n              clearInterval(interval);\n              handleOpponentFinished();\n              return 100;\n            }\n            return newProgress;\n          });\n        }, 8000); // Slower updates (every 8 seconds)\n\n        return () => clearInterval(interval);\n      }, 15000); // 15 second initial delay\n\n      return () => clearTimeout(initialDelay);\n    }\n  }, [opponent, battleEnded, battle === null || battle === void 0 ? void 0 : battle.difficulty]);\n  const loadProblem = () => {\n    // In a real app, this would fetch from an API\n    // For now, we'll use a mock problem\n    const mockProblem = {\n      title: \"Two Sum\",\n      description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice.\",\n      examples: [{\n        input: \"nums = [2,7,11,15], target = 9\",\n        output: \"[0,1]\",\n        explanation: \"Because nums[0] + nums[1] == 9, we return [0, 1].\"\n      }, {\n        input: \"nums = [3,2,4], target = 6\",\n        output: \"[1,2]\",\n        explanation: \"Because nums[1] + nums[2] == 6, we return [1, 2].\"\n      }],\n      constraints: [\"2 <= nums.length <= 10^4\", \"-10^9 <= nums[i] <= 10^9\", \"-10^9 <= target <= 10^9\", \"Only one valid answer exists.\"],\n      difficulty: \"Easy\",\n      hints: [\"Try using a hash map to store the values you've seen so far.\", \"For each element, check if target - current element exists in the hash map.\"],\n      solution: `function twoSum(nums, target) {\n  const map = new Map();\n\n  for (let i = 0; i < nums.length; i++) {\n    const complement = target - nums[i];\n\n    if (map.has(complement)) {\n      return [map.get(complement), i];\n    }\n\n    map.set(nums[i], i);\n  }\n\n  return null;\n}`\n    };\n    setProblem(mockProblem);\n\n    // Set up test cases\n    setTestCases([{\n      input: \"twoSum([2,7,11,15], 9)\",\n      expectedOutput: \"[0,1]\"\n    }, {\n      input: \"twoSum([3,2,4], 6)\",\n      expectedOutput: \"[1,2]\"\n    }, {\n      input: \"twoSum([3,3], 6)\",\n      expectedOutput: \"[0,1]\"\n    }]);\n\n    // Set initial code template\n    setCode(`function twoSum(nums, target) {\n  // Your solution here\n}`);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const runCode = () => {\n    setIsRunning(true);\n\n    // Simulate code execution\n    setTimeout(() => {\n      // In a real app, this would actually execute the code\n      // For now, we'll simulate results\n\n      // Generate more realistic test results with some randomness\n      const results = testCases.map(test => {\n        // 80% chance of passing a test when running code\n        const passed = Math.random() < 0.8;\n        return {\n          input: test.input,\n          expectedOutput: test.expectedOutput,\n          actualOutput: passed ? test.expectedOutput : \"[1,0]\",\n          // Different output if failed\n          passed: passed\n        };\n      });\n      setTestResults(results);\n      setIsRunning(false);\n\n      // Update progress\n      const passedTests = results.filter(r => r.passed).length;\n      const progress = passedTests / testCases.length * 100;\n      setUserProgress(progress);\n\n      // Don't automatically end the battle when tests pass\n      // Let the user explicitly submit their solution\n    }, 1500);\n  };\n  const submitSolution = () => {\n    setIsSubmitting(true);\n\n    // Simulate submission\n    setTimeout(() => {\n      // Generate test results with high chance of success for submission\n      const results = testCases.map(test => {\n        // 90% chance of passing a test when submitting\n        const passed = Math.random() < 0.9;\n        return {\n          input: test.input,\n          expectedOutput: test.expectedOutput,\n          actualOutput: passed ? test.expectedOutput : \"[1,0]\",\n          // Different output if failed\n          passed: passed\n        };\n      });\n      setTestResults(results);\n\n      // Update progress\n      const passedTests = results.filter(r => r.passed).length;\n      const progress = passedTests / testCases.length * 100;\n      setUserProgress(progress);\n\n      // Check if all tests passed\n      if (passedTests === testCases.length) {\n        // Show success message\n        const successMessage = document.createElement('div');\n        successMessage.className = 'submission-success';\n        successMessage.innerHTML = '<div class=\"success-icon\">✓</div><div>All tests passed! Great job!</div>';\n        document.querySelector('.code-section').appendChild(successMessage);\n\n        // Remove the message after 3 seconds\n        setTimeout(() => {\n          if (document.querySelector('.submission-success')) {\n            document.querySelector('.submission-success').remove();\n          }\n        }, 3000);\n\n        // Add a \"Complete Battle\" button if all tests pass\n        if (!document.querySelector('.complete-battle-btn') && !battleEnded) {\n          const completeBattleBtn = document.createElement('button');\n          completeBattleBtn.className = 'complete-battle-btn';\n          completeBattleBtn.innerHTML = 'Complete Battle';\n          completeBattleBtn.onclick = () => endBattle(true, true); // Pass forceEnd=true\n\n          // Add the button to the code actions section\n          const codeActions = document.querySelector('.code-actions');\n          if (codeActions) {\n            codeActions.appendChild(completeBattleBtn);\n          }\n        }\n      }\n      setIsSubmitting(false);\n    }, 2000);\n  };\n  const handleOpponentFinished = () => {\n    if (!battleEnded) {\n      // Opponent finished first\n      endBattle(false, true); // Pass forceEnd=true\n    }\n  };\n  const endBattle = (userWon = false, forceEnd = false) => {\n    // Check if battle is already ended to prevent multiple calls\n    if (battleEnded) {\n      return;\n    }\n\n    // Get the current time since battle started (in seconds)\n    const battleStartTime = (battle === null || battle === void 0 ? void 0 : battle.startTime) || Date.now();\n    const timeElapsed = (Date.now() - battleStartTime) / 1000;\n\n    // Only allow battle to end if:\n    // 1. At least 30 seconds have passed since the battle started, OR\n    // 2. The forceEnd parameter is true (for manual completion), OR\n    // 3. The time has run out\n    if (timeElapsed < 30 && !forceEnd && timeLeft > 0) {\n      console.log(\"Battle cannot end yet - minimum time not elapsed\");\n      return;\n    }\n\n    // Only allow user to win if they have made some progress\n    if (userWon && userProgress <= 0 && !forceEnd) {\n      console.log(\"User cannot win with 0% progress\");\n      return;\n    }\n    setBattleEnded(true);\n\n    // Calculate the battle duration in seconds\n    const battleDuration = battle !== null && battle !== void 0 && battle.duration ? battle.duration * 60 : 30 * 60; // Default to 30 minutes\n\n    // Get current date/time for completion timestamp\n    const completedAt = new Date().toISOString();\n\n    // Calculate a realistic opponent progress based on who won\n    let finalOpponentProgress;\n    if (userWon) {\n      // If user won, opponent progress should be less than user's\n      finalOpponentProgress = Math.min(opponentProgress, userProgress - 5);\n      if (finalOpponentProgress < 0) finalOpponentProgress = Math.floor(Math.random() * 70); // Random value if negative\n    } else {\n      // If opponent won, they should have 100% progress\n      finalOpponentProgress = 100;\n    }\n\n    // Save result to localStorage\n    const result = {\n      battleId,\n      battleTitle: (battle === null || battle === void 0 ? void 0 : battle.title) || '1v1 Coding Battle',\n      userWon,\n      opponentName: (opponent === null || opponent === void 0 ? void 0 : opponent.name) || 'Unknown',\n      problem: (problem === null || problem === void 0 ? void 0 : problem.title) || 'Two Sum',\n      // Ensure problem title is always defined\n      userProgress,\n      opponentProgress: finalOpponentProgress,\n      timeSpent: timeLeft > 0 ? battleDuration - timeLeft : battleDuration,\n      completedAt,\n      battleCompleted: true // Flag to indicate the battle is completed\n    };\n    localStorage.setItem(`battleResult_${battleId}`, JSON.stringify(result));\n\n    // Update the battle status in localStorage\n    if (battle) {\n      const updatedBattle = {\n        ...battle,\n        status: 'completed',\n        endTime: completedAt\n      };\n      localStorage.setItem('currentBattle', JSON.stringify(updatedBattle));\n    }\n\n    // Show result modal or navigate to results page\n    setTimeout(() => {\n      navigate(`/battle/${battleId}/results`);\n    }, 5000); // Increased to 5 seconds to give users time to see the result\n  };\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    const message = {\n      id: Date.now(),\n      sender: 'You',\n      text: newMessage,\n      timestamp: new Date().toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    };\n    setChatMessages([...chatMessages, message]);\n    setNewMessage('');\n\n    // Simulate opponent response\n    setTimeout(() => {\n      const responses = [\"I'm still working on this problem.\", \"This is challenging!\", \"How are you approaching this?\", \"I think I'm getting close.\", \"Good luck!\"];\n      const opponentMessage = {\n        id: Date.now() + 1,\n        sender: (opponent === null || opponent === void 0 ? void 0 : opponent.name) || 'Opponent',\n        text: responses[Math.floor(Math.random() * responses.length)],\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n      setChatMessages(prev => [...prev, opponentMessage]);\n    }, 2000);\n  };\n  const toggleFullScreen = () => {\n    setShowFullScreen(!showFullScreen);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-arena-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-text\",\n          children: \"Loading battle arena...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `battle-arena-container ${showFullScreen ? 'fullscreen' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: (battle === null || battle === void 0 ? void 0 : battle.title) || '1v1 Coding Battle'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"difficulty\",\n            children: (battle === null || battle === void 0 ? void 0 : battle.difficulty) || 'Medium'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"category\",\n            children: (battle === null || battle === void 0 ? void 0 : battle.category) || 'Algorithms'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timer\",\n            children: [\"Time Left: \", formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), (battle === null || battle === void 0 ? void 0 : battle.originalDuration) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"duration\",\n            children: [\"Original Duration: \", battle.originalDuration, \" mins\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), isFriendBattle && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"friend-battle-badge\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"friend-icon\",\n              children: \"\\uD83D\\uDC65\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), \" Friend Battle\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fullscreen-btn\",\n          onClick: toggleFullScreen,\n          children: showFullScreen ? 'Exit Fullscreen' : 'Fullscreen'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-name\",\n            children: \"You\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"progress-percentage\",\n            children: [Math.round(userProgress), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${userProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vs-indicator\",\n        children: \"VS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-progress opponent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-name\",\n            children: (opponent === null || opponent === void 0 ? void 0 : opponent.name) || 'Opponent'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"progress-percentage\",\n            children: [Math.round(opponentProgress), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${opponentProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: (problem === null || problem === void 0 ? void 0 : problem.title) || 'Problem Title'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-difficulty\",\n            children: (problem === null || problem === void 0 ? void 0 : problem.difficulty) || 'Medium'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-description\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: problem === null || problem === void 0 ? void 0 : problem.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"examples\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Examples:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this), problem === null || problem === void 0 ? void 0 : problem.examples.map((example, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"example-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Input:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 21\n                }, this), \" \", example.input]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"example-output\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Output:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 21\n                }, this), \" \", example.output]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 19\n              }, this), example.explanation && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"example-explanation\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Explanation:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 23\n                }, this), \" \", example.explanation]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"constraints\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Constraints:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: problem === null || problem === void 0 ? void 0 : problem.constraints.map((constraint, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: constraint\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hints\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Hints:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: problem === null || problem === void 0 ? void 0 : problem.hints.map((hint, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: hint\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), !showHint && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: () => setShowHint(true),\n            children: \"Show Hints\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this), showSolution && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"solution\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Solution:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: problem === null || problem === void 0 ? void 0 : problem.solution\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: language,\n            onChange: e => setLanguage(e.target.value),\n            className: \"language-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"javascript\",\n              children: \"JavaScript\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"python\",\n              children: \"Python\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"java\",\n              children: \"Java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cpp\",\n              children: \"C++\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"run-btn\",\n              onClick: runCode,\n              disabled: isRunning || isSubmitting,\n              children: isRunning ? 'Running...' : 'Run Code'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-btn\",\n              onClick: submitSolution,\n              disabled: isRunning || isSubmitting,\n              children: isSubmitting ? 'Submitting...' : 'Submit Solution'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-editor\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: code,\n            onChange: e => setCode(e.target.value),\n            className: \"code-textarea\",\n            spellCheck: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Test Results:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this), testResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-list\",\n            children: testResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `result-item ${result.passed ? 'passed' : 'failed'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"test-number\",\n                  children: [\"Test \", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"result-status\",\n                  children: result.passed ? 'Passed' : 'Failed'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Input:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 25\n                  }, this), \" \", result.input]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-expected\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Expected:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 25\n                  }, this), \" \", result.expectedOutput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-actual\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Your Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 25\n                  }, this), \" \", result.actualOutput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-results\",\n            children: \"Run your code to see test results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Battle Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this), isFriendBattle && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"friend-battle-chat-badge\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"friend-icon\",\n              children: \"\\uD83D\\uDC65\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this), \" Friend Battle Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: chatMessages.length > 0 ? chatMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${message.sender === 'You' ? 'user' : 'opponent'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-sender\",\n                children: message.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: message.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 19\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-messages\",\n            children: isFriendBattle ? \"Chat with your friend while you solve the problem together!\" : \"No messages yet. Start the conversation!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chat-input\",\n          onSubmit: sendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            disabled: battleEnded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !newMessage.trim() || battleEnded,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this), battleEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-ended-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-icon\",\n          children: userProgress >= opponentProgress ? '🏆' : '🔄'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: userProgress >= opponentProgress ? 'You Won!' : 'You Lost!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Your Progress:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [Math.round(userProgress), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Opponent Progress:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [Math.round(opponentProgress), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result-message\",\n          children: userProgress >= opponentProgress ? \"Congratulations! You've successfully completed the challenge faster than your opponent.\" : \"Good effort! Your opponent completed the challenge first, but you can try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-dots\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"redirect-message\",\n          children: \"Redirecting to results page...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 458,\n    columnNumber: 5\n  }, this);\n}\n_s(CodingBattleArena, \"deOOZfF2IONdPrZG6fgedZVNRXY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CodingBattleArena;\nexport default CodingBattleArena;\nvar _c;\n$RefreshReg$(_c, \"CodingBattleArena\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","ScrollReveal","jsxDEV","_jsxDEV","CodingBattleArena","_s","battleId","navigate","battle","setBattle","opponent","setOpponent","loading","setLoading","timeLeft","setTimeLeft","code","setCode","language","setLanguage","problem","setProblem","testCases","setTestCases","testResults","setTestResults","isRunning","setIsRunning","isSubmitting","setIsSubmitting","showHint","setShowHint","showSolution","setShowSolution","battleEnded","setBattleEnded","opponentProgress","setOpponentProgress","userProgress","setUserProgress","chatMessages","setChatMessages","newMessage","setNewMessage","showFullScreen","setShowFullScreen","isFriendBattle","setIsFriendBattle","battleData","localStorage","getItem","opponentData","parsedBattle","JSON","parse","battleStarted","console","log","setItem","stringify","duration","difficulty","defaultBattle","id","title","category","startTime","Date","now","defaultOpponent","name","rating","winRate","preferredLanguage","skillLevel","avatar","loadProblem","timer","setTimeout","clearTimeout","endBattle","initialDelay","interval","setInterval","prev","_battle$difficulty","_battle$difficulty2","baseIncrement","toLowerCase","randomFactor","Math","random","increment","newProgress","stuckProbability","clearInterval","handleOpponentFinished","mockProblem","description","examples","input","output","explanation","constraints","hints","solution","expectedOutput","formatTime","seconds","mins","floor","secs","toString","padStart","runCode","results","map","test","passed","actualOutput","passedTests","filter","r","length","progress","submitSolution","successMessage","document","createElement","className","innerHTML","querySelector","appendChild","remove","completeBattleBtn","onclick","codeActions","userWon","forceEnd","battleStartTime","timeElapsed","battleDuration","completedAt","toISOString","finalOpponentProgress","min","result","battleTitle","opponentName","timeSpent","battleCompleted","updatedBattle","status","endTime","sendMessage","e","preventDefault","trim","message","sender","text","timestamp","toLocaleTimeString","hour","minute","responses","opponentMessage","toggleFullScreen","children","fileName","_jsxFileName","lineNumber","columnNumber","originalDuration","onClick","round","style","width","example","index","constraint","hint","value","onChange","target","disabled","spellCheck","onSubmit","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/pages/CodingBattleArena.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ScrollReveal from '../components/ScrollReveal';\nimport './CodingBattleArena.css';\nimport '../styles/animations.css';\n\nfunction CodingBattleArena() {\n  const { battleId } = useParams();\n  const navigate = useNavigate();\n  const [battle, setBattle] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('javascript');\n  const [problem, setProblem] = useState(null);\n  const [testCases, setTestCases] = useState([]);\n  const [testResults, setTestResults] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showHint, setShowHint] = useState(false);\n  const [showSolution, setShowSolution] = useState(false);\n  const [battleEnded, setBattleEnded] = useState(false);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [userProgress, setUserProgress] = useState(0);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [showFullScreen, setShowFullScreen] = useState(false);\n  const [isFriendBattle, setIsFriendBattle] = useState(false);\n\n  useEffect(() => {\n    // Load battle data from localStorage\n    const battleData = localStorage.getItem('currentBattle');\n    const opponentData = localStorage.getItem('currentOpponent');\n\n    if (battleData) {\n      const parsedBattle = JSON.parse(battleData);\n      setBattle(parsedBattle);\n\n      // Check if this is a friend battle\n      if (parsedBattle.isFriendBattle) {\n        setIsFriendBattle(true);\n      }\n\n      // Check if the battle has started flag is set\n      if (parsedBattle.battleStarted) {\n        console.log(\"Battle has started flag is set\");\n      } else {\n        console.log(\"Battle has not started yet\");\n        // Set the flag to indicate the battle has started\n        parsedBattle.battleStarted = true;\n        localStorage.setItem('currentBattle', JSON.stringify(parsedBattle));\n      }\n\n      // Set time left based on difficulty or use the battle's duration if available\n      let duration = parsedBattle.duration || 30; // Default 30 minutes\n      if (!parsedBattle.duration) {\n        // If no duration is specified, set based on difficulty\n        if (parsedBattle.difficulty === 'easy') duration = 20;\n        if (parsedBattle.difficulty === 'hard') duration = 45;\n      }\n\n      setTimeLeft(duration * 60); // Convert to seconds\n    } else {\n      // If no battle data, create a default battle\n      const defaultBattle = {\n        id: battleId,\n        title: \"1v1 Coding Battle\",\n        difficulty: 'Medium',\n        category: 'Algorithms',\n        startTime: Date.now(),\n        duration: 30,\n        battleStarted: true // Set the flag to indicate the battle has started\n      };\n      setBattle(defaultBattle);\n      setTimeLeft(30 * 60); // 30 minutes in seconds\n\n      // Save to localStorage for consistency\n      localStorage.setItem('currentBattle', JSON.stringify(defaultBattle));\n    }\n\n    if (opponentData) {\n      setOpponent(JSON.parse(opponentData));\n    } else {\n      // If no opponent data, create a default opponent\n      const defaultOpponent = {\n        name: \"Alex Chen\",\n        rating: 1842,\n        winRate: \"68%\",\n        preferredLanguage: \"Python\",\n        skillLevel: \"92% match for your skill level\",\n        avatar: \"https://randomuser.me/api/portraits/men/32.jpg\"\n      };\n      setOpponent(defaultOpponent);\n\n      // Save to localStorage for consistency\n      localStorage.setItem('currentOpponent', JSON.stringify(defaultOpponent));\n    }\n\n    // Load problem based on difficulty and category\n    loadProblem();\n\n    setLoading(false);\n  }, [battleId]);\n\n  // Timer countdown\n  useEffect(() => {\n    if (timeLeft > 0 && !battleEnded) {\n      const timer = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0 && !battleEnded) {\n      endBattle(false, true); // Pass forceEnd=true when time runs out\n    }\n  }, [timeLeft, battleEnded]);\n\n  // Simulate opponent progress\n  useEffect(() => {\n    if (!battleEnded && opponent) {\n      // Start with a delay to give the user time to read the problem\n      const initialDelay = setTimeout(() => {\n        // Create a more realistic opponent progress simulation\n        const interval = setInterval(() => {\n          setOpponentProgress(prev => {\n            // Make progress increments smaller and more realistic\n            // The increment is based on difficulty and varies slightly\n            let baseIncrement;\n            if (battle?.difficulty?.toLowerCase() === 'easy') {\n              baseIncrement = 0.8; // Faster progress on easy problems\n            } else if (battle?.difficulty?.toLowerCase() === 'hard') {\n              baseIncrement = 0.3; // Slower progress on hard problems\n            } else {\n              baseIncrement = 0.5; // Medium difficulty default\n            }\n\n            // Add some randomness to the increment\n            const randomFactor = Math.random() * 0.5 + 0.75; // Between 0.75 and 1.25\n            const increment = baseIncrement * randomFactor;\n\n            // Calculate new progress\n            const newProgress = prev + increment;\n\n            // Simulate the opponent getting stuck sometimes\n            const stuckProbability = 0.05; // 5% chance of getting stuck each update\n            if (Math.random() < stuckProbability && prev > 30) {\n              // If stuck, don't increase progress this time\n              return prev;\n            }\n\n            // If opponent reaches 100%, they've finished\n            if (newProgress >= 100) {\n              clearInterval(interval);\n              handleOpponentFinished();\n              return 100;\n            }\n\n            return newProgress;\n          });\n        }, 8000); // Slower updates (every 8 seconds)\n\n        return () => clearInterval(interval);\n      }, 15000); // 15 second initial delay\n\n      return () => clearTimeout(initialDelay);\n    }\n  }, [opponent, battleEnded, battle?.difficulty]);\n\n  const loadProblem = () => {\n    // In a real app, this would fetch from an API\n    // For now, we'll use a mock problem\n    const mockProblem = {\n      title: \"Two Sum\",\n      description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice.\",\n      examples: [\n        {\n          input: \"nums = [2,7,11,15], target = 9\",\n          output: \"[0,1]\",\n          explanation: \"Because nums[0] + nums[1] == 9, we return [0, 1].\"\n        },\n        {\n          input: \"nums = [3,2,4], target = 6\",\n          output: \"[1,2]\",\n          explanation: \"Because nums[1] + nums[2] == 6, we return [1, 2].\"\n        }\n      ],\n      constraints: [\n        \"2 <= nums.length <= 10^4\",\n        \"-10^9 <= nums[i] <= 10^9\",\n        \"-10^9 <= target <= 10^9\",\n        \"Only one valid answer exists.\"\n      ],\n      difficulty: \"Easy\",\n      hints: [\n        \"Try using a hash map to store the values you've seen so far.\",\n        \"For each element, check if target - current element exists in the hash map.\"\n      ],\n      solution: `function twoSum(nums, target) {\n  const map = new Map();\n\n  for (let i = 0; i < nums.length; i++) {\n    const complement = target - nums[i];\n\n    if (map.has(complement)) {\n      return [map.get(complement), i];\n    }\n\n    map.set(nums[i], i);\n  }\n\n  return null;\n}`\n    };\n\n    setProblem(mockProblem);\n\n    // Set up test cases\n    setTestCases([\n      { input: \"twoSum([2,7,11,15], 9)\", expectedOutput: \"[0,1]\" },\n      { input: \"twoSum([3,2,4], 6)\", expectedOutput: \"[1,2]\" },\n      { input: \"twoSum([3,3], 6)\", expectedOutput: \"[0,1]\" }\n    ]);\n\n    // Set initial code template\n    setCode(`function twoSum(nums, target) {\n  // Your solution here\n}`);\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const runCode = () => {\n    setIsRunning(true);\n\n    // Simulate code execution\n    setTimeout(() => {\n      // In a real app, this would actually execute the code\n      // For now, we'll simulate results\n\n      // Generate more realistic test results with some randomness\n      const results = testCases.map(test => {\n        // 80% chance of passing a test when running code\n        const passed = Math.random() < 0.8;\n        return {\n          input: test.input,\n          expectedOutput: test.expectedOutput,\n          actualOutput: passed ? test.expectedOutput : \"[1,0]\", // Different output if failed\n          passed: passed\n        };\n      });\n\n      setTestResults(results);\n      setIsRunning(false);\n\n      // Update progress\n      const passedTests = results.filter(r => r.passed).length;\n      const progress = (passedTests / testCases.length) * 100;\n      setUserProgress(progress);\n\n      // Don't automatically end the battle when tests pass\n      // Let the user explicitly submit their solution\n    }, 1500);\n  };\n\n  const submitSolution = () => {\n    setIsSubmitting(true);\n\n    // Simulate submission\n    setTimeout(() => {\n      // Generate test results with high chance of success for submission\n      const results = testCases.map(test => {\n        // 90% chance of passing a test when submitting\n        const passed = Math.random() < 0.9;\n        return {\n          input: test.input,\n          expectedOutput: test.expectedOutput,\n          actualOutput: passed ? test.expectedOutput : \"[1,0]\", // Different output if failed\n          passed: passed\n        };\n      });\n\n      setTestResults(results);\n\n      // Update progress\n      const passedTests = results.filter(r => r.passed).length;\n      const progress = (passedTests / testCases.length) * 100;\n      setUserProgress(progress);\n\n      // Check if all tests passed\n      if (passedTests === testCases.length) {\n        // Show success message\n        const successMessage = document.createElement('div');\n        successMessage.className = 'submission-success';\n        successMessage.innerHTML = '<div class=\"success-icon\">✓</div><div>All tests passed! Great job!</div>';\n        document.querySelector('.code-section').appendChild(successMessage);\n\n        // Remove the message after 3 seconds\n        setTimeout(() => {\n          if (document.querySelector('.submission-success')) {\n            document.querySelector('.submission-success').remove();\n          }\n        }, 3000);\n\n        // Add a \"Complete Battle\" button if all tests pass\n        if (!document.querySelector('.complete-battle-btn') && !battleEnded) {\n          const completeBattleBtn = document.createElement('button');\n          completeBattleBtn.className = 'complete-battle-btn';\n          completeBattleBtn.innerHTML = 'Complete Battle';\n          completeBattleBtn.onclick = () => endBattle(true, true); // Pass forceEnd=true\n\n          // Add the button to the code actions section\n          const codeActions = document.querySelector('.code-actions');\n          if (codeActions) {\n            codeActions.appendChild(completeBattleBtn);\n          }\n        }\n      }\n\n      setIsSubmitting(false);\n    }, 2000);\n  };\n\n  const handleOpponentFinished = () => {\n    if (!battleEnded) {\n      // Opponent finished first\n      endBattle(false, true); // Pass forceEnd=true\n    }\n  };\n\n  const endBattle = (userWon = false, forceEnd = false) => {\n    // Check if battle is already ended to prevent multiple calls\n    if (battleEnded) {\n      return;\n    }\n\n    // Get the current time since battle started (in seconds)\n    const battleStartTime = battle?.startTime || Date.now();\n    const timeElapsed = (Date.now() - battleStartTime) / 1000;\n\n    // Only allow battle to end if:\n    // 1. At least 30 seconds have passed since the battle started, OR\n    // 2. The forceEnd parameter is true (for manual completion), OR\n    // 3. The time has run out\n    if (timeElapsed < 30 && !forceEnd && timeLeft > 0) {\n      console.log(\"Battle cannot end yet - minimum time not elapsed\");\n      return;\n    }\n\n    // Only allow user to win if they have made some progress\n    if (userWon && userProgress <= 0 && !forceEnd) {\n      console.log(\"User cannot win with 0% progress\");\n      return;\n    }\n\n    setBattleEnded(true);\n\n    // Calculate the battle duration in seconds\n    const battleDuration = battle?.duration ? battle.duration * 60 : 30 * 60; // Default to 30 minutes\n\n    // Get current date/time for completion timestamp\n    const completedAt = new Date().toISOString();\n\n    // Calculate a realistic opponent progress based on who won\n    let finalOpponentProgress;\n    if (userWon) {\n      // If user won, opponent progress should be less than user's\n      finalOpponentProgress = Math.min(opponentProgress, userProgress - 5);\n      if (finalOpponentProgress < 0) finalOpponentProgress = Math.floor(Math.random() * 70); // Random value if negative\n    } else {\n      // If opponent won, they should have 100% progress\n      finalOpponentProgress = 100;\n    }\n\n    // Save result to localStorage\n    const result = {\n      battleId,\n      battleTitle: battle?.title || '1v1 Coding Battle',\n      userWon,\n      opponentName: opponent?.name || 'Unknown',\n      problem: problem?.title || 'Two Sum', // Ensure problem title is always defined\n      userProgress,\n      opponentProgress: finalOpponentProgress,\n      timeSpent: timeLeft > 0 ? (battleDuration - timeLeft) : battleDuration,\n      completedAt,\n      battleCompleted: true // Flag to indicate the battle is completed\n    };\n\n    localStorage.setItem(`battleResult_${battleId}`, JSON.stringify(result));\n\n    // Update the battle status in localStorage\n    if (battle) {\n      const updatedBattle = { ...battle, status: 'completed', endTime: completedAt };\n      localStorage.setItem('currentBattle', JSON.stringify(updatedBattle));\n    }\n\n    // Show result modal or navigate to results page\n    setTimeout(() => {\n      navigate(`/battle/${battleId}/results`);\n    }, 5000); // Increased to 5 seconds to give users time to see the result\n  };\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    const message = {\n      id: Date.now(),\n      sender: 'You',\n      text: newMessage,\n      timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n    };\n\n    setChatMessages([...chatMessages, message]);\n    setNewMessage('');\n\n    // Simulate opponent response\n    setTimeout(() => {\n      const responses = [\n        \"I'm still working on this problem.\",\n        \"This is challenging!\",\n        \"How are you approaching this?\",\n        \"I think I'm getting close.\",\n        \"Good luck!\"\n      ];\n\n      const opponentMessage = {\n        id: Date.now() + 1,\n        sender: opponent?.name || 'Opponent',\n        text: responses[Math.floor(Math.random() * responses.length)],\n        timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n      };\n\n      setChatMessages(prev => [...prev, opponentMessage]);\n    }, 2000);\n  };\n\n  const toggleFullScreen = () => {\n    setShowFullScreen(!showFullScreen);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"battle-arena-container\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <div className=\"loading-text\">Loading battle arena...</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`battle-arena-container ${showFullScreen ? 'fullscreen' : ''}`}>\n      <div className=\"battle-header\">\n        <div className=\"battle-info\">\n          <h1>{battle?.title || '1v1 Coding Battle'}</h1>\n          <div className=\"battle-meta\">\n            <span className=\"difficulty\">{battle?.difficulty || 'Medium'}</span>\n            <span className=\"category\">{battle?.category || 'Algorithms'}</span>\n            <span className=\"timer\">Time Left: {formatTime(timeLeft)}</span>\n            {battle?.originalDuration && (\n              <span className=\"duration\">Original Duration: {battle.originalDuration} mins</span>\n            )}\n            {isFriendBattle && (\n              <span className=\"friend-battle-badge\">\n                <span className=\"friend-icon\">👥</span> Friend Battle\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"battle-actions\">\n          <button className=\"fullscreen-btn\" onClick={toggleFullScreen}>\n            {showFullScreen ? 'Exit Fullscreen' : 'Fullscreen'}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"battle-progress-container\">\n        <div className=\"player-progress\">\n          <div className=\"player-info\">\n            <span className=\"player-name\">You</span>\n            <span className=\"progress-percentage\">{Math.round(userProgress)}%</span>\n          </div>\n          <div className=\"progress-bar\">\n            <div className=\"progress-fill\" style={{ width: `${userProgress}%` }}></div>\n          </div>\n        </div>\n\n        <div className=\"vs-indicator\">VS</div>\n\n        <div className=\"player-progress opponent\">\n          <div className=\"player-info\">\n            <span className=\"player-name\">{opponent?.name || 'Opponent'}</span>\n            <span className=\"progress-percentage\">{Math.round(opponentProgress)}%</span>\n          </div>\n          <div className=\"progress-bar\">\n            <div className=\"progress-fill\" style={{ width: `${opponentProgress}%` }}></div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"battle-content\">\n        <div className=\"problem-section\">\n          <div className=\"problem-header\">\n            <h2>{problem?.title || 'Problem Title'}</h2>\n            <div className=\"problem-difficulty\">{problem?.difficulty || 'Medium'}</div>\n          </div>\n\n          <div className=\"problem-description\">\n            <p>{problem?.description}</p>\n\n            <div className=\"examples\">\n              <h3>Examples:</h3>\n              {problem?.examples.map((example, index) => (\n                <div key={index} className=\"example\">\n                  <div className=\"example-input\">\n                    <strong>Input:</strong> {example.input}\n                  </div>\n                  <div className=\"example-output\">\n                    <strong>Output:</strong> {example.output}\n                  </div>\n                  {example.explanation && (\n                    <div className=\"example-explanation\">\n                      <strong>Explanation:</strong> {example.explanation}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n\n            <div className=\"constraints\">\n              <h3>Constraints:</h3>\n              <ul>\n                {problem?.constraints.map((constraint, index) => (\n                  <li key={index}>{constraint}</li>\n                ))}\n              </ul>\n            </div>\n\n            {showHint && (\n              <div className=\"hints\">\n                <h3>Hints:</h3>\n                <ul>\n                  {problem?.hints.map((hint, index) => (\n                    <li key={index}>{hint}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            {!showHint && (\n              <button className=\"hint-btn\" onClick={() => setShowHint(true)}>\n                Show Hints\n              </button>\n            )}\n\n            {showSolution && (\n              <div className=\"solution\">\n                <h3>Solution:</h3>\n                <pre>{problem?.solution}</pre>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"code-section\">\n          <div className=\"code-header\">\n            <select\n              value={language}\n              onChange={(e) => setLanguage(e.target.value)}\n              className=\"language-select\"\n            >\n              <option value=\"javascript\">JavaScript</option>\n              <option value=\"python\">Python</option>\n              <option value=\"java\">Java</option>\n              <option value=\"cpp\">C++</option>\n            </select>\n\n            <div className=\"code-actions\">\n              <button\n                className=\"run-btn\"\n                onClick={runCode}\n                disabled={isRunning || isSubmitting}\n              >\n                {isRunning ? 'Running...' : 'Run Code'}\n              </button>\n              <button\n                className=\"submit-btn\"\n                onClick={submitSolution}\n                disabled={isRunning || isSubmitting}\n              >\n                {isSubmitting ? 'Submitting...' : 'Submit Solution'}\n              </button>\n            </div>\n          </div>\n\n          <div className=\"code-editor\">\n            <textarea\n              value={code}\n              onChange={(e) => setCode(e.target.value)}\n              className=\"code-textarea\"\n              spellCheck=\"false\"\n            />\n          </div>\n\n          <div className=\"test-results\">\n            <h3>Test Results:</h3>\n            {testResults.length > 0 ? (\n              <div className=\"results-list\">\n                {testResults.map((result, index) => (\n                  <div\n                    key={index}\n                    className={`result-item ${result.passed ? 'passed' : 'failed'}`}\n                  >\n                    <div className=\"result-header\">\n                      <span className=\"test-number\">Test {index + 1}</span>\n                      <span className=\"result-status\">\n                        {result.passed ? 'Passed' : 'Failed'}\n                      </span>\n                    </div>\n                    <div className=\"result-details\">\n                      <div className=\"result-input\">\n                        <strong>Input:</strong> {result.input}\n                      </div>\n                      <div className=\"result-expected\">\n                        <strong>Expected:</strong> {result.expectedOutput}\n                      </div>\n                      <div className=\"result-actual\">\n                        <strong>Your Output:</strong> {result.actualOutput}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"no-results\">\n                Run your code to see test results\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"chat-section\">\n          <div className=\"chat-header\">\n            <h3>Battle Chat</h3>\n            {isFriendBattle && (\n              <div className=\"friend-battle-chat-badge\">\n                <span className=\"friend-icon\">👥</span> Friend Battle Chat\n              </div>\n            )}\n          </div>\n\n          <div className=\"chat-messages\">\n            {chatMessages.length > 0 ? (\n              chatMessages.map(message => (\n                <div\n                  key={message.id}\n                  className={`chat-message ${message.sender === 'You' ? 'user' : 'opponent'}`}\n                >\n                  <div className=\"message-header\">\n                    <span className=\"message-sender\">{message.sender}</span>\n                    <span className=\"message-time\">{message.timestamp}</span>\n                  </div>\n                  <div className=\"message-text\">{message.text}</div>\n                </div>\n              ))\n            ) : (\n              <div className=\"no-messages\">\n                {isFriendBattle\n                  ? \"Chat with your friend while you solve the problem together!\"\n                  : \"No messages yet. Start the conversation!\"}\n              </div>\n            )}\n          </div>\n\n          <form className=\"chat-input\" onSubmit={sendMessage}>\n            <input\n              type=\"text\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              placeholder=\"Type a message...\"\n              disabled={battleEnded}\n            />\n            <button type=\"submit\" disabled={!newMessage.trim() || battleEnded}>\n              Send\n            </button>\n          </form>\n        </div>\n      </div>\n\n      {battleEnded && (\n        <div className=\"battle-ended-overlay\">\n          <div className=\"battle-result\">\n            <div className=\"result-icon\">{userProgress >= opponentProgress ? '🏆' : '🔄'}</div>\n            <h2>{userProgress >= opponentProgress ? 'You Won!' : 'You Lost!'}</h2>\n            <div className=\"battle-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Your Progress:</span>\n                <span className=\"stat-value\">{Math.round(userProgress)}%</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Opponent Progress:</span>\n                <span className=\"stat-value\">{Math.round(opponentProgress)}%</span>\n              </div>\n            </div>\n            <p className=\"result-message\">\n              {userProgress >= opponentProgress\n                ? \"Congratulations! You've successfully completed the challenge faster than your opponent.\"\n                : \"Good effort! Your opponent completed the challenge first, but you can try again.\"}\n            </p>\n            <div className=\"loading-dots\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n            <p className=\"redirect-message\">Redirecting to results page...</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CodingBattleArena;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}