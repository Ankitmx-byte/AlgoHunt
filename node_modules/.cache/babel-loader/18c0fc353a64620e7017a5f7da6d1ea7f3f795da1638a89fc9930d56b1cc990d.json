{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\pages\\\\CodingBattleArena.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ScrollReveal from '../components/ScrollReveal';\nimport './CodingBattleArena.css';\nimport '../styles/animations.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodingBattleArena() {\n  _s();\n  const {\n    battleId\n  } = useParams();\n  const navigate = useNavigate();\n  const [battle, setBattle] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('javascript');\n  const [problem, setProblem] = useState(null);\n  const [testCases, setTestCases] = useState([]);\n  const [testResults, setTestResults] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showHint, setShowHint] = useState(false);\n  const [showSolution, setShowSolution] = useState(false);\n  const [battleEnded, setBattleEnded] = useState(false);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [userProgress, setUserProgress] = useState(0);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [showFullScreen, setShowFullScreen] = useState(false);\n  const [isFriendBattle, setIsFriendBattle] = useState(false);\n\n  // Use refs to track initialization state\n  const initialized = useRef(false);\n  const startTime = useRef(Date.now());\n  useEffect(() => {\n    // Prevent double initialization\n    if (initialized.current) return;\n    initialized.current = true;\n\n    // Set the start time\n    startTime.current = Date.now();\n\n    // Clear any existing battle results to prevent immediate ending\n    localStorage.removeItem(`battleResult_${battleId}`);\n\n    // Load battle data from localStorage\n    const battleData = localStorage.getItem('currentBattle');\n    const opponentData = localStorage.getItem('currentOpponent');\n\n    // Initialize battle data\n    let currentBattle;\n    if (battleData) {\n      try {\n        currentBattle = JSON.parse(battleData);\n\n        // Force reset battle status and start time\n        currentBattle.status = 'active';\n        currentBattle.startTime = Date.now();\n        delete currentBattle.endTime;\n        delete currentBattle.completed;\n\n        // Set the battle in state\n        setBattle(currentBattle);\n\n        // Check if this is a friend battle\n        if (currentBattle.isFriendBattle) {\n          setIsFriendBattle(true);\n        }\n\n        // Set time left based on difficulty or use the battle's duration if available\n        let duration = currentBattle.duration || 30; // Default 30 minutes\n        if (!currentBattle.duration) {\n          // If no duration is specified, set based on difficulty\n          if (currentBattle.difficulty === 'easy') duration = 20;else if (currentBattle.difficulty === 'hard') duration = 45;else duration = 30; // Medium difficulty\n        }\n        setTimeLeft(duration * 60); // Convert to seconds\n      } catch (error) {\n        console.error(\"Error parsing battle data:\", error);\n        // Create a new battle if parsing fails\n        createNewBattle();\n      }\n    } else {\n      // If no battle data, create a new one\n      createNewBattle();\n    }\n\n    // Initialize opponent data\n    if (opponentData) {\n      try {\n        setOpponent(JSON.parse(opponentData));\n      } catch (error) {\n        console.error(\"Error parsing opponent data:\", error);\n        createDefaultOpponent();\n      }\n    } else {\n      createDefaultOpponent();\n    }\n\n    // Reset battle state\n    setBattleEnded(false);\n    setUserProgress(0);\n    setOpponentProgress(0);\n\n    // Load problem based on difficulty and category\n    loadProblem();\n    setLoading(false);\n  }, [battleId]);\n\n  // Helper function to create a new battle\n  const createNewBattle = () => {\n    const defaultBattle = {\n      id: battleId,\n      title: \"1v1 Coding Battle\",\n      difficulty: 'Medium',\n      category: 'Algorithms',\n      startTime: Date.now(),\n      duration: 30,\n      status: 'active'\n    };\n    setBattle(defaultBattle);\n    setTimeLeft(30 * 60); // 30 minutes in seconds\n\n    // Save to localStorage\n    localStorage.setItem('currentBattle', JSON.stringify(defaultBattle));\n  };\n\n  // Helper function to create a default opponent\n  const createDefaultOpponent = () => {\n    const defaultOpponent = {\n      name: \"Alex Chen\",\n      rating: 1842,\n      winRate: \"68%\",\n      preferredLanguage: \"Python\",\n      skillLevel: \"92% match for your skill level\",\n      avatar: \"https://randomuser.me/api/portraits/men/32.jpg\"\n    };\n    setOpponent(defaultOpponent);\n\n    // Save to localStorage\n    localStorage.setItem('currentOpponent', JSON.stringify(defaultOpponent));\n  };\n\n  // Timer countdown - just updates the timer without ending the battle\n  useEffect(() => {\n    if (timeLeft > 0 && !battleEnded) {\n      const timer = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0 && !battleEnded) {\n      console.log(\"Time has run out, but battle will continue until manually ended\");\n      // Don't end the battle automatically\n    }\n  }, [timeLeft, battleEnded]);\n\n  // Simulate opponent progress\n  useEffect(() => {\n    // Only start opponent progress simulation if:\n    // 1. Battle is not ended\n    // 2. Opponent exists\n    // 3. At least 30 seconds have passed since initialization\n    if (!battleEnded && opponent) {\n      // Start with a longer delay to give the user time to read the problem\n      const initialDelay = setTimeout(() => {\n        console.log(\"Starting opponent progress simulation\");\n\n        // Create a more realistic opponent progress simulation\n        const interval = setInterval(() => {\n          // Get time elapsed since battle start\n          const timeElapsed = (Date.now() - startTime.current) / 1000;\n\n          // Only update progress if at least 30 seconds have passed\n          if (timeElapsed < 30) {\n            console.log(\"Not updating opponent progress yet, waiting for 30 seconds to pass\");\n            return;\n          }\n          setOpponentProgress(prev => {\n            var _battle$difficulty, _battle$difficulty2;\n            // Make progress increments smaller and more realistic\n            // The increment is based on difficulty and varies slightly\n            let baseIncrement;\n            if ((battle === null || battle === void 0 ? void 0 : (_battle$difficulty = battle.difficulty) === null || _battle$difficulty === void 0 ? void 0 : _battle$difficulty.toLowerCase()) === 'easy') {\n              baseIncrement = 0.4; // Faster progress on easy problems\n            } else if ((battle === null || battle === void 0 ? void 0 : (_battle$difficulty2 = battle.difficulty) === null || _battle$difficulty2 === void 0 ? void 0 : _battle$difficulty2.toLowerCase()) === 'hard') {\n              baseIncrement = 0.15; // Slower progress on hard problems\n            } else {\n              baseIncrement = 0.25; // Medium difficulty default\n            }\n\n            // Add some randomness to the increment\n            const randomFactor = Math.random() * 0.5 + 0.75; // Between 0.75 and 1.25\n            const increment = baseIncrement * randomFactor;\n\n            // Calculate new progress\n            const newProgress = prev + increment;\n\n            // Simulate the opponent getting stuck sometimes\n            const stuckProbability = 0.15; // 15% chance of getting stuck each update\n            if (Math.random() < stuckProbability && prev > 20) {\n              // If stuck, don't increase progress this time\n              return prev;\n            }\n\n            // Cap progress at 95% until at least 3 minutes have passed\n            if (timeElapsed < 180 && newProgress > 95) {\n              return 95;\n            }\n\n            // If opponent reaches 100%, cap at 99% to prevent automatic win\n            if (newProgress >= 100) {\n              console.log(\"Opponent reached 100% progress, capping at 99%\");\n              // Never end the battle automatically\n              return 99;\n            }\n            return newProgress;\n          });\n        }, 10000); // Slower updates (every 10 seconds)\n\n        return () => clearInterval(interval);\n      }, 30000); // 30 second initial delay\n\n      return () => clearTimeout(initialDelay);\n    }\n  }, [opponent, battleEnded, battle === null || battle === void 0 ? void 0 : battle.difficulty]);\n  const loadProblem = () => {\n    // In a real app, this would fetch from an API\n    // For now, we'll use a mock problem\n    const mockProblem = {\n      title: \"Two Sum\",\n      description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice.\",\n      examples: [{\n        input: \"nums = [2,7,11,15], target = 9\",\n        output: \"[0,1]\",\n        explanation: \"Because nums[0] + nums[1] == 9, we return [0, 1].\"\n      }, {\n        input: \"nums = [3,2,4], target = 6\",\n        output: \"[1,2]\",\n        explanation: \"Because nums[1] + nums[2] == 6, we return [1, 2].\"\n      }],\n      constraints: [\"2 <= nums.length <= 10^4\", \"-10^9 <= nums[i] <= 10^9\", \"-10^9 <= target <= 10^9\", \"Only one valid answer exists.\"],\n      difficulty: \"Easy\",\n      hints: [\"Try using a hash map to store the values you've seen so far.\", \"For each element, check if target - current element exists in the hash map.\"],\n      solution: `function twoSum(nums, target) {\n  const map = new Map();\n\n  for (let i = 0; i < nums.length; i++) {\n    const complement = target - nums[i];\n\n    if (map.has(complement)) {\n      return [map.get(complement), i];\n    }\n\n    map.set(nums[i], i);\n  }\n\n  return null;\n}`\n    };\n    setProblem(mockProblem);\n\n    // Set up test cases\n    setTestCases([{\n      input: \"twoSum([2,7,11,15], 9)\",\n      expectedOutput: \"[0,1]\"\n    }, {\n      input: \"twoSum([3,2,4], 6)\",\n      expectedOutput: \"[1,2]\"\n    }, {\n      input: \"twoSum([3,3], 6)\",\n      expectedOutput: \"[0,1]\"\n    }]);\n\n    // Set initial code template\n    setCode(`function twoSum(nums, target) {\n  // Your solution here\n}`);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const runCode = () => {\n    setIsRunning(true);\n\n    // Simulate code execution\n    setTimeout(() => {\n      // In a real app, this would actually execute the code\n      // For now, we'll simulate results\n\n      // Generate more realistic test results with some randomness\n      const results = testCases.map(test => {\n        // 80% chance of passing a test when running code\n        const passed = Math.random() < 0.8;\n        return {\n          input: test.input,\n          expectedOutput: test.expectedOutput,\n          actualOutput: passed ? test.expectedOutput : \"[1,0]\",\n          // Different output if failed\n          passed: passed\n        };\n      });\n      setTestResults(results);\n      setIsRunning(false);\n\n      // Update progress\n      const passedTests = results.filter(r => r.passed).length;\n      const progress = passedTests / testCases.length * 100;\n      setUserProgress(progress);\n\n      // Don't automatically end the battle when tests pass\n      // Let the user explicitly submit their solution\n    }, 1500);\n  };\n  const submitSolution = () => {\n    setIsSubmitting(true);\n\n    // Get time elapsed since battle start\n    const timeElapsed = (Date.now() - startTime.current) / 1000;\n    console.log(`Submitting solution after ${timeElapsed} seconds`);\n\n    // Simulate submission\n    setTimeout(() => {\n      // Generate test results with high chance of success for submission\n      const results = testCases.map(test => {\n        // 90% chance of passing a test when submitting\n        const passed = Math.random() < 0.9;\n        return {\n          input: test.input,\n          expectedOutput: test.expectedOutput,\n          actualOutput: passed ? test.expectedOutput : \"[1,0]\",\n          // Different output if failed\n          passed: passed\n        };\n      });\n      setTestResults(results);\n\n      // Update progress\n      const passedTests = results.filter(r => r.passed).length;\n      const progress = passedTests / testCases.length * 100;\n      setUserProgress(progress);\n\n      // Check if all tests passed\n      if (passedTests === testCases.length) {\n        // Show success message\n        const successMessage = document.createElement('div');\n        successMessage.className = 'submission-success';\n        successMessage.innerHTML = '<div class=\"success-icon\">✓</div><div>All tests passed! Great job!</div>';\n\n        // Find the code section or create a fallback container\n        const codeSection = document.querySelector('.code-section') || document.body;\n        codeSection.appendChild(successMessage);\n\n        // Remove the message after 3 seconds\n        setTimeout(() => {\n          if (document.querySelector('.submission-success')) {\n            document.querySelector('.submission-success').remove();\n          }\n        }, 3000);\n\n        // Only add the Complete Battle button if:\n        // 1. It doesn't already exist\n        // 2. Battle is not ended\n        // 3. At least 60 seconds have passed since battle start\n        if (!document.querySelector('.complete-battle-btn') && !battleEnded && timeElapsed >= 60) {\n          const completeBattleBtn = document.createElement('button');\n          completeBattleBtn.className = 'complete-battle-btn';\n          completeBattleBtn.innerHTML = 'Complete Battle';\n          completeBattleBtn.onclick = () => endBattle(true, true); // Pass forceEnd=true\n\n          // Add the button to the code actions section\n          const codeActions = document.querySelector('.code-actions');\n          if (codeActions) {\n            codeActions.appendChild(completeBattleBtn);\n          }\n        } else if (timeElapsed < 60) {\n          console.log(\"Not showing Complete Battle button yet - minimum time not elapsed\");\n\n          // Show a message that the battle can be completed after 60 seconds\n          const timeLeftMessage = document.createElement('div');\n          timeLeftMessage.className = 'time-left-message';\n          timeLeftMessage.innerHTML = `<div>You can complete the battle in ${Math.ceil(60 - timeElapsed)} seconds</div>`;\n\n          // Find the code actions section or create a fallback container\n          const codeActions = document.querySelector('.code-actions') || document.body;\n          codeActions.appendChild(timeLeftMessage);\n\n          // Remove the message after 3 seconds\n          setTimeout(() => {\n            if (document.querySelector('.time-left-message')) {\n              document.querySelector('.time-left-message').remove();\n            }\n          }, 3000);\n        }\n      }\n      setIsSubmitting(false);\n    }, 2000);\n  };\n  const handleOpponentFinished = () => {\n    if (!battleEnded) {\n      // Opponent finished first\n      endBattle(false, true); // Pass forceEnd=true\n    }\n  };\n  const endBattle = (userWon = false, forceEnd = false) => {\n    // Check if battle is already ended to prevent multiple calls\n    if (battleEnded) {\n      console.log(\"Battle already ended, ignoring call to endBattle\");\n      return;\n    }\n\n    // Check if the preventAutoEnd flag is set and this is not a forced end\n    if (battle !== null && battle !== void 0 && battle.preventAutoEnd && !forceEnd) {\n      console.log(\"Battle has preventAutoEnd flag set, ignoring automatic end\");\n      return;\n    }\n\n    // Get the current time since battle started (in seconds)\n    const battleStartTime = startTime.current;\n    const timeElapsed = (Date.now() - battleStartTime) / 1000;\n    console.log(`Time elapsed since battle start: ${timeElapsed} seconds`);\n\n    // Only allow battle to end if:\n    // 1. At least 60 seconds have passed since the battle started, OR\n    // 2. The forceEnd parameter is true (for manual completion), OR\n    // 3. The time has run out\n    if (timeElapsed < 60 && !forceEnd && timeLeft > 0) {\n      console.log(\"Battle cannot end yet - minimum time not elapsed (60 seconds required)\");\n      return;\n    }\n\n    // Only allow user to win if they have made some progress\n    if (userWon && userProgress <= 0 && !forceEnd) {\n      console.log(\"User cannot win with 0% progress\");\n      return;\n    }\n\n    // Set battle as ended\n    setBattleEnded(true);\n    console.log(\"Battle ended with userWon:\", userWon, \"forceEnd:\", forceEnd);\n\n    // Calculate the battle duration in seconds\n    const battleDuration = battle !== null && battle !== void 0 && battle.duration ? battle.duration * 60 : 30 * 60; // Default to 30 minutes\n\n    // Get current date/time for completion timestamp\n    const completedAt = new Date().toISOString();\n\n    // Calculate a realistic opponent progress based on who won\n    let finalOpponentProgress;\n    if (userWon) {\n      // If user won, opponent progress should be less than user's\n      finalOpponentProgress = Math.min(opponentProgress, userProgress - 5);\n      if (finalOpponentProgress < 0) finalOpponentProgress = Math.floor(Math.random() * 70); // Random value if negative\n    } else {\n      // If opponent won, they should have 100% progress\n      finalOpponentProgress = 100;\n    }\n\n    // Ensure user progress is at least 10% if they won\n    const finalUserProgress = userWon && userProgress < 10 ? 100 : userProgress;\n\n    // Save result to localStorage\n    const result = {\n      battleId,\n      battleTitle: (battle === null || battle === void 0 ? void 0 : battle.title) || '1v1 Coding Battle',\n      userWon,\n      opponentName: (opponent === null || opponent === void 0 ? void 0 : opponent.name) || 'Unknown',\n      problem: (problem === null || problem === void 0 ? void 0 : problem.title) || 'Two Sum',\n      // Ensure problem title is always defined\n      userProgress: finalUserProgress,\n      opponentProgress: finalOpponentProgress,\n      timeSpent: Math.max(60, timeLeft > 0 ? battleDuration - timeLeft : battleDuration),\n      // Ensure at least 60 seconds\n      completedAt,\n      battleCompleted: true,\n      // Flag to indicate the battle is completed\n      forcedResult: forceEnd // Flag to indicate if this was a forced end\n    };\n    localStorage.setItem(`battleResult_${battleId}`, JSON.stringify(result));\n\n    // Update the battle status in localStorage\n    if (battle) {\n      const updatedBattle = {\n        ...battle,\n        status: 'completed',\n        endTime: completedAt,\n        completed: true\n      };\n      localStorage.setItem('currentBattle', JSON.stringify(updatedBattle));\n    }\n\n    // Show result modal or navigate to results page\n    setTimeout(() => {\n      navigate(`/battle/${battleId}/results`);\n    }, 5000); // Increased to 5 seconds to give users time to see the result\n  };\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    const message = {\n      id: Date.now(),\n      sender: 'You',\n      text: newMessage,\n      timestamp: new Date().toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    };\n    setChatMessages([...chatMessages, message]);\n    setNewMessage('');\n\n    // Simulate opponent response\n    setTimeout(() => {\n      const responses = [\"I'm still working on this problem.\", \"This is challenging!\", \"How are you approaching this?\", \"I think I'm getting close.\", \"Good luck!\"];\n      const opponentMessage = {\n        id: Date.now() + 1,\n        sender: (opponent === null || opponent === void 0 ? void 0 : opponent.name) || 'Opponent',\n        text: responses[Math.floor(Math.random() * responses.length)],\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n      setChatMessages(prev => [...prev, opponentMessage]);\n    }, 2000);\n  };\n  const toggleFullScreen = () => {\n    setShowFullScreen(!showFullScreen);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-arena-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-text\",\n          children: \"Loading battle arena...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `battle-arena-container ${showFullScreen ? 'fullscreen' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: (battle === null || battle === void 0 ? void 0 : battle.title) || '1v1 Coding Battle'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"difficulty\",\n            children: (battle === null || battle === void 0 ? void 0 : battle.difficulty) || 'Medium'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"category\",\n            children: (battle === null || battle === void 0 ? void 0 : battle.category) || 'Algorithms'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timer\",\n            children: [\"Time Left: \", formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this), (battle === null || battle === void 0 ? void 0 : battle.originalDuration) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"duration\",\n            children: [\"Original Duration: \", battle.originalDuration, \" mins\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this), isFriendBattle && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"friend-battle-badge\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"friend-icon\",\n              children: \"\\uD83D\\uDC65\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this), \" Friend Battle\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fullscreen-btn\",\n          onClick: toggleFullScreen,\n          children: showFullScreen ? 'Exit Fullscreen' : 'Fullscreen'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-name\",\n            children: \"You\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"progress-percentage\",\n            children: [Math.round(userProgress), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${userProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vs-indicator\",\n        children: \"VS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-progress opponent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-name\",\n            children: (opponent === null || opponent === void 0 ? void 0 : opponent.name) || 'Opponent'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"progress-percentage\",\n            children: [Math.round(opponentProgress), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${opponentProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: (problem === null || problem === void 0 ? void 0 : problem.title) || 'Problem Title'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-difficulty\",\n            children: (problem === null || problem === void 0 ? void 0 : problem.difficulty) || 'Medium'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-description\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: problem === null || problem === void 0 ? void 0 : problem.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"examples\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Examples:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 15\n            }, this), problem === null || problem === void 0 ? void 0 : problem.examples.map((example, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"example-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Input:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 21\n                }, this), \" \", example.input]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"example-output\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Output:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 21\n                }, this), \" \", example.output]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 19\n              }, this), example.explanation && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"example-explanation\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Explanation:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 23\n                }, this), \" \", example.explanation]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"constraints\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Constraints:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: problem === null || problem === void 0 ? void 0 : problem.constraints.map((constraint, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: constraint\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 13\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hints\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Hints:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: problem === null || problem === void 0 ? void 0 : problem.hints.map((hint, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: hint\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this), !showHint && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: () => setShowHint(true),\n            children: \"Show Hints\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 15\n          }, this), showSolution && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"solution\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Solution:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: problem === null || problem === void 0 ? void 0 : problem.solution\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: language,\n            onChange: e => setLanguage(e.target.value),\n            className: \"language-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"javascript\",\n              children: \"JavaScript\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"python\",\n              children: \"Python\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"java\",\n              children: \"Java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cpp\",\n              children: \"C++\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"run-btn\",\n              onClick: runCode,\n              disabled: isRunning || isSubmitting,\n              children: isRunning ? 'Running...' : 'Run Code'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-btn\",\n              onClick: submitSolution,\n              disabled: isRunning || isSubmitting,\n              children: isSubmitting ? 'Submitting...' : 'Submit Solution'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 15\n            }, this), (battle === null || battle === void 0 ? void 0 : battle.preventAutoEnd) && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"complete-battle-btn\",\n              onClick: () => endBattle(true, true),\n              disabled: battleEnded,\n              children: \"Complete Battle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-editor\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: code,\n            onChange: e => setCode(e.target.value),\n            className: \"code-textarea\",\n            spellCheck: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Test Results:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this), testResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-list\",\n            children: testResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `result-item ${result.passed ? 'passed' : 'failed'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"test-number\",\n                  children: [\"Test \", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 740,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"result-status\",\n                  children: result.passed ? 'Passed' : 'Failed'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 741,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Input:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 747,\n                    columnNumber: 25\n                  }, this), \" \", result.input]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-expected\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Expected:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 750,\n                    columnNumber: 25\n                  }, this), \" \", result.expectedOutput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-actual\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Your Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 25\n                  }, this), \" \", result.actualOutput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-results\",\n            children: \"Run your code to see test results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Battle Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 13\n          }, this), isFriendBattle && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"friend-battle-chat-badge\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"friend-icon\",\n              children: \"\\uD83D\\uDC65\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 17\n            }, this), \" Friend Battle Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: chatMessages.length > 0 ? chatMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${message.sender === 'You' ? 'user' : 'opponent'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-sender\",\n                children: message.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: message.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 19\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-messages\",\n            children: isFriendBattle ? \"Chat with your friend while you solve the problem together!\" : \"No messages yet. Start the conversation!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chat-input\",\n          onSubmit: sendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            disabled: battleEnded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !newMessage.trim() || battleEnded,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 7\n    }, this), battleEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-ended-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-icon\",\n          children: userProgress >= opponentProgress ? '🏆' : '🔄'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: userProgress >= opponentProgress ? 'You Won!' : 'You Lost!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Your Progress:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [Math.round(userProgress), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Opponent Progress:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [Math.round(opponentProgress), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result-message\",\n          children: userProgress >= opponentProgress ? \"Congratulations! You've successfully completed the challenge faster than your opponent.\" : \"Good effort! Your opponent completed the challenge first, but you can try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-dots\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"redirect-message\",\n          children: \"Redirecting to results page...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 568,\n    columnNumber: 5\n  }, this);\n}\n_s(CodingBattleArena, \"Gs3Iv1ubjzVJxrIbExegcftsP4E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CodingBattleArena;\nexport default CodingBattleArena;\nvar _c;\n$RefreshReg$(_c, \"CodingBattleArena\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","ScrollReveal","jsxDEV","_jsxDEV","CodingBattleArena","_s","battleId","navigate","battle","setBattle","opponent","setOpponent","loading","setLoading","timeLeft","setTimeLeft","code","setCode","language","setLanguage","problem","setProblem","testCases","setTestCases","testResults","setTestResults","isRunning","setIsRunning","isSubmitting","setIsSubmitting","showHint","setShowHint","showSolution","setShowSolution","battleEnded","setBattleEnded","opponentProgress","setOpponentProgress","userProgress","setUserProgress","chatMessages","setChatMessages","newMessage","setNewMessage","showFullScreen","setShowFullScreen","isFriendBattle","setIsFriendBattle","initialized","startTime","Date","now","current","localStorage","removeItem","battleData","getItem","opponentData","currentBattle","JSON","parse","status","endTime","completed","duration","difficulty","error","console","createNewBattle","createDefaultOpponent","loadProblem","defaultBattle","id","title","category","setItem","stringify","defaultOpponent","name","rating","winRate","preferredLanguage","skillLevel","avatar","timer","setTimeout","clearTimeout","log","initialDelay","interval","setInterval","timeElapsed","prev","_battle$difficulty","_battle$difficulty2","baseIncrement","toLowerCase","randomFactor","Math","random","increment","newProgress","stuckProbability","clearInterval","mockProblem","description","examples","input","output","explanation","constraints","hints","solution","expectedOutput","formatTime","seconds","mins","floor","secs","toString","padStart","runCode","results","map","test","passed","actualOutput","passedTests","filter","r","length","progress","submitSolution","successMessage","document","createElement","className","innerHTML","codeSection","querySelector","body","appendChild","remove","completeBattleBtn","onclick","endBattle","codeActions","timeLeftMessage","ceil","handleOpponentFinished","userWon","forceEnd","preventAutoEnd","battleStartTime","battleDuration","completedAt","toISOString","finalOpponentProgress","min","finalUserProgress","result","battleTitle","opponentName","timeSpent","max","battleCompleted","forcedResult","updatedBattle","sendMessage","e","preventDefault","trim","message","sender","text","timestamp","toLocaleTimeString","hour","minute","responses","opponentMessage","toggleFullScreen","children","fileName","_jsxFileName","lineNumber","columnNumber","originalDuration","onClick","round","style","width","example","index","constraint","hint","value","onChange","target","disabled","spellCheck","onSubmit","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/pages/CodingBattleArena.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ScrollReveal from '../components/ScrollReveal';\nimport './CodingBattleArena.css';\nimport '../styles/animations.css';\n\nfunction CodingBattleArena() {\n  const { battleId } = useParams();\n  const navigate = useNavigate();\n  const [battle, setBattle] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('javascript');\n  const [problem, setProblem] = useState(null);\n  const [testCases, setTestCases] = useState([]);\n  const [testResults, setTestResults] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showHint, setShowHint] = useState(false);\n  const [showSolution, setShowSolution] = useState(false);\n  const [battleEnded, setBattleEnded] = useState(false);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [userProgress, setUserProgress] = useState(0);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [showFullScreen, setShowFullScreen] = useState(false);\n  const [isFriendBattle, setIsFriendBattle] = useState(false);\n\n  // Use refs to track initialization state\n  const initialized = useRef(false);\n  const startTime = useRef(Date.now());\n\n  useEffect(() => {\n    // Prevent double initialization\n    if (initialized.current) return;\n    initialized.current = true;\n\n    // Set the start time\n    startTime.current = Date.now();\n\n    // Clear any existing battle results to prevent immediate ending\n    localStorage.removeItem(`battleResult_${battleId}`);\n\n    // Load battle data from localStorage\n    const battleData = localStorage.getItem('currentBattle');\n    const opponentData = localStorage.getItem('currentOpponent');\n\n    // Initialize battle data\n    let currentBattle;\n    if (battleData) {\n      try {\n        currentBattle = JSON.parse(battleData);\n\n        // Force reset battle status and start time\n        currentBattle.status = 'active';\n        currentBattle.startTime = Date.now();\n        delete currentBattle.endTime;\n        delete currentBattle.completed;\n\n        // Set the battle in state\n        setBattle(currentBattle);\n\n        // Check if this is a friend battle\n        if (currentBattle.isFriendBattle) {\n          setIsFriendBattle(true);\n        }\n\n        // Set time left based on difficulty or use the battle's duration if available\n        let duration = currentBattle.duration || 30; // Default 30 minutes\n        if (!currentBattle.duration) {\n          // If no duration is specified, set based on difficulty\n          if (currentBattle.difficulty === 'easy') duration = 20;\n          else if (currentBattle.difficulty === 'hard') duration = 45;\n          else duration = 30; // Medium difficulty\n        }\n\n        setTimeLeft(duration * 60); // Convert to seconds\n      } catch (error) {\n        console.error(\"Error parsing battle data:\", error);\n        // Create a new battle if parsing fails\n        createNewBattle();\n      }\n    } else {\n      // If no battle data, create a new one\n      createNewBattle();\n    }\n\n    // Initialize opponent data\n    if (opponentData) {\n      try {\n        setOpponent(JSON.parse(opponentData));\n      } catch (error) {\n        console.error(\"Error parsing opponent data:\", error);\n        createDefaultOpponent();\n      }\n    } else {\n      createDefaultOpponent();\n    }\n\n    // Reset battle state\n    setBattleEnded(false);\n    setUserProgress(0);\n    setOpponentProgress(0);\n\n    // Load problem based on difficulty and category\n    loadProblem();\n\n    setLoading(false);\n  }, [battleId]);\n\n  // Helper function to create a new battle\n  const createNewBattle = () => {\n    const defaultBattle = {\n      id: battleId,\n      title: \"1v1 Coding Battle\",\n      difficulty: 'Medium',\n      category: 'Algorithms',\n      startTime: Date.now(),\n      duration: 30,\n      status: 'active'\n    };\n    setBattle(defaultBattle);\n    setTimeLeft(30 * 60); // 30 minutes in seconds\n\n    // Save to localStorage\n    localStorage.setItem('currentBattle', JSON.stringify(defaultBattle));\n  };\n\n  // Helper function to create a default opponent\n  const createDefaultOpponent = () => {\n    const defaultOpponent = {\n      name: \"Alex Chen\",\n      rating: 1842,\n      winRate: \"68%\",\n      preferredLanguage: \"Python\",\n      skillLevel: \"92% match for your skill level\",\n      avatar: \"https://randomuser.me/api/portraits/men/32.jpg\"\n    };\n    setOpponent(defaultOpponent);\n\n    // Save to localStorage\n    localStorage.setItem('currentOpponent', JSON.stringify(defaultOpponent));\n  };\n\n  // Timer countdown - just updates the timer without ending the battle\n  useEffect(() => {\n    if (timeLeft > 0 && !battleEnded) {\n      const timer = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0 && !battleEnded) {\n      console.log(\"Time has run out, but battle will continue until manually ended\");\n      // Don't end the battle automatically\n    }\n  }, [timeLeft, battleEnded]);\n\n  // Simulate opponent progress\n  useEffect(() => {\n    // Only start opponent progress simulation if:\n    // 1. Battle is not ended\n    // 2. Opponent exists\n    // 3. At least 30 seconds have passed since initialization\n    if (!battleEnded && opponent) {\n      // Start with a longer delay to give the user time to read the problem\n      const initialDelay = setTimeout(() => {\n        console.log(\"Starting opponent progress simulation\");\n\n        // Create a more realistic opponent progress simulation\n        const interval = setInterval(() => {\n          // Get time elapsed since battle start\n          const timeElapsed = (Date.now() - startTime.current) / 1000;\n\n          // Only update progress if at least 30 seconds have passed\n          if (timeElapsed < 30) {\n            console.log(\"Not updating opponent progress yet, waiting for 30 seconds to pass\");\n            return;\n          }\n\n          setOpponentProgress(prev => {\n            // Make progress increments smaller and more realistic\n            // The increment is based on difficulty and varies slightly\n            let baseIncrement;\n            if (battle?.difficulty?.toLowerCase() === 'easy') {\n              baseIncrement = 0.4; // Faster progress on easy problems\n            } else if (battle?.difficulty?.toLowerCase() === 'hard') {\n              baseIncrement = 0.15; // Slower progress on hard problems\n            } else {\n              baseIncrement = 0.25; // Medium difficulty default\n            }\n\n            // Add some randomness to the increment\n            const randomFactor = Math.random() * 0.5 + 0.75; // Between 0.75 and 1.25\n            const increment = baseIncrement * randomFactor;\n\n            // Calculate new progress\n            const newProgress = prev + increment;\n\n            // Simulate the opponent getting stuck sometimes\n            const stuckProbability = 0.15; // 15% chance of getting stuck each update\n            if (Math.random() < stuckProbability && prev > 20) {\n              // If stuck, don't increase progress this time\n              return prev;\n            }\n\n            // Cap progress at 95% until at least 3 minutes have passed\n            if (timeElapsed < 180 && newProgress > 95) {\n              return 95;\n            }\n\n            // If opponent reaches 100%, cap at 99% to prevent automatic win\n            if (newProgress >= 100) {\n              console.log(\"Opponent reached 100% progress, capping at 99%\");\n              // Never end the battle automatically\n              return 99;\n            }\n\n            return newProgress;\n          });\n        }, 10000); // Slower updates (every 10 seconds)\n\n        return () => clearInterval(interval);\n      }, 30000); // 30 second initial delay\n\n      return () => clearTimeout(initialDelay);\n    }\n  }, [opponent, battleEnded, battle?.difficulty]);\n\n  const loadProblem = () => {\n    // In a real app, this would fetch from an API\n    // For now, we'll use a mock problem\n    const mockProblem = {\n      title: \"Two Sum\",\n      description: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice.\",\n      examples: [\n        {\n          input: \"nums = [2,7,11,15], target = 9\",\n          output: \"[0,1]\",\n          explanation: \"Because nums[0] + nums[1] == 9, we return [0, 1].\"\n        },\n        {\n          input: \"nums = [3,2,4], target = 6\",\n          output: \"[1,2]\",\n          explanation: \"Because nums[1] + nums[2] == 6, we return [1, 2].\"\n        }\n      ],\n      constraints: [\n        \"2 <= nums.length <= 10^4\",\n        \"-10^9 <= nums[i] <= 10^9\",\n        \"-10^9 <= target <= 10^9\",\n        \"Only one valid answer exists.\"\n      ],\n      difficulty: \"Easy\",\n      hints: [\n        \"Try using a hash map to store the values you've seen so far.\",\n        \"For each element, check if target - current element exists in the hash map.\"\n      ],\n      solution: `function twoSum(nums, target) {\n  const map = new Map();\n\n  for (let i = 0; i < nums.length; i++) {\n    const complement = target - nums[i];\n\n    if (map.has(complement)) {\n      return [map.get(complement), i];\n    }\n\n    map.set(nums[i], i);\n  }\n\n  return null;\n}`\n    };\n\n    setProblem(mockProblem);\n\n    // Set up test cases\n    setTestCases([\n      { input: \"twoSum([2,7,11,15], 9)\", expectedOutput: \"[0,1]\" },\n      { input: \"twoSum([3,2,4], 6)\", expectedOutput: \"[1,2]\" },\n      { input: \"twoSum([3,3], 6)\", expectedOutput: \"[0,1]\" }\n    ]);\n\n    // Set initial code template\n    setCode(`function twoSum(nums, target) {\n  // Your solution here\n}`);\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const runCode = () => {\n    setIsRunning(true);\n\n    // Simulate code execution\n    setTimeout(() => {\n      // In a real app, this would actually execute the code\n      // For now, we'll simulate results\n\n      // Generate more realistic test results with some randomness\n      const results = testCases.map(test => {\n        // 80% chance of passing a test when running code\n        const passed = Math.random() < 0.8;\n        return {\n          input: test.input,\n          expectedOutput: test.expectedOutput,\n          actualOutput: passed ? test.expectedOutput : \"[1,0]\", // Different output if failed\n          passed: passed\n        };\n      });\n\n      setTestResults(results);\n      setIsRunning(false);\n\n      // Update progress\n      const passedTests = results.filter(r => r.passed).length;\n      const progress = (passedTests / testCases.length) * 100;\n      setUserProgress(progress);\n\n      // Don't automatically end the battle when tests pass\n      // Let the user explicitly submit their solution\n    }, 1500);\n  };\n\n  const submitSolution = () => {\n    setIsSubmitting(true);\n\n    // Get time elapsed since battle start\n    const timeElapsed = (Date.now() - startTime.current) / 1000;\n    console.log(`Submitting solution after ${timeElapsed} seconds`);\n\n    // Simulate submission\n    setTimeout(() => {\n      // Generate test results with high chance of success for submission\n      const results = testCases.map(test => {\n        // 90% chance of passing a test when submitting\n        const passed = Math.random() < 0.9;\n        return {\n          input: test.input,\n          expectedOutput: test.expectedOutput,\n          actualOutput: passed ? test.expectedOutput : \"[1,0]\", // Different output if failed\n          passed: passed\n        };\n      });\n\n      setTestResults(results);\n\n      // Update progress\n      const passedTests = results.filter(r => r.passed).length;\n      const progress = (passedTests / testCases.length) * 100;\n      setUserProgress(progress);\n\n      // Check if all tests passed\n      if (passedTests === testCases.length) {\n        // Show success message\n        const successMessage = document.createElement('div');\n        successMessage.className = 'submission-success';\n        successMessage.innerHTML = '<div class=\"success-icon\">✓</div><div>All tests passed! Great job!</div>';\n\n        // Find the code section or create a fallback container\n        const codeSection = document.querySelector('.code-section') || document.body;\n        codeSection.appendChild(successMessage);\n\n        // Remove the message after 3 seconds\n        setTimeout(() => {\n          if (document.querySelector('.submission-success')) {\n            document.querySelector('.submission-success').remove();\n          }\n        }, 3000);\n\n        // Only add the Complete Battle button if:\n        // 1. It doesn't already exist\n        // 2. Battle is not ended\n        // 3. At least 60 seconds have passed since battle start\n        if (!document.querySelector('.complete-battle-btn') && !battleEnded && timeElapsed >= 60) {\n          const completeBattleBtn = document.createElement('button');\n          completeBattleBtn.className = 'complete-battle-btn';\n          completeBattleBtn.innerHTML = 'Complete Battle';\n          completeBattleBtn.onclick = () => endBattle(true, true); // Pass forceEnd=true\n\n          // Add the button to the code actions section\n          const codeActions = document.querySelector('.code-actions');\n          if (codeActions) {\n            codeActions.appendChild(completeBattleBtn);\n          }\n        } else if (timeElapsed < 60) {\n          console.log(\"Not showing Complete Battle button yet - minimum time not elapsed\");\n\n          // Show a message that the battle can be completed after 60 seconds\n          const timeLeftMessage = document.createElement('div');\n          timeLeftMessage.className = 'time-left-message';\n          timeLeftMessage.innerHTML = `<div>You can complete the battle in ${Math.ceil(60 - timeElapsed)} seconds</div>`;\n\n          // Find the code actions section or create a fallback container\n          const codeActions = document.querySelector('.code-actions') || document.body;\n          codeActions.appendChild(timeLeftMessage);\n\n          // Remove the message after 3 seconds\n          setTimeout(() => {\n            if (document.querySelector('.time-left-message')) {\n              document.querySelector('.time-left-message').remove();\n            }\n          }, 3000);\n        }\n      }\n\n      setIsSubmitting(false);\n    }, 2000);\n  };\n\n  const handleOpponentFinished = () => {\n    if (!battleEnded) {\n      // Opponent finished first\n      endBattle(false, true); // Pass forceEnd=true\n    }\n  };\n\n  const endBattle = (userWon = false, forceEnd = false) => {\n    // Check if battle is already ended to prevent multiple calls\n    if (battleEnded) {\n      console.log(\"Battle already ended, ignoring call to endBattle\");\n      return;\n    }\n\n    // Check if the preventAutoEnd flag is set and this is not a forced end\n    if (battle?.preventAutoEnd && !forceEnd) {\n      console.log(\"Battle has preventAutoEnd flag set, ignoring automatic end\");\n      return;\n    }\n\n    // Get the current time since battle started (in seconds)\n    const battleStartTime = startTime.current;\n    const timeElapsed = (Date.now() - battleStartTime) / 1000;\n\n    console.log(`Time elapsed since battle start: ${timeElapsed} seconds`);\n\n    // Only allow battle to end if:\n    // 1. At least 60 seconds have passed since the battle started, OR\n    // 2. The forceEnd parameter is true (for manual completion), OR\n    // 3. The time has run out\n    if (timeElapsed < 60 && !forceEnd && timeLeft > 0) {\n      console.log(\"Battle cannot end yet - minimum time not elapsed (60 seconds required)\");\n      return;\n    }\n\n    // Only allow user to win if they have made some progress\n    if (userWon && userProgress <= 0 && !forceEnd) {\n      console.log(\"User cannot win with 0% progress\");\n      return;\n    }\n\n    // Set battle as ended\n    setBattleEnded(true);\n    console.log(\"Battle ended with userWon:\", userWon, \"forceEnd:\", forceEnd);\n\n    // Calculate the battle duration in seconds\n    const battleDuration = battle?.duration ? battle.duration * 60 : 30 * 60; // Default to 30 minutes\n\n    // Get current date/time for completion timestamp\n    const completedAt = new Date().toISOString();\n\n    // Calculate a realistic opponent progress based on who won\n    let finalOpponentProgress;\n    if (userWon) {\n      // If user won, opponent progress should be less than user's\n      finalOpponentProgress = Math.min(opponentProgress, userProgress - 5);\n      if (finalOpponentProgress < 0) finalOpponentProgress = Math.floor(Math.random() * 70); // Random value if negative\n    } else {\n      // If opponent won, they should have 100% progress\n      finalOpponentProgress = 100;\n    }\n\n    // Ensure user progress is at least 10% if they won\n    const finalUserProgress = userWon && userProgress < 10 ? 100 : userProgress;\n\n    // Save result to localStorage\n    const result = {\n      battleId,\n      battleTitle: battle?.title || '1v1 Coding Battle',\n      userWon,\n      opponentName: opponent?.name || 'Unknown',\n      problem: problem?.title || 'Two Sum', // Ensure problem title is always defined\n      userProgress: finalUserProgress,\n      opponentProgress: finalOpponentProgress,\n      timeSpent: Math.max(60, timeLeft > 0 ? (battleDuration - timeLeft) : battleDuration), // Ensure at least 60 seconds\n      completedAt,\n      battleCompleted: true, // Flag to indicate the battle is completed\n      forcedResult: forceEnd // Flag to indicate if this was a forced end\n    };\n\n    localStorage.setItem(`battleResult_${battleId}`, JSON.stringify(result));\n\n    // Update the battle status in localStorage\n    if (battle) {\n      const updatedBattle = {\n        ...battle,\n        status: 'completed',\n        endTime: completedAt,\n        completed: true\n      };\n      localStorage.setItem('currentBattle', JSON.stringify(updatedBattle));\n    }\n\n    // Show result modal or navigate to results page\n    setTimeout(() => {\n      navigate(`/battle/${battleId}/results`);\n    }, 5000); // Increased to 5 seconds to give users time to see the result\n  };\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    const message = {\n      id: Date.now(),\n      sender: 'You',\n      text: newMessage,\n      timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n    };\n\n    setChatMessages([...chatMessages, message]);\n    setNewMessage('');\n\n    // Simulate opponent response\n    setTimeout(() => {\n      const responses = [\n        \"I'm still working on this problem.\",\n        \"This is challenging!\",\n        \"How are you approaching this?\",\n        \"I think I'm getting close.\",\n        \"Good luck!\"\n      ];\n\n      const opponentMessage = {\n        id: Date.now() + 1,\n        sender: opponent?.name || 'Opponent',\n        text: responses[Math.floor(Math.random() * responses.length)],\n        timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n      };\n\n      setChatMessages(prev => [...prev, opponentMessage]);\n    }, 2000);\n  };\n\n  const toggleFullScreen = () => {\n    setShowFullScreen(!showFullScreen);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"battle-arena-container\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <div className=\"loading-text\">Loading battle arena...</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`battle-arena-container ${showFullScreen ? 'fullscreen' : ''}`}>\n      <div className=\"battle-header\">\n        <div className=\"battle-info\">\n          <h1>{battle?.title || '1v1 Coding Battle'}</h1>\n          <div className=\"battle-meta\">\n            <span className=\"difficulty\">{battle?.difficulty || 'Medium'}</span>\n            <span className=\"category\">{battle?.category || 'Algorithms'}</span>\n            <span className=\"timer\">Time Left: {formatTime(timeLeft)}</span>\n            {battle?.originalDuration && (\n              <span className=\"duration\">Original Duration: {battle.originalDuration} mins</span>\n            )}\n            {isFriendBattle && (\n              <span className=\"friend-battle-badge\">\n                <span className=\"friend-icon\">👥</span> Friend Battle\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"battle-actions\">\n          <button className=\"fullscreen-btn\" onClick={toggleFullScreen}>\n            {showFullScreen ? 'Exit Fullscreen' : 'Fullscreen'}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"battle-progress-container\">\n        <div className=\"player-progress\">\n          <div className=\"player-info\">\n            <span className=\"player-name\">You</span>\n            <span className=\"progress-percentage\">{Math.round(userProgress)}%</span>\n          </div>\n          <div className=\"progress-bar\">\n            <div className=\"progress-fill\" style={{ width: `${userProgress}%` }}></div>\n          </div>\n        </div>\n\n        <div className=\"vs-indicator\">VS</div>\n\n        <div className=\"player-progress opponent\">\n          <div className=\"player-info\">\n            <span className=\"player-name\">{opponent?.name || 'Opponent'}</span>\n            <span className=\"progress-percentage\">{Math.round(opponentProgress)}%</span>\n          </div>\n          <div className=\"progress-bar\">\n            <div className=\"progress-fill\" style={{ width: `${opponentProgress}%` }}></div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"battle-content\">\n        <div className=\"problem-section\">\n          <div className=\"problem-header\">\n            <h2>{problem?.title || 'Problem Title'}</h2>\n            <div className=\"problem-difficulty\">{problem?.difficulty || 'Medium'}</div>\n          </div>\n\n          <div className=\"problem-description\">\n            <p>{problem?.description}</p>\n\n            <div className=\"examples\">\n              <h3>Examples:</h3>\n              {problem?.examples.map((example, index) => (\n                <div key={index} className=\"example\">\n                  <div className=\"example-input\">\n                    <strong>Input:</strong> {example.input}\n                  </div>\n                  <div className=\"example-output\">\n                    <strong>Output:</strong> {example.output}\n                  </div>\n                  {example.explanation && (\n                    <div className=\"example-explanation\">\n                      <strong>Explanation:</strong> {example.explanation}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n\n            <div className=\"constraints\">\n              <h3>Constraints:</h3>\n              <ul>\n                {problem?.constraints.map((constraint, index) => (\n                  <li key={index}>{constraint}</li>\n                ))}\n              </ul>\n            </div>\n\n            {showHint && (\n              <div className=\"hints\">\n                <h3>Hints:</h3>\n                <ul>\n                  {problem?.hints.map((hint, index) => (\n                    <li key={index}>{hint}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            {!showHint && (\n              <button className=\"hint-btn\" onClick={() => setShowHint(true)}>\n                Show Hints\n              </button>\n            )}\n\n            {showSolution && (\n              <div className=\"solution\">\n                <h3>Solution:</h3>\n                <pre>{problem?.solution}</pre>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"code-section\">\n          <div className=\"code-header\">\n            <select\n              value={language}\n              onChange={(e) => setLanguage(e.target.value)}\n              className=\"language-select\"\n            >\n              <option value=\"javascript\">JavaScript</option>\n              <option value=\"python\">Python</option>\n              <option value=\"java\">Java</option>\n              <option value=\"cpp\">C++</option>\n            </select>\n\n            <div className=\"code-actions\">\n              <button\n                className=\"run-btn\"\n                onClick={runCode}\n                disabled={isRunning || isSubmitting}\n              >\n                {isRunning ? 'Running...' : 'Run Code'}\n              </button>\n              <button\n                className=\"submit-btn\"\n                onClick={submitSolution}\n                disabled={isRunning || isSubmitting}\n              >\n                {isSubmitting ? 'Submitting...' : 'Submit Solution'}\n              </button>\n              {battle?.preventAutoEnd && (\n                <button\n                  className=\"complete-battle-btn\"\n                  onClick={() => endBattle(true, true)}\n                  disabled={battleEnded}\n                >\n                  Complete Battle\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"code-editor\">\n            <textarea\n              value={code}\n              onChange={(e) => setCode(e.target.value)}\n              className=\"code-textarea\"\n              spellCheck=\"false\"\n            />\n          </div>\n\n          <div className=\"test-results\">\n            <h3>Test Results:</h3>\n            {testResults.length > 0 ? (\n              <div className=\"results-list\">\n                {testResults.map((result, index) => (\n                  <div\n                    key={index}\n                    className={`result-item ${result.passed ? 'passed' : 'failed'}`}\n                  >\n                    <div className=\"result-header\">\n                      <span className=\"test-number\">Test {index + 1}</span>\n                      <span className=\"result-status\">\n                        {result.passed ? 'Passed' : 'Failed'}\n                      </span>\n                    </div>\n                    <div className=\"result-details\">\n                      <div className=\"result-input\">\n                        <strong>Input:</strong> {result.input}\n                      </div>\n                      <div className=\"result-expected\">\n                        <strong>Expected:</strong> {result.expectedOutput}\n                      </div>\n                      <div className=\"result-actual\">\n                        <strong>Your Output:</strong> {result.actualOutput}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"no-results\">\n                Run your code to see test results\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"chat-section\">\n          <div className=\"chat-header\">\n            <h3>Battle Chat</h3>\n            {isFriendBattle && (\n              <div className=\"friend-battle-chat-badge\">\n                <span className=\"friend-icon\">👥</span> Friend Battle Chat\n              </div>\n            )}\n          </div>\n\n          <div className=\"chat-messages\">\n            {chatMessages.length > 0 ? (\n              chatMessages.map(message => (\n                <div\n                  key={message.id}\n                  className={`chat-message ${message.sender === 'You' ? 'user' : 'opponent'}`}\n                >\n                  <div className=\"message-header\">\n                    <span className=\"message-sender\">{message.sender}</span>\n                    <span className=\"message-time\">{message.timestamp}</span>\n                  </div>\n                  <div className=\"message-text\">{message.text}</div>\n                </div>\n              ))\n            ) : (\n              <div className=\"no-messages\">\n                {isFriendBattle\n                  ? \"Chat with your friend while you solve the problem together!\"\n                  : \"No messages yet. Start the conversation!\"}\n              </div>\n            )}\n          </div>\n\n          <form className=\"chat-input\" onSubmit={sendMessage}>\n            <input\n              type=\"text\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              placeholder=\"Type a message...\"\n              disabled={battleEnded}\n            />\n            <button type=\"submit\" disabled={!newMessage.trim() || battleEnded}>\n              Send\n            </button>\n          </form>\n        </div>\n      </div>\n\n      {battleEnded && (\n        <div className=\"battle-ended-overlay\">\n          <div className=\"battle-result\">\n            <div className=\"result-icon\">{userProgress >= opponentProgress ? '🏆' : '🔄'}</div>\n            <h2>{userProgress >= opponentProgress ? 'You Won!' : 'You Lost!'}</h2>\n            <div className=\"battle-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Your Progress:</span>\n                <span className=\"stat-value\">{Math.round(userProgress)}%</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Opponent Progress:</span>\n                <span className=\"stat-value\">{Math.round(opponentProgress)}%</span>\n              </div>\n            </div>\n            <p className=\"result-message\">\n              {userProgress >= opponentProgress\n                ? \"Congratulations! You've successfully completed the challenge faster than your opponent.\"\n                : \"Good effort! Your opponent completed the challenge first, but you can try again.\"}\n            </p>\n            <div className=\"loading-dots\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n            <p className=\"redirect-message\">Redirecting to results page...</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CodingBattleArena;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}