{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\components\\\\TypingAnimation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './TypingAnimation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingAnimation = ({\n  text,\n  speed = 100,\n  delay = 0,\n  className = '',\n  onComplete = () => {}\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isTyping, setIsTyping] = useState(false);\n  const [isComplete, setIsComplete] = useState(false);\n  const timeoutRef = useRef(null);\n  useEffect(() => {\n    // Reset when text changes\n    setDisplayText('');\n    setCurrentIndex(0);\n    setIsComplete(false);\n    setIsTyping(false);\n\n    // Clear any existing timeout\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    // Start typing after delay\n    timeoutRef.current = setTimeout(() => {\n      setIsTyping(true);\n    }, delay);\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [text, delay]);\n  useEffect(() => {\n    if (!isTyping) return;\n    if (currentIndex < text.length) {\n      timeoutRef.current = setTimeout(() => {\n        setDisplayText(prev => prev + text[currentIndex]);\n        setCurrentIndex(prev => prev + 1);\n      }, speed);\n    } else {\n      setIsTyping(false);\n      setIsComplete(true);\n      onComplete();\n    }\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [currentIndex, isTyping, text, speed, onComplete]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `typing-animation ${className} ${isComplete ? 'complete' : ''}`,\n    children: [displayText, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"cursor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(TypingAnimation, \"Lchls/L/XR+IPHClbFZPIq955Fo=\");\n_c = TypingAnimation;\nexport default TypingAnimation;\nvar _c;\n$RefreshReg$(_c, \"TypingAnimation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","TypingAnimation","text","speed","delay","className","onComplete","_s","displayText","setDisplayText","currentIndex","setCurrentIndex","isTyping","setIsTyping","isComplete","setIsComplete","timeoutRef","current","clearTimeout","setTimeout","length","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/components/TypingAnimation.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './TypingAnimation.css';\n\nconst TypingAnimation = ({ text, speed = 100, delay = 0, className = '', onComplete = () => {} }) => {\n  const [displayText, setDisplayText] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isTyping, setIsTyping] = useState(false);\n  const [isComplete, setIsComplete] = useState(false);\n  const timeoutRef = useRef(null);\n\n  useEffect(() => {\n    // Reset when text changes\n    setDisplayText('');\n    setCurrentIndex(0);\n    setIsComplete(false);\n    setIsTyping(false);\n    \n    // Clear any existing timeout\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    \n    // Start typing after delay\n    timeoutRef.current = setTimeout(() => {\n      setIsTyping(true);\n    }, delay);\n    \n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [text, delay]);\n  \n  useEffect(() => {\n    if (!isTyping) return;\n    \n    if (currentIndex < text.length) {\n      timeoutRef.current = setTimeout(() => {\n        setDisplayText(prev => prev + text[currentIndex]);\n        setCurrentIndex(prev => prev + 1);\n      }, speed);\n    } else {\n      setIsTyping(false);\n      setIsComplete(true);\n      onComplete();\n    }\n    \n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [currentIndex, isTyping, text, speed, onComplete]);\n  \n  return (\n    <span className={`typing-animation ${className} ${isComplete ? 'complete' : ''}`}>\n      {displayText}\n      <span className=\"cursor\"></span>\n    </span>\n  );\n};\n\nexport default TypingAnimation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK,GAAG,GAAG;EAAEC,KAAK,GAAG,CAAC;EAAEC,SAAS,GAAG,EAAE;EAAEC,UAAU,GAAGA,CAAA,KAAM,CAAC;AAAE,CAAC,KAAK;EAAAC,EAAA;EACnG,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMoB,UAAU,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd;IACAY,cAAc,CAAC,EAAE,CAAC;IAClBE,eAAe,CAAC,CAAC,CAAC;IAClBI,aAAa,CAAC,KAAK,CAAC;IACpBF,WAAW,CAAC,KAAK,CAAC;;IAElB;IACA,IAAIG,UAAU,CAACC,OAAO,EAAE;MACtBC,YAAY,CAACF,UAAU,CAACC,OAAO,CAAC;IAClC;;IAEA;IACAD,UAAU,CAACC,OAAO,GAAGE,UAAU,CAAC,MAAM;MACpCN,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,EAAET,KAAK,CAAC;IAET,OAAO,MAAM;MACX,IAAIY,UAAU,CAACC,OAAO,EAAE;QACtBC,YAAY,CAACF,UAAU,CAACC,OAAO,CAAC;MAClC;IACF,CAAC;EACH,CAAC,EAAE,CAACf,IAAI,EAAEE,KAAK,CAAC,CAAC;EAEjBP,SAAS,CAAC,MAAM;IACd,IAAI,CAACe,QAAQ,EAAE;IAEf,IAAIF,YAAY,GAAGR,IAAI,CAACkB,MAAM,EAAE;MAC9BJ,UAAU,CAACC,OAAO,GAAGE,UAAU,CAAC,MAAM;QACpCV,cAAc,CAACY,IAAI,IAAIA,IAAI,GAAGnB,IAAI,CAACQ,YAAY,CAAC,CAAC;QACjDC,eAAe,CAACU,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MACnC,CAAC,EAAElB,KAAK,CAAC;IACX,CAAC,MAAM;MACLU,WAAW,CAAC,KAAK,CAAC;MAClBE,aAAa,CAAC,IAAI,CAAC;MACnBT,UAAU,CAAC,CAAC;IACd;IAEA,OAAO,MAAM;MACX,IAAIU,UAAU,CAACC,OAAO,EAAE;QACtBC,YAAY,CAACF,UAAU,CAACC,OAAO,CAAC;MAClC;IACF,CAAC;EACH,CAAC,EAAE,CAACP,YAAY,EAAEE,QAAQ,EAAEV,IAAI,EAAEC,KAAK,EAAEG,UAAU,CAAC,CAAC;EAErD,oBACEN,OAAA;IAAMK,SAAS,EAAE,oBAAoBA,SAAS,IAAIS,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;IAAAQ,QAAA,GAC9Ed,WAAW,eACZR,OAAA;MAAMK,SAAS,EAAC;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEX,CAAC;AAACnB,EAAA,CA1DIN,eAAe;AAAA0B,EAAA,GAAf1B,eAAe;AA4DrB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}