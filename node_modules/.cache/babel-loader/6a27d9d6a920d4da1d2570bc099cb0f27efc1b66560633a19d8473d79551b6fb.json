{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\AlgoHunt\\\\src\\\\pages\\\\InterviewPrep.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './InterviewPrep.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction InterviewPrep() {\n  _s();\n  const navigate = useNavigate();\n  const videoRef = useRef(null);\n  const streamRef = useRef(null);\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [interviews, setInterviews] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const [sessionInProgress, setSessionInProgress] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [currentInterview, setCurrentInterview] = useState(null);\n  const [feedback, setFeedback] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [cameraPermission, setCameraPermission] = useState(null);\n  // Practice mode states\n\n  // Practice mode states\n  const [practiceMode, setPracticeMode] = useState(false);\n  const [activityCapture, setActivityCapture] = useState([]);\n  const [practiceTimer, setPracticeTimer] = useState(0);\n  const [practiceTimerInterval, setPracticeTimerInterval] = useState(null);\n\n  // Check if user is logged in and initialize\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n    } else {\n      // Load mock interviews\n      loadMockInterviews();\n\n      // Request camera permission when component mounts\n      if (activeTab === 'dashboard') {\n        requestCameraPermission();\n      }\n    }\n\n    // Cleanup function to stop all tracks when component unmounts\n    return () => {\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [navigate]);\n\n  // Load mock interviews\n  const loadMockInterviews = () => {\n    const mockInterviews = [{\n      id: 1,\n      title: 'Frontend Developer Interview',\n      jobTitle: 'Senior Frontend Developer',\n      company: 'Tech Solutions Inc.',\n      interviewType: 'Technical',\n      difficulty: 'Senior',\n      duration: 30,\n      questions: [{\n        id: 1,\n        question: 'Explain the concept of closures in JavaScript and provide an example.',\n        category: 'Technical',\n        difficulty: 'Medium',\n        expectedAnswer: 'A closure is the combination of a function bundled together with references to its surrounding state. In JavaScript, closures are created every time a function is created, at function creation time. A closure allows a function to access variables from an outer function even after the outer function has returned.',\n        tips: 'Provide a practical example showing how closures can be used for data privacy or function factories.'\n      }, {\n        id: 2,\n        question: 'How would you optimize the performance of a React application?',\n        category: 'Technical',\n        difficulty: 'Hard',\n        expectedAnswer: 'React performance optimization techniques include: using React.memo for component memoization, implementing shouldComponentUpdate, using the useCallback and useMemo hooks, code splitting with React.lazy, virtualizing long lists, and minimizing unnecessary re-renders.',\n        tips: 'Mention specific tools like React Profiler, Lighthouse, or Chrome DevTools that you would use to identify performance bottlenecks.'\n      }, {\n        id: 3,\n        question: 'Describe a challenging project you worked on and how you overcame obstacles.',\n        category: 'Behavioral',\n        difficulty: 'Medium',\n        expectedAnswer: 'This is a behavioral question looking for your problem-solving abilities, resilience, and teamwork.',\n        tips: 'Use the STAR method (Situation, Task, Action, Result) to structure your answer. Be specific about the challenges and your contributions.'\n      }, {\n        id: 4,\n        question: 'How do you stay updated with the latest frontend technologies?',\n        category: 'Behavioral',\n        difficulty: 'Easy',\n        expectedAnswer: 'This question assesses your commitment to continuous learning and professional development.',\n        tips: 'Mention specific resources like blogs, podcasts, conferences, or open-source contributions that demonstrate your engagement with the community.'\n      }, {\n        id: 5,\n        question: 'Implement a debounce function in JavaScript.',\n        category: 'Coding',\n        difficulty: 'Hard',\n        expectedAnswer: 'A debounce function limits the rate at which a function can fire. It will delay the processing of the function until after a specified time has passed without the function being called again.',\n        tips: 'Focus on explaining your thought process as you code. Consider edge cases and optimizations.'\n      }],\n      sessions: []\n    }, {\n      id: 2,\n      title: 'Full Stack Developer Interview',\n      jobTitle: 'Full Stack Developer',\n      company: 'Innovative Apps LLC',\n      interviewType: 'Mixed',\n      difficulty: 'Mid-Level',\n      duration: 45,\n      questions: [{\n        id: 1,\n        question: 'Explain the difference between REST and GraphQL APIs.',\n        category: 'Technical',\n        difficulty: 'Medium',\n        expectedAnswer: 'REST APIs expose a separate endpoint for each resource, while GraphQL uses a single endpoint where clients can specify exactly what data they need. REST often leads to over-fetching or under-fetching of data, while GraphQL allows clients to request only the data they need.',\n        tips: 'Discuss the pros and cons of each approach and when you might choose one over the other.'\n      }, {\n        id: 2,\n        question: 'How would you design a database schema for a social media platform?',\n        category: 'System Design',\n        difficulty: 'Hard',\n        expectedAnswer: 'A social media platform database would typically include tables for users, posts, comments, likes, friendships/follows, notifications, and messages. Consider relationships, indexing, and scalability concerns.',\n        tips: 'Discuss both relational and NoSQL approaches, and explain how you would handle scale issues like high read/write volumes.'\n      }, {\n        id: 3,\n        question: 'Tell me about a time when you had to learn a new technology quickly.',\n        category: 'Behavioral',\n        difficulty: 'Medium',\n        expectedAnswer: 'This question assesses your ability to adapt and learn quickly in a fast-paced environment.',\n        tips: 'Use the STAR method and focus on your learning process, not just the outcome.'\n      }],\n      sessions: []\n    }, {\n      id: 3,\n      title: 'Data Science Interview',\n      jobTitle: 'Data Scientist',\n      company: 'Analytics Insights Corp',\n      interviewType: 'Technical',\n      difficulty: 'Senior',\n      duration: 60,\n      questions: [{\n        id: 1,\n        question: 'Explain the difference between supervised and unsupervised learning with examples.',\n        category: 'Technical',\n        difficulty: 'Medium',\n        expectedAnswer: 'Supervised learning uses labeled data to train models (e.g., classification, regression), while unsupervised learning finds patterns in unlabeled data (e.g., clustering, dimensionality reduction).',\n        tips: 'Provide specific algorithm examples for each type and real-world applications.'\n      }, {\n        id: 2,\n        question: 'How would you handle imbalanced datasets in classification problems?',\n        category: 'Technical',\n        difficulty: 'Hard',\n        expectedAnswer: 'Techniques include resampling methods (oversampling minority class or undersampling majority class), synthetic data generation (SMOTE), algorithm-level approaches (cost-sensitive learning), and ensemble methods.',\n        tips: 'Discuss the trade-offs of different approaches and how you would evaluate model performance on imbalanced data.'\n      }, {\n        id: 3,\n        question: 'Describe a data science project where you had to clean and preprocess messy data.',\n        category: 'Behavioral',\n        difficulty: 'Medium',\n        expectedAnswer: \"This question assesses your practical experience with data cleaning and preprocessing, which is often 80% of a data scientist's job.\",\n        tips: 'Detail specific techniques you used (handling missing values, outliers, feature engineering) and how they improved your model.'\n      }, {\n        id: 4,\n        question: 'Implement a function to detect outliers in a dataset using the IQR method.',\n        category: 'Coding',\n        difficulty: 'Medium',\n        expectedAnswer: 'The IQR (Interquartile Range) method identifies outliers as values below Q1 - 1.5*IQR or above Q3 + 1.5*IQR, where Q1 is the first quartile and Q3 is the third quartile.',\n        tips: 'Explain why you might choose IQR over other methods like z-score and discuss the limitations.'\n      }],\n      sessions: []\n    }, {\n      id: 4,\n      title: 'System Design Interview',\n      jobTitle: 'Senior Software Engineer',\n      company: 'ScaleTech Solutions',\n      interviewType: 'System Design',\n      difficulty: 'Senior',\n      duration: 60,\n      questions: [{\n        id: 1,\n        question: 'Design a URL shortening service like TinyURL.',\n        category: 'System Design',\n        difficulty: 'Medium',\n        expectedAnswer: 'A URL shortener requires components for URL generation (hash function), storage (database for mapping short to long URLs), redirection service, and analytics. Consider scalability, availability, and potential bottlenecks.',\n        tips: 'Follow a structured approach: requirements clarification, system interface definition, data model, algorithm design, scaling considerations, and potential improvements.'\n      }, {\n        id: 2,\n        question: \"How would you design Twitter's newsfeed functionality?\",\n        category: 'System Design',\n        difficulty: 'Hard',\n        expectedAnswer: \"Twitter's newsfeed requires handling high write volume (tweets), complex read patterns (timeline generation), and real-time updates. Consider fan-out approaches (push vs. pull), caching strategies, and database choices.\",\n        tips: 'Discuss trade-offs between different approaches and how you would handle scale issues like celebrity users with millions of followers.'\n      }, {\n        id: 3,\n        question: 'Design a distributed cache system.',\n        category: 'System Design',\n        difficulty: 'Hard',\n        expectedAnswer: 'A distributed cache system needs to address data partitioning, replication, consistency, fault tolerance, eviction policies, and cache invalidation strategies.',\n        tips: 'Reference existing systems like Redis or Memcached and explain how you would handle specific challenges like hot keys or cache stampedes.'\n      }],\n      sessions: []\n    }, {\n      id: 5,\n      title: 'Behavioral Interview',\n      jobTitle: 'Product Manager',\n      company: 'User-First Products',\n      interviewType: 'Behavioral',\n      difficulty: 'Mid-Level',\n      duration: 45,\n      questions: [{\n        id: 1,\n        question: 'Tell me about a time when you had to make a difficult decision with limited information.',\n        category: 'Behavioral',\n        difficulty: 'Medium',\n        expectedAnswer: 'This question assesses your decision-making process, risk assessment, and judgment under uncertainty.',\n        tips: 'Use the STAR method and focus on your analytical approach, how you gathered what information you could, and how you evaluated options.'\n      }, {\n        id: 2,\n        question: 'Describe a situation where you had to work with a difficult team member or stakeholder.',\n        category: 'Behavioral',\n        difficulty: 'Medium',\n        expectedAnswer: 'This question evaluates your interpersonal skills, conflict resolution abilities, and emotional intelligence.',\n        tips: 'Focus on how you maintained professionalism, sought to understand their perspective, and worked toward a positive outcome.'\n      }, {\n        id: 3,\n        question: 'Give an example of a time when you failed to meet a goal or deadline. How did you handle it?',\n        category: 'Behavioral',\n        difficulty: 'Hard',\n        expectedAnswer: 'This question assesses your accountability, resilience, and ability to learn from failures.',\n        tips: 'Be honest about the failure, take responsibility, and emphasize what you learned and how you applied those lessons later.'\n      }, {\n        id: 4,\n        question: 'Tell me about a time when you had to influence someone without having direct authority over them.',\n        category: 'Behavioral',\n        difficulty: 'Hard',\n        expectedAnswer: \"This question evaluates your leadership, persuasion skills, and ability to build consensus.\",\n        tips: \"Focus on how you built relationships, understood others' motivations, and communicated effectively to achieve buy-in.\"\n      }],\n      sessions: []\n    }];\n    setInterviews(mockInterviews);\n  };\n\n  // Request camera permission\n  const requestCameraPermission = async () => {\n    try {\n      // Request both video and audio permissions\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 1280\n          },\n          height: {\n            ideal: 720\n          },\n          facingMode: \"user\"\n        },\n        audio: true\n      });\n\n      // Save the stream reference\n      streamRef.current = stream;\n\n      // Set the stream as the video source\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n\n        // Ensure video plays when ready\n        videoRef.current.onloadedmetadata = () => {\n          videoRef.current.play().catch(e => {\n            console.error('Error playing video:', e);\n          });\n        };\n      }\n      setCameraPermission('granted');\n      console.log('Camera permission granted and stream connected');\n      return true;\n    } catch (err) {\n      console.error('Error accessing camera:', err);\n      setCameraPermission('denied');\n      alert('Camera access is required for the interview preparation. Please allow camera access and try again.');\n      return false;\n    }\n  };\n\n  // Start interview session\n  const startInterviewSession = async interview => {\n    const hasPermission = cameraPermission === 'granted' || (await requestCameraPermission());\n    if (!hasPermission) {\n      alert('Camera permission is required for the interview session.');\n      return;\n    }\n    setCurrentInterview(interview);\n    setCurrentQuestion(interview.questions[0]);\n    setQuestionIndex(0);\n    setSessionInProgress(true);\n    setActiveTab('session');\n    setFeedback(null);\n  };\n\n  // End interview session\n  const endInterviewSession = () => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n    }\n    setSessionInProgress(false);\n    setIsRecording(false);\n    setCurrentInterview(null);\n    setCurrentQuestion(null);\n    setActiveTab('dashboard');\n\n    // Exit fullscreen if enabled\n    if (isFullScreen) {\n      exitFullScreen();\n    }\n\n    // Disable anti-cheating mode\n    if (antiCheatingEnabled) {\n      disableAntiCheating();\n    }\n\n    // Stop battle mode if active\n    if (battleMode) {\n      endBattleMode();\n    }\n\n    // Stop practice mode if active\n    if (practiceMode) {\n      endPracticeMode();\n    }\n  };\n\n  // Anti-cheating functions\n  const enableAntiCheating = () => {\n    setAntiCheatingEnabled(true);\n    setCheatingDetected(false);\n    setCheatingWarnings(0);\n    setCheatingLogs([]);\n\n    // Disable copy-paste\n    document.addEventListener('copy', preventCopyPaste);\n    document.addEventListener('paste', preventCopyPaste);\n    document.addEventListener('cut', preventCopyPaste);\n\n    // Monitor for screen sharing\n    if (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n      monitorScreenSharing();\n    }\n\n    // Monitor for tab visibility changes (switching tabs)\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n\n    // Log anti-cheating enabled\n    addCheatingLog('Anti-cheating mode enabled');\n\n    // Enter fullscreen mode\n    enterFullScreen();\n  };\n  const disableAntiCheating = () => {\n    setAntiCheatingEnabled(false);\n\n    // Re-enable copy-paste\n    document.removeEventListener('copy', preventCopyPaste);\n    document.removeEventListener('paste', preventCopyPaste);\n    document.removeEventListener('cut', preventCopyPaste);\n\n    // Stop monitoring tab visibility\n    document.removeEventListener('visibilitychange', handleVisibilityChange);\n\n    // Log anti-cheating disabled\n    addCheatingLog('Anti-cheating mode disabled');\n  };\n  const preventCopyPaste = e => {\n    e.preventDefault();\n    detectCheating('Copy-paste attempt detected');\n    return false;\n  };\n  const monitorScreenSharing = () => {\n    // This is a simplified version - in a real implementation,\n    // you would need a more sophisticated approach\n    window.addEventListener('blur', () => {\n      detectCheating('Possible screen sharing detected (window lost focus)');\n    });\n  };\n  const handleVisibilityChange = () => {\n    if (document.hidden) {\n      detectCheating('Tab switching detected');\n    }\n  };\n  const detectCheating = reason => {\n    setCheatingDetected(true);\n    setCheatingWarnings(prev => prev + 1);\n    addCheatingLog(reason);\n\n    // Alert the user\n    alert(`Warning: ${reason}. This activity is not allowed during the interview.`);\n\n    // If too many warnings, end the session\n    if (cheatingWarnings >= 2) {\n      alert('Too many violations detected. The interview session will be terminated.');\n      endInterviewSession();\n    }\n  };\n  const addCheatingLog = message => {\n    const log = {\n      timestamp: new Date().toISOString(),\n      message\n    };\n    setCheatingLogs(prev => [...prev, log]);\n  };\n\n  // Fullscreen functions\n  const enterFullScreen = () => {\n    const element = document.documentElement;\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    }\n    setIsFullScreen(true);\n\n    // Add event listener for fullscreen change\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    document.addEventListener('webkitfullscreenchange', handleFullscreenChange);\n    document.addEventListener('mozfullscreenchange', handleFullscreenChange);\n    document.addEventListener('MSFullscreenChange', handleFullscreenChange);\n  };\n  const exitFullScreen = () => {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n    setIsFullScreen(false);\n\n    // Remove event listeners\n    document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    document.removeEventListener('webkitfullscreenchange', handleFullscreenChange);\n    document.removeEventListener('mozfullscreenchange', handleFullscreenChange);\n    document.removeEventListener('MSFullscreenChange', handleFullscreenChange);\n  };\n  const handleFullscreenChange = () => {\n    const isCurrentlyFullscreen = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n    if (!isCurrentlyFullscreen && isFullScreen && antiCheatingEnabled) {\n      detectCheating('Fullscreen mode exited');\n      // Try to re-enter fullscreen\n      setTimeout(() => {\n        enterFullScreen();\n      }, 1000);\n    }\n  };\n\n  // Start recording\n  const startRecording = () => {\n    setIsRecording(true);\n    // In a real implementation, this would start recording the video\n    console.log('Recording started');\n  };\n\n  // Stop recording and analyze\n  const stopRecordingAndAnalyze = () => {\n    setIsRecording(false);\n    setLoading(true);\n\n    // In a real implementation, this would stop recording and send the video for analysis\n    // For now, we'll simulate the analysis with a timeout\n    setTimeout(() => {\n      // Mock feedback\n      const mockFeedback = {\n        overallScore: Math.floor(Math.random() * 30) + 70,\n        // 70-100\n        technicalAccuracy: Math.floor(Math.random() * 30) + 70,\n        communicationScore: Math.floor(Math.random() * 30) + 70,\n        confidenceScore: Math.floor(Math.random() * 30) + 70,\n        bodyLanguageScore: Math.floor(Math.random() * 30) + 70,\n        strengths: ['Clear explanation of technical concepts', 'Good problem-solving approach', 'Maintained good eye contact throughout'],\n        areasForImprovement: ['Could provide more specific examples', 'Reduce use of filler words like \"um\" and \"like\"', 'Consider more concise answers to behavioral questions'],\n        detailedFeedback: [{\n          timestamp: 45,\n          feedback: 'Excellent explanation of the algorithm',\n          category: 'Technical',\n          severity: 'Positive'\n        }, {\n          timestamp: 120,\n          feedback: 'Consider maintaining better posture here',\n          category: 'Body Language',\n          severity: 'Suggestion'\n        }, {\n          timestamp: 180,\n          feedback: 'Too many filler words in this response',\n          category: 'Communication',\n          severity: 'Minor Issue'\n        }]\n      };\n      setFeedback(mockFeedback);\n      setLoading(false);\n    }, 2000);\n  };\n\n  // Move to next question\n  const nextQuestion = () => {\n    if (currentInterview && questionIndex < currentInterview.questions.length - 1) {\n      setQuestionIndex(questionIndex + 1);\n      setCurrentQuestion(currentInterview.questions[questionIndex + 1]);\n      setFeedback(null);\n\n      // Update battle score if in battle mode\n      if (battleMode && feedback) {\n        updateBattleScore();\n      }\n\n      // Capture activity if in practice mode\n      if (practiceMode) {\n        captureActivity();\n      }\n    } else {\n      // End of interview\n      if (battleMode) {\n        finishBattle();\n      } else if (practiceMode) {\n        endPracticeMode();\n      } else {\n        endInterviewSession();\n      }\n    }\n  };\n\n  // 1v1 Battle mode functions\n  const startBattleMode = async interview => {\n    // Request camera permission first\n    const hasPermission = cameraPermission === 'granted' || (await requestCameraPermission());\n    if (!hasPermission) {\n      alert('Camera permission is required for battle mode.');\n      return;\n    }\n    setBattleMode(true);\n    setBattleScore({\n      user: 0,\n      opponent: 0\n    });\n    setBattleTimer(0);\n\n    // Find a mock opponent\n    const mockOpponents = [{\n      id: 1,\n      name: 'Alex Chen',\n      avatar: 'avatar1.jpg',\n      level: 'Senior',\n      specialty: 'Frontend'\n    }, {\n      id: 2,\n      name: 'Jordan Smith',\n      avatar: 'avatar2.jpg',\n      level: 'Mid-Level',\n      specialty: 'Backend'\n    }, {\n      id: 3,\n      name: 'Taylor Kim',\n      avatar: 'avatar3.jpg',\n      level: 'Senior',\n      specialty: 'Full Stack'\n    }];\n\n    // Randomly select an opponent\n    const randomOpponent = mockOpponents[Math.floor(Math.random() * mockOpponents.length)];\n    setOpponent(randomOpponent);\n\n    // Start battle timer\n    const interval = setInterval(() => {\n      setBattleTimer(prev => prev + 1);\n    }, 1000);\n    setBattleTimerInterval(interval);\n\n    // Enable anti-cheating for battle mode\n    enableAntiCheating();\n\n    // Start the interview session with the selected interview\n    setCurrentInterview(interview);\n    setCurrentQuestion(interview.questions[0]);\n    setQuestionIndex(0);\n    setSessionInProgress(true);\n    setActiveTab('session');\n    setFeedback(null);\n  };\n  const endBattleMode = () => {\n    setBattleMode(false);\n    setOpponent(null);\n\n    // Clear battle timer\n    if (battleTimerInterval) {\n      clearInterval(battleTimerInterval);\n      setBattleTimerInterval(null);\n    }\n\n    // Disable anti-cheating\n    if (antiCheatingEnabled) {\n      disableAntiCheating();\n    }\n  };\n  const updateBattleScore = () => {\n    // Calculate score based on feedback\n    const userScore = Math.round((feedback.overallScore + feedback.technicalAccuracy + feedback.communicationScore + feedback.confidenceScore) / 4);\n\n    // Generate a random opponent score that's competitive\n    const minOpponentScore = Math.max(userScore - 15, 50);\n    const maxOpponentScore = Math.min(userScore + 15, 100);\n    const opponentScore = Math.floor(Math.random() * (maxOpponentScore - minOpponentScore + 1)) + minOpponentScore;\n\n    // Update the battle score\n    setBattleScore(prev => ({\n      user: prev.user + userScore,\n      opponent: prev.opponent + opponentScore\n    }));\n\n    // Show the score comparison\n    alert(`Question ${questionIndex + 1} scores:\\nYou: ${userScore}\\n${opponent.name}: ${opponentScore}`);\n  };\n  const finishBattle = () => {\n    // Determine the winner\n    const {\n      user,\n      opponent: opponentScore\n    } = battleScore;\n    let resultMessage;\n    if (user > opponentScore) {\n      resultMessage = `Congratulations! You won the battle against ${opponent.name}!\\nFinal Score: ${user} - ${opponentScore}`;\n    } else if (user < opponentScore) {\n      resultMessage = `You lost the battle against ${opponent.name}.\\nFinal Score: ${user} - ${opponentScore}\\nKeep practicing!`;\n    } else {\n      resultMessage = `The battle ended in a tie!\\nFinal Score: ${user} - ${opponentScore}`;\n    }\n\n    // Show the final result\n    alert(resultMessage);\n\n    // End the battle mode\n    endBattleMode();\n\n    // End the interview session\n    endInterviewSession();\n  };\n\n  // Practice mode functions\n  const startPracticeMode = async interview => {\n    // Request camera permission first\n    const hasPermission = cameraPermission === 'granted' || (await requestCameraPermission());\n    if (!hasPermission) {\n      alert('Camera permission is required for practice mode.');\n      return;\n    }\n    setPracticeMode(true);\n    setActivityCapture([]);\n    setPracticeTimer(0);\n\n    // Start practice timer\n    const interval = setInterval(() => {\n      setPracticeTimer(prev => prev + 1);\n\n      // Capture activity every 30 seconds\n      if (practiceTimer % 30 === 0 && practiceTimer > 0) {\n        captureActivity();\n      }\n    }, 1000);\n    setPracticeTimerInterval(interval);\n\n    // Enable anti-cheating if set in settings\n    if (antiCheatingEnabled) {\n      enableAntiCheating();\n    }\n\n    // Start the interview session with the selected interview\n    setCurrentInterview(interview);\n    setCurrentQuestion(interview.questions[0]);\n    setQuestionIndex(0);\n    setSessionInProgress(true);\n    setActiveTab('session');\n    setFeedback(null);\n  };\n  const endPracticeMode = () => {\n    setPracticeMode(false);\n\n    // Clear practice timer\n    if (practiceTimerInterval) {\n      clearInterval(practiceTimerInterval);\n      setPracticeTimerInterval(null);\n    }\n\n    // Generate practice report\n    generatePracticeReport();\n\n    // End the interview session\n    endInterviewSession();\n  };\n  const captureActivity = () => {\n    // In a real implementation, this would capture screenshots, typing activity, etc.\n    // For this demo, we'll just log the timestamp and question\n\n    const activity = {\n      timestamp: new Date().toISOString(),\n      questionIndex,\n      question: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question,\n      isRecording,\n      elapsedTime: practiceTimer\n    };\n    setActivityCapture(prev => [...prev, activity]);\n\n    // Take a \"screenshot\" (in a real implementation)\n    console.log(`Activity captured at ${formatTime(practiceTimer)}`);\n  };\n  const generatePracticeReport = () => {\n    // In a real implementation, this would generate a comprehensive report\n    // For this demo, we'll just show a simple alert\n\n    const totalTime = formatTime(practiceTimer);\n    const questionsAttempted = activityCapture.filter(a => a.isRecording).length;\n    alert(`Practice Session Report:\n    - Total practice time: ${totalTime}\n    - Questions attempted: ${questionsAttempted}\n    - Activity captures: ${activityCapture.length}\n\n    Keep practicing to improve your interview skills!`);\n  };\n\n  // Helper function to format time (seconds to MM:SS)\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  // Render dashboard tab\n  const renderDashboard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interview-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Interview Preparation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"dashboard-description\",\n      children: \"Practice your interview skills with our AI-powered interview simulator. Get real-time feedback on your responses, body language, and communication style.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Interview Templates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 9\n      }, this), interviews.map(interview => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interview-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"interview-card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: interview.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `interview-type ${interview.interviewType.toLowerCase()}`,\n            children: interview.interviewType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"interview-card-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Position:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 18\n            }, this), \" \", interview.jobTitle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Company:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 18\n            }, this), \" \", interview.company]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Difficulty:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 18\n            }, this), \" \", interview.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Duration:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 18\n            }, this), \" \", interview.duration, \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Questions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 18\n            }, this), \" \", interview.questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"interview-card-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => startInterviewSession(interview),\n              children: \"Start Practice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => startPracticeMode(interview),\n              children: \"Practice with Camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-battle\",\n              onClick: () => startBattleMode(interview),\n              children: \"1v1 Battle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 15\n          }, this), antiCheatingEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"anti-cheat-badge\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge\",\n              children: \"Anti-Cheat Enabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 13\n        }, this)]\n      }, interview.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 791,\n    columnNumber: 5\n  }, this);\n\n  // Render interview session tab\n  const renderSession = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interview-session\",\n    children: currentQuestion && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"session-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentInterview.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-counter\",\n          children: [\"Question \", questionIndex + 1, \" of \", currentInterview.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 11\n      }, this), battleMode && opponent && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-opponent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"opponent-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"opponent-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"opponent-name\",\n              children: opponent.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"opponent-level\",\n              children: [opponent.level, \" \", opponent.specialty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-score\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"You: \", battleScore.user]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Opponent: \", battleScore.opponent]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-timer\",\n          children: [\"Time: \", formatTime(battleTimer)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 13\n      }, this), practiceMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"practice-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"practice-timer\",\n          children: [\"Practice Time: \", formatTime(practiceTimer)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"practice-captures\",\n          children: [\"Activity Captures: \", activityCapture.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"session-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            muted: false,\n            className: isRecording ? 'recording' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 15\n          }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recording-indicator\",\n            children: \"Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 31\n          }, this), practiceMode && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-capture-indicator\",\n            children: \"Activity Capture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 32\n          }, this), antiCheatingEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"anti-cheat-badge badge\",\n            children: \"Anti-Cheat Enabled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-category\",\n              children: [currentQuestion.category, \" - \", currentQuestion.difficulty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 907,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"question-text\",\n              children: currentQuestion.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-actions\",\n              children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: startRecording,\n                disabled: loading,\n                children: \"Start Answering\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 914,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: stopRecordingAndAnalyze,\n                disabled: loading,\n                children: \"Stop Recording\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 15\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Analyzing your response...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 17\n          }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"AI Feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedback-scores\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-score\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-label\",\n                  children: \"Overall\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 946,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-value\",\n                  children: feedback.overallScore\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 947,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 945,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-score\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-label\",\n                  children: \"Technical\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 950,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-value\",\n                  children: feedback.technicalAccuracy\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 951,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-score\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-label\",\n                  children: \"Communication\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 954,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-value\",\n                  children: feedback.communicationScore\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 955,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-score\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-label\",\n                  children: \"Confidence\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 958,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-value\",\n                  children: feedback.confidenceScore\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 959,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 957,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-score\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-label\",\n                  children: \"Body Language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 962,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-value\",\n                  children: feedback.bodyLanguageScore\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 963,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedback-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Strengths\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 969,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: feedback.strengths.map((strength, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: strength\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 972,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 970,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 968,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Areas for Improvement\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 978,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: feedback.areasForImprovement.map((area, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: area\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 981,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 979,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 967,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary next-question-btn\",\n              onClick: nextQuestion,\n              children: questionIndex < currentInterview.questions.length - 1 ? 'Next Question' : 'Finish Interview'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary end-session-btn\",\n        onClick: endInterviewSession,\n        children: \"End Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 850,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interview-prep-container\",\n    children: [!sessionInProgress ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'dashboard' ? 'active' : '',\n        onClick: () => setActiveTab('dashboard'),\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'history' ? 'active' : '',\n        onClick: () => setActiveTab('history'),\n        children: \"History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'settings' ? 'active' : '',\n        onClick: () => setActiveTab('settings'),\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1027,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1014,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-content\",\n      children: [activeTab === 'dashboard' && !sessionInProgress && renderDashboard(), activeTab === 'history' && !sessionInProgress && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interview-history\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Interview History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your past interview sessions will appear here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 11\n      }, this), activeTab === 'settings' && !sessionInProgress && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interview-settings\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"settings-description\",\n          children: \"Customize your interview experience and security settings.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Security Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Anti-Cheating Mode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1054,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Prevents copy-paste, screen sharing, and tab switching during interviews and battles.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1055,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1053,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"toggle-switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: antiCheatingEnabled,\n                  onChange: () => {\n                    if (antiCheatingEnabled) {\n                      disableAntiCheating();\n                    } else {\n                      enableAntiCheating();\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1059,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"toggle-slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1070,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1052,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Full Screen Mode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Forces the application to run in full screen during interviews and battles.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1076,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"toggle-switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: isFullScreen,\n                  onChange: () => {\n                    if (isFullScreen) {\n                      exitFullScreen();\n                    } else {\n                      enterFullScreen();\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1082,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"toggle-slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1093,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1081,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1075,\n            columnNumber: 15\n          }, this), antiCheatingEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"anti-cheat-logs\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Anti-Cheating Logs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1100,\n              columnNumber: 19\n            }, this), cheatingLogs.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"logs-list\",\n              children: cheatingLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"log-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"log-time\",\n                  children: new Date(log.timestamp).toLocaleTimeString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1105,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"log-message\",\n                  children: log.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1106,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1104,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1102,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No logs recorded yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1099,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1049,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Camera Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Camera Test\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Test your camera before starting an interview.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1123,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: requestCameraPermission,\n                children: \"Test Camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1126,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 15\n          }, this), cameraPermission === 'granted' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"camera-preview-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              autoPlay: true,\n              muted: true,\n              className: \"camera-preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"camera-status success\",\n              children: \"Camera is working properly!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1143,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1136,\n            columnNumber: 17\n          }, this), cameraPermission === 'denied' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"camera-error\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"camera-status error\",\n              children: \"Camera access denied. Please check your browser settings.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1149,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 11\n      }, this), (activeTab === 'session' || sessionInProgress) && renderSession()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1012,\n    columnNumber: 5\n  }, this);\n}\n_s(InterviewPrep, \"rRyV7KMEil6AaVVOsCItduXmYXM=\", false, function () {\n  return [useNavigate];\n});\n_c = InterviewPrep;\nexport default InterviewPrep;\nvar _c;\n$RefreshReg$(_c, \"InterviewPrep\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","InterviewPrep","_s","navigate","videoRef","streamRef","activeTab","setActiveTab","interviews","setInterviews","isRecording","setIsRecording","sessionInProgress","setSessionInProgress","currentQuestion","setCurrentQuestion","questionIndex","setQuestionIndex","currentInterview","setCurrentInterview","feedback","setFeedback","loading","setLoading","cameraPermission","setCameraPermission","practiceMode","setPracticeMode","activityCapture","setActivityCapture","practiceTimer","setPracticeTimer","practiceTimerInterval","setPracticeTimerInterval","isLoggedIn","localStorage","getItem","loadMockInterviews","requestCameraPermission","current","getTracks","forEach","track","stop","mockInterviews","id","title","jobTitle","company","interviewType","difficulty","duration","questions","question","category","expectedAnswer","tips","sessions","stream","navigator","mediaDevices","getUserMedia","video","width","ideal","height","facingMode","audio","srcObject","onloadedmetadata","play","catch","e","console","error","log","err","alert","startInterviewSession","interview","hasPermission","endInterviewSession","isFullScreen","exitFullScreen","antiCheatingEnabled","disableAntiCheating","battleMode","endBattleMode","endPracticeMode","enableAntiCheating","setAntiCheatingEnabled","setCheatingDetected","setCheatingWarnings","setCheatingLogs","document","addEventListener","preventCopyPaste","getDisplayMedia","monitorScreenSharing","handleVisibilityChange","addCheatingLog","enterFullScreen","removeEventListener","preventDefault","detectCheating","window","hidden","reason","prev","cheatingWarnings","message","timestamp","Date","toISOString","element","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","setIsFullScreen","handleFullscreenChange","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","isCurrentlyFullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","setTimeout","startRecording","stopRecordingAndAnalyze","mockFeedback","overallScore","Math","floor","random","technicalAccuracy","communicationScore","confidenceScore","bodyLanguageScore","strengths","areasForImprovement","detailedFeedback","severity","nextQuestion","length","updateBattleScore","captureActivity","finishBattle","startBattleMode","setBattleMode","setBattleScore","user","opponent","setBattleTimer","mockOpponents","name","avatar","level","specialty","randomOpponent","setOpponent","interval","setInterval","setBattleTimerInterval","battleTimerInterval","clearInterval","userScore","round","minOpponentScore","max","maxOpponentScore","min","opponentScore","battleScore","resultMessage","startPracticeMode","generatePracticeReport","activity","elapsedTime","formatTime","totalTime","questionsAttempted","filter","a","seconds","minutes","remainingSeconds","toString","padStart","renderDashboard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","toLowerCase","onClick","renderSession","battleTimer","ref","autoPlay","muted","disabled","strength","index","area","type","checked","onChange","cheatingLogs","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/AlgoHunt/src/pages/InterviewPrep.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './InterviewPrep.css';\n\nfunction InterviewPrep() {\n  const navigate = useNavigate();\n  const videoRef = useRef(null);\n  const streamRef = useRef(null);\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [interviews, setInterviews] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const [sessionInProgress, setSessionInProgress] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [currentInterview, setCurrentInterview] = useState(null);\n  const [feedback, setFeedback] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [cameraPermission, setCameraPermission] = useState(null);\n  // Practice mode states\n\n  // Practice mode states\n  const [practiceMode, setPracticeMode] = useState(false);\n  const [activityCapture, setActivityCapture] = useState([]);\n  const [practiceTimer, setPracticeTimer] = useState(0);\n  const [practiceTimerInterval, setPracticeTimerInterval] = useState(null);\n\n  // Check if user is logged in and initialize\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      navigate('/login');\n    } else {\n      // Load mock interviews\n      loadMockInterviews();\n\n      // Request camera permission when component mounts\n      if (activeTab === 'dashboard') {\n        requestCameraPermission();\n      }\n    }\n\n    // Cleanup function to stop all tracks when component unmounts\n    return () => {\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [navigate]);\n\n  // Load mock interviews\n  const loadMockInterviews = () => {\n    const mockInterviews = [\n      {\n        id: 1,\n        title: 'Frontend Developer Interview',\n        jobTitle: 'Senior Frontend Developer',\n        company: 'Tech Solutions Inc.',\n        interviewType: 'Technical',\n        difficulty: 'Senior',\n        duration: 30,\n        questions: [\n          {\n            id: 1,\n            question: 'Explain the concept of closures in JavaScript and provide an example.',\n            category: 'Technical',\n            difficulty: 'Medium',\n            expectedAnswer: 'A closure is the combination of a function bundled together with references to its surrounding state. In JavaScript, closures are created every time a function is created, at function creation time. A closure allows a function to access variables from an outer function even after the outer function has returned.',\n            tips: 'Provide a practical example showing how closures can be used for data privacy or function factories.'\n          },\n          {\n            id: 2,\n            question: 'How would you optimize the performance of a React application?',\n            category: 'Technical',\n            difficulty: 'Hard',\n            expectedAnswer: 'React performance optimization techniques include: using React.memo for component memoization, implementing shouldComponentUpdate, using the useCallback and useMemo hooks, code splitting with React.lazy, virtualizing long lists, and minimizing unnecessary re-renders.',\n            tips: 'Mention specific tools like React Profiler, Lighthouse, or Chrome DevTools that you would use to identify performance bottlenecks.'\n          },\n          {\n            id: 3,\n            question: 'Describe a challenging project you worked on and how you overcame obstacles.',\n            category: 'Behavioral',\n            difficulty: 'Medium',\n            expectedAnswer: 'This is a behavioral question looking for your problem-solving abilities, resilience, and teamwork.',\n            tips: 'Use the STAR method (Situation, Task, Action, Result) to structure your answer. Be specific about the challenges and your contributions.'\n          },\n          {\n            id: 4,\n            question: 'How do you stay updated with the latest frontend technologies?',\n            category: 'Behavioral',\n            difficulty: 'Easy',\n            expectedAnswer: 'This question assesses your commitment to continuous learning and professional development.',\n            tips: 'Mention specific resources like blogs, podcasts, conferences, or open-source contributions that demonstrate your engagement with the community.'\n          },\n          {\n            id: 5,\n            question: 'Implement a debounce function in JavaScript.',\n            category: 'Coding',\n            difficulty: 'Hard',\n            expectedAnswer: 'A debounce function limits the rate at which a function can fire. It will delay the processing of the function until after a specified time has passed without the function being called again.',\n            tips: 'Focus on explaining your thought process as you code. Consider edge cases and optimizations.'\n          }\n        ],\n        sessions: []\n      },\n      {\n        id: 2,\n        title: 'Full Stack Developer Interview',\n        jobTitle: 'Full Stack Developer',\n        company: 'Innovative Apps LLC',\n        interviewType: 'Mixed',\n        difficulty: 'Mid-Level',\n        duration: 45,\n        questions: [\n          {\n            id: 1,\n            question: 'Explain the difference between REST and GraphQL APIs.',\n            category: 'Technical',\n            difficulty: 'Medium',\n            expectedAnswer: 'REST APIs expose a separate endpoint for each resource, while GraphQL uses a single endpoint where clients can specify exactly what data they need. REST often leads to over-fetching or under-fetching of data, while GraphQL allows clients to request only the data they need.',\n            tips: 'Discuss the pros and cons of each approach and when you might choose one over the other.'\n          },\n          {\n            id: 2,\n            question: 'How would you design a database schema for a social media platform?',\n            category: 'System Design',\n            difficulty: 'Hard',\n            expectedAnswer: 'A social media platform database would typically include tables for users, posts, comments, likes, friendships/follows, notifications, and messages. Consider relationships, indexing, and scalability concerns.',\n            tips: 'Discuss both relational and NoSQL approaches, and explain how you would handle scale issues like high read/write volumes.'\n          },\n          {\n            id: 3,\n            question: 'Tell me about a time when you had to learn a new technology quickly.',\n            category: 'Behavioral',\n            difficulty: 'Medium',\n            expectedAnswer: 'This question assesses your ability to adapt and learn quickly in a fast-paced environment.',\n            tips: 'Use the STAR method and focus on your learning process, not just the outcome.'\n          }\n        ],\n        sessions: []\n      },\n      {\n        id: 3,\n        title: 'Data Science Interview',\n        jobTitle: 'Data Scientist',\n        company: 'Analytics Insights Corp',\n        interviewType: 'Technical',\n        difficulty: 'Senior',\n        duration: 60,\n        questions: [\n          {\n            id: 1,\n            question: 'Explain the difference between supervised and unsupervised learning with examples.',\n            category: 'Technical',\n            difficulty: 'Medium',\n            expectedAnswer: 'Supervised learning uses labeled data to train models (e.g., classification, regression), while unsupervised learning finds patterns in unlabeled data (e.g., clustering, dimensionality reduction).',\n            tips: 'Provide specific algorithm examples for each type and real-world applications.'\n          },\n          {\n            id: 2,\n            question: 'How would you handle imbalanced datasets in classification problems?',\n            category: 'Technical',\n            difficulty: 'Hard',\n            expectedAnswer: 'Techniques include resampling methods (oversampling minority class or undersampling majority class), synthetic data generation (SMOTE), algorithm-level approaches (cost-sensitive learning), and ensemble methods.',\n            tips: 'Discuss the trade-offs of different approaches and how you would evaluate model performance on imbalanced data.'\n          },\n          {\n            id: 3,\n            question: 'Describe a data science project where you had to clean and preprocess messy data.',\n            category: 'Behavioral',\n            difficulty: 'Medium',\n            expectedAnswer: \"This question assesses your practical experience with data cleaning and preprocessing, which is often 80% of a data scientist's job.\",\n            tips: 'Detail specific techniques you used (handling missing values, outliers, feature engineering) and how they improved your model.'\n          },\n          {\n            id: 4,\n            question: 'Implement a function to detect outliers in a dataset using the IQR method.',\n            category: 'Coding',\n            difficulty: 'Medium',\n            expectedAnswer: 'The IQR (Interquartile Range) method identifies outliers as values below Q1 - 1.5*IQR or above Q3 + 1.5*IQR, where Q1 is the first quartile and Q3 is the third quartile.',\n            tips: 'Explain why you might choose IQR over other methods like z-score and discuss the limitations.'\n          }\n        ],\n        sessions: []\n      },\n      {\n        id: 4,\n        title: 'System Design Interview',\n        jobTitle: 'Senior Software Engineer',\n        company: 'ScaleTech Solutions',\n        interviewType: 'System Design',\n        difficulty: 'Senior',\n        duration: 60,\n        questions: [\n          {\n            id: 1,\n            question: 'Design a URL shortening service like TinyURL.',\n            category: 'System Design',\n            difficulty: 'Medium',\n            expectedAnswer: 'A URL shortener requires components for URL generation (hash function), storage (database for mapping short to long URLs), redirection service, and analytics. Consider scalability, availability, and potential bottlenecks.',\n            tips: 'Follow a structured approach: requirements clarification, system interface definition, data model, algorithm design, scaling considerations, and potential improvements.'\n          },\n          {\n            id: 2,\n            question: \"How would you design Twitter's newsfeed functionality?\",\n            category: 'System Design',\n            difficulty: 'Hard',\n            expectedAnswer: \"Twitter's newsfeed requires handling high write volume (tweets), complex read patterns (timeline generation), and real-time updates. Consider fan-out approaches (push vs. pull), caching strategies, and database choices.\",\n            tips: 'Discuss trade-offs between different approaches and how you would handle scale issues like celebrity users with millions of followers.'\n          },\n          {\n            id: 3,\n            question: 'Design a distributed cache system.',\n            category: 'System Design',\n            difficulty: 'Hard',\n            expectedAnswer: 'A distributed cache system needs to address data partitioning, replication, consistency, fault tolerance, eviction policies, and cache invalidation strategies.',\n            tips: 'Reference existing systems like Redis or Memcached and explain how you would handle specific challenges like hot keys or cache stampedes.'\n          }\n        ],\n        sessions: []\n      },\n      {\n        id: 5,\n        title: 'Behavioral Interview',\n        jobTitle: 'Product Manager',\n        company: 'User-First Products',\n        interviewType: 'Behavioral',\n        difficulty: 'Mid-Level',\n        duration: 45,\n        questions: [\n          {\n            id: 1,\n            question: 'Tell me about a time when you had to make a difficult decision with limited information.',\n            category: 'Behavioral',\n            difficulty: 'Medium',\n            expectedAnswer: 'This question assesses your decision-making process, risk assessment, and judgment under uncertainty.',\n            tips: 'Use the STAR method and focus on your analytical approach, how you gathered what information you could, and how you evaluated options.'\n          },\n          {\n            id: 2,\n            question: 'Describe a situation where you had to work with a difficult team member or stakeholder.',\n            category: 'Behavioral',\n            difficulty: 'Medium',\n            expectedAnswer: 'This question evaluates your interpersonal skills, conflict resolution abilities, and emotional intelligence.',\n            tips: 'Focus on how you maintained professionalism, sought to understand their perspective, and worked toward a positive outcome.'\n          },\n          {\n            id: 3,\n            question: 'Give an example of a time when you failed to meet a goal or deadline. How did you handle it?',\n            category: 'Behavioral',\n            difficulty: 'Hard',\n            expectedAnswer: 'This question assesses your accountability, resilience, and ability to learn from failures.',\n            tips: 'Be honest about the failure, take responsibility, and emphasize what you learned and how you applied those lessons later.'\n          },\n          {\n            id: 4,\n            question: 'Tell me about a time when you had to influence someone without having direct authority over them.',\n            category: 'Behavioral',\n            difficulty: 'Hard',\n            expectedAnswer: \"This question evaluates your leadership, persuasion skills, and ability to build consensus.\",\n            tips: \"Focus on how you built relationships, understood others' motivations, and communicated effectively to achieve buy-in.\"\n          }\n        ],\n        sessions: []\n      }\n    ];\n\n    setInterviews(mockInterviews);\n  };\n\n  // Request camera permission\n  const requestCameraPermission = async () => {\n    try {\n      // Request both video and audio permissions\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: { ideal: 1280 },\n          height: { ideal: 720 },\n          facingMode: \"user\"\n        },\n        audio: true\n      });\n\n      // Save the stream reference\n      streamRef.current = stream;\n\n      // Set the stream as the video source\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n\n        // Ensure video plays when ready\n        videoRef.current.onloadedmetadata = () => {\n          videoRef.current.play().catch(e => {\n            console.error('Error playing video:', e);\n          });\n        };\n      }\n\n      setCameraPermission('granted');\n      console.log('Camera permission granted and stream connected');\n      return true;\n    } catch (err) {\n      console.error('Error accessing camera:', err);\n      setCameraPermission('denied');\n      alert('Camera access is required for the interview preparation. Please allow camera access and try again.');\n      return false;\n    }\n  };\n\n  // Start interview session\n  const startInterviewSession = async (interview) => {\n    const hasPermission = cameraPermission === 'granted' || await requestCameraPermission();\n    if (!hasPermission) {\n      alert('Camera permission is required for the interview session.');\n      return;\n    }\n\n    setCurrentInterview(interview);\n    setCurrentQuestion(interview.questions[0]);\n    setQuestionIndex(0);\n    setSessionInProgress(true);\n    setActiveTab('session');\n    setFeedback(null);\n  };\n\n  // End interview session\n  const endInterviewSession = () => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n    }\n    setSessionInProgress(false);\n    setIsRecording(false);\n    setCurrentInterview(null);\n    setCurrentQuestion(null);\n    setActiveTab('dashboard');\n\n    // Exit fullscreen if enabled\n    if (isFullScreen) {\n      exitFullScreen();\n    }\n\n    // Disable anti-cheating mode\n    if (antiCheatingEnabled) {\n      disableAntiCheating();\n    }\n\n    // Stop battle mode if active\n    if (battleMode) {\n      endBattleMode();\n    }\n\n    // Stop practice mode if active\n    if (practiceMode) {\n      endPracticeMode();\n    }\n  };\n\n  // Anti-cheating functions\n  const enableAntiCheating = () => {\n    setAntiCheatingEnabled(true);\n    setCheatingDetected(false);\n    setCheatingWarnings(0);\n    setCheatingLogs([]);\n\n    // Disable copy-paste\n    document.addEventListener('copy', preventCopyPaste);\n    document.addEventListener('paste', preventCopyPaste);\n    document.addEventListener('cut', preventCopyPaste);\n\n    // Monitor for screen sharing\n    if (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n      monitorScreenSharing();\n    }\n\n    // Monitor for tab visibility changes (switching tabs)\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n\n    // Log anti-cheating enabled\n    addCheatingLog('Anti-cheating mode enabled');\n\n    // Enter fullscreen mode\n    enterFullScreen();\n  };\n\n  const disableAntiCheating = () => {\n    setAntiCheatingEnabled(false);\n\n    // Re-enable copy-paste\n    document.removeEventListener('copy', preventCopyPaste);\n    document.removeEventListener('paste', preventCopyPaste);\n    document.removeEventListener('cut', preventCopyPaste);\n\n    // Stop monitoring tab visibility\n    document.removeEventListener('visibilitychange', handleVisibilityChange);\n\n    // Log anti-cheating disabled\n    addCheatingLog('Anti-cheating mode disabled');\n  };\n\n  const preventCopyPaste = (e) => {\n    e.preventDefault();\n    detectCheating('Copy-paste attempt detected');\n    return false;\n  };\n\n  const monitorScreenSharing = () => {\n    // This is a simplified version - in a real implementation,\n    // you would need a more sophisticated approach\n    window.addEventListener('blur', () => {\n      detectCheating('Possible screen sharing detected (window lost focus)');\n    });\n  };\n\n  const handleVisibilityChange = () => {\n    if (document.hidden) {\n      detectCheating('Tab switching detected');\n    }\n  };\n\n  const detectCheating = (reason) => {\n    setCheatingDetected(true);\n    setCheatingWarnings(prev => prev + 1);\n    addCheatingLog(reason);\n\n    // Alert the user\n    alert(`Warning: ${reason}. This activity is not allowed during the interview.`);\n\n    // If too many warnings, end the session\n    if (cheatingWarnings >= 2) {\n      alert('Too many violations detected. The interview session will be terminated.');\n      endInterviewSession();\n    }\n  };\n\n  const addCheatingLog = (message) => {\n    const log = {\n      timestamp: new Date().toISOString(),\n      message\n    };\n    setCheatingLogs(prev => [...prev, log]);\n  };\n\n  // Fullscreen functions\n  const enterFullScreen = () => {\n    const element = document.documentElement;\n\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    }\n\n    setIsFullScreen(true);\n\n    // Add event listener for fullscreen change\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    document.addEventListener('webkitfullscreenchange', handleFullscreenChange);\n    document.addEventListener('mozfullscreenchange', handleFullscreenChange);\n    document.addEventListener('MSFullscreenChange', handleFullscreenChange);\n  };\n\n  const exitFullScreen = () => {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n\n    setIsFullScreen(false);\n\n    // Remove event listeners\n    document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    document.removeEventListener('webkitfullscreenchange', handleFullscreenChange);\n    document.removeEventListener('mozfullscreenchange', handleFullscreenChange);\n    document.removeEventListener('MSFullscreenChange', handleFullscreenChange);\n  };\n\n  const handleFullscreenChange = () => {\n    const isCurrentlyFullscreen =\n      document.fullscreenElement ||\n      document.webkitFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.msFullscreenElement;\n\n    if (!isCurrentlyFullscreen && isFullScreen && antiCheatingEnabled) {\n      detectCheating('Fullscreen mode exited');\n      // Try to re-enter fullscreen\n      setTimeout(() => {\n        enterFullScreen();\n      }, 1000);\n    }\n  };\n\n  // Start recording\n  const startRecording = () => {\n    setIsRecording(true);\n    // In a real implementation, this would start recording the video\n    console.log('Recording started');\n  };\n\n  // Stop recording and analyze\n  const stopRecordingAndAnalyze = () => {\n    setIsRecording(false);\n    setLoading(true);\n\n    // In a real implementation, this would stop recording and send the video for analysis\n    // For now, we'll simulate the analysis with a timeout\n    setTimeout(() => {\n      // Mock feedback\n      const mockFeedback = {\n        overallScore: Math.floor(Math.random() * 30) + 70, // 70-100\n        technicalAccuracy: Math.floor(Math.random() * 30) + 70,\n        communicationScore: Math.floor(Math.random() * 30) + 70,\n        confidenceScore: Math.floor(Math.random() * 30) + 70,\n        bodyLanguageScore: Math.floor(Math.random() * 30) + 70,\n        strengths: [\n          'Clear explanation of technical concepts',\n          'Good problem-solving approach',\n          'Maintained good eye contact throughout'\n        ],\n        areasForImprovement: [\n          'Could provide more specific examples',\n          'Reduce use of filler words like \"um\" and \"like\"',\n          'Consider more concise answers to behavioral questions'\n        ],\n        detailedFeedback: [\n          {\n            timestamp: 45,\n            feedback: 'Excellent explanation of the algorithm',\n            category: 'Technical',\n            severity: 'Positive'\n          },\n          {\n            timestamp: 120,\n            feedback: 'Consider maintaining better posture here',\n            category: 'Body Language',\n            severity: 'Suggestion'\n          },\n          {\n            timestamp: 180,\n            feedback: 'Too many filler words in this response',\n            category: 'Communication',\n            severity: 'Minor Issue'\n          }\n        ]\n      };\n\n      setFeedback(mockFeedback);\n      setLoading(false);\n    }, 2000);\n  };\n\n  // Move to next question\n  const nextQuestion = () => {\n    if (currentInterview && questionIndex < currentInterview.questions.length - 1) {\n      setQuestionIndex(questionIndex + 1);\n      setCurrentQuestion(currentInterview.questions[questionIndex + 1]);\n      setFeedback(null);\n\n      // Update battle score if in battle mode\n      if (battleMode && feedback) {\n        updateBattleScore();\n      }\n\n      // Capture activity if in practice mode\n      if (practiceMode) {\n        captureActivity();\n      }\n    } else {\n      // End of interview\n      if (battleMode) {\n        finishBattle();\n      } else if (practiceMode) {\n        endPracticeMode();\n      } else {\n        endInterviewSession();\n      }\n    }\n  };\n\n  // 1v1 Battle mode functions\n  const startBattleMode = async (interview) => {\n    // Request camera permission first\n    const hasPermission = cameraPermission === 'granted' || await requestCameraPermission();\n    if (!hasPermission) {\n      alert('Camera permission is required for battle mode.');\n      return;\n    }\n\n    setBattleMode(true);\n    setBattleScore({ user: 0, opponent: 0 });\n    setBattleTimer(0);\n\n    // Find a mock opponent\n    const mockOpponents = [\n      { id: 1, name: 'Alex Chen', avatar: 'avatar1.jpg', level: 'Senior', specialty: 'Frontend' },\n      { id: 2, name: 'Jordan Smith', avatar: 'avatar2.jpg', level: 'Mid-Level', specialty: 'Backend' },\n      { id: 3, name: 'Taylor Kim', avatar: 'avatar3.jpg', level: 'Senior', specialty: 'Full Stack' }\n    ];\n\n    // Randomly select an opponent\n    const randomOpponent = mockOpponents[Math.floor(Math.random() * mockOpponents.length)];\n    setOpponent(randomOpponent);\n\n    // Start battle timer\n    const interval = setInterval(() => {\n      setBattleTimer(prev => prev + 1);\n    }, 1000);\n\n    setBattleTimerInterval(interval);\n\n    // Enable anti-cheating for battle mode\n    enableAntiCheating();\n\n    // Start the interview session with the selected interview\n    setCurrentInterview(interview);\n    setCurrentQuestion(interview.questions[0]);\n    setQuestionIndex(0);\n    setSessionInProgress(true);\n    setActiveTab('session');\n    setFeedback(null);\n  };\n\n  const endBattleMode = () => {\n    setBattleMode(false);\n    setOpponent(null);\n\n    // Clear battle timer\n    if (battleTimerInterval) {\n      clearInterval(battleTimerInterval);\n      setBattleTimerInterval(null);\n    }\n\n    // Disable anti-cheating\n    if (antiCheatingEnabled) {\n      disableAntiCheating();\n    }\n  };\n\n  const updateBattleScore = () => {\n    // Calculate score based on feedback\n    const userScore = Math.round((\n      feedback.overallScore +\n      feedback.technicalAccuracy +\n      feedback.communicationScore +\n      feedback.confidenceScore\n    ) / 4);\n\n    // Generate a random opponent score that's competitive\n    const minOpponentScore = Math.max(userScore - 15, 50);\n    const maxOpponentScore = Math.min(userScore + 15, 100);\n    const opponentScore = Math.floor(Math.random() * (maxOpponentScore - minOpponentScore + 1)) + minOpponentScore;\n\n    // Update the battle score\n    setBattleScore(prev => ({\n      user: prev.user + userScore,\n      opponent: prev.opponent + opponentScore\n    }));\n\n    // Show the score comparison\n    alert(`Question ${questionIndex + 1} scores:\\nYou: ${userScore}\\n${opponent.name}: ${opponentScore}`);\n  };\n\n  const finishBattle = () => {\n    // Determine the winner\n    const { user, opponent: opponentScore } = battleScore;\n    let resultMessage;\n\n    if (user > opponentScore) {\n      resultMessage = `Congratulations! You won the battle against ${opponent.name}!\\nFinal Score: ${user} - ${opponentScore}`;\n    } else if (user < opponentScore) {\n      resultMessage = `You lost the battle against ${opponent.name}.\\nFinal Score: ${user} - ${opponentScore}\\nKeep practicing!`;\n    } else {\n      resultMessage = `The battle ended in a tie!\\nFinal Score: ${user} - ${opponentScore}`;\n    }\n\n    // Show the final result\n    alert(resultMessage);\n\n    // End the battle mode\n    endBattleMode();\n\n    // End the interview session\n    endInterviewSession();\n  };\n\n  // Practice mode functions\n  const startPracticeMode = async (interview) => {\n    // Request camera permission first\n    const hasPermission = cameraPermission === 'granted' || await requestCameraPermission();\n    if (!hasPermission) {\n      alert('Camera permission is required for practice mode.');\n      return;\n    }\n\n    setPracticeMode(true);\n    setActivityCapture([]);\n    setPracticeTimer(0);\n\n    // Start practice timer\n    const interval = setInterval(() => {\n      setPracticeTimer(prev => prev + 1);\n\n      // Capture activity every 30 seconds\n      if (practiceTimer % 30 === 0 && practiceTimer > 0) {\n        captureActivity();\n      }\n    }, 1000);\n\n    setPracticeTimerInterval(interval);\n\n    // Enable anti-cheating if set in settings\n    if (antiCheatingEnabled) {\n      enableAntiCheating();\n    }\n\n    // Start the interview session with the selected interview\n    setCurrentInterview(interview);\n    setCurrentQuestion(interview.questions[0]);\n    setQuestionIndex(0);\n    setSessionInProgress(true);\n    setActiveTab('session');\n    setFeedback(null);\n  };\n\n  const endPracticeMode = () => {\n    setPracticeMode(false);\n\n    // Clear practice timer\n    if (practiceTimerInterval) {\n      clearInterval(practiceTimerInterval);\n      setPracticeTimerInterval(null);\n    }\n\n    // Generate practice report\n    generatePracticeReport();\n\n    // End the interview session\n    endInterviewSession();\n  };\n\n  const captureActivity = () => {\n    // In a real implementation, this would capture screenshots, typing activity, etc.\n    // For this demo, we'll just log the timestamp and question\n\n    const activity = {\n      timestamp: new Date().toISOString(),\n      questionIndex,\n      question: currentQuestion?.question,\n      isRecording,\n      elapsedTime: practiceTimer\n    };\n\n    setActivityCapture(prev => [...prev, activity]);\n\n    // Take a \"screenshot\" (in a real implementation)\n    console.log(`Activity captured at ${formatTime(practiceTimer)}`);\n  };\n\n  const generatePracticeReport = () => {\n    // In a real implementation, this would generate a comprehensive report\n    // For this demo, we'll just show a simple alert\n\n    const totalTime = formatTime(practiceTimer);\n    const questionsAttempted = activityCapture.filter(a => a.isRecording).length;\n\n    alert(`Practice Session Report:\n    - Total practice time: ${totalTime}\n    - Questions attempted: ${questionsAttempted}\n    - Activity captures: ${activityCapture.length}\n\n    Keep practicing to improve your interview skills!`);\n  };\n\n  // Helper function to format time (seconds to MM:SS)\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  // Render dashboard tab\n  const renderDashboard = () => (\n    <div className=\"interview-dashboard\">\n      <h2>AI Interview Preparation</h2>\n      <p className=\"dashboard-description\">\n        Practice your interview skills with our AI-powered interview simulator.\n        Get real-time feedback on your responses, body language, and communication style.\n      </p>\n\n      <div className=\"interview-list\">\n        <h3>Available Interview Templates</h3>\n        {interviews.map(interview => (\n          <div key={interview.id} className=\"interview-card\">\n            <div className=\"interview-card-header\">\n              <h4>{interview.title}</h4>\n              <span className={`interview-type ${interview.interviewType.toLowerCase()}`}>\n                {interview.interviewType}\n              </span>\n            </div>\n            <div className=\"interview-card-details\">\n              <p><strong>Position:</strong> {interview.jobTitle}</p>\n              <p><strong>Company:</strong> {interview.company}</p>\n              <p><strong>Difficulty:</strong> {interview.difficulty}</p>\n              <p><strong>Duration:</strong> {interview.duration} minutes</p>\n              <p><strong>Questions:</strong> {interview.questions.length}</p>\n            </div>\n            <div className=\"interview-card-actions\">\n              <div className=\"action-buttons\">\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={() => startInterviewSession(interview)}\n                >\n                  Start Practice\n                </button>\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={() => startPracticeMode(interview)}\n                >\n                  Practice with Camera\n                </button>\n                <button\n                  className=\"btn btn-battle\"\n                  onClick={() => startBattleMode(interview)}\n                >\n                  1v1 Battle\n                </button>\n              </div>\n              {antiCheatingEnabled && (\n                <div className=\"anti-cheat-badge\">\n                  <span className=\"badge\">Anti-Cheat Enabled</span>\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  // Render interview session tab\n  const renderSession = () => (\n    <div className=\"interview-session\">\n      {currentQuestion && (\n        <>\n          <div className=\"session-header\">\n            <h2>{currentInterview.title}</h2>\n            <div className=\"question-counter\">\n              Question {questionIndex + 1} of {currentInterview.questions.length}\n            </div>\n          </div>\n\n          {/* Battle Mode Info */}\n          {battleMode && opponent && (\n            <div className=\"battle-info\">\n              <div className=\"battle-opponent\">\n                <div className=\"opponent-avatar\"></div>\n                <div className=\"opponent-info\">\n                  <div className=\"opponent-name\">{opponent.name}</div>\n                  <div className=\"opponent-level\">{opponent.level} {opponent.specialty}</div>\n                </div>\n              </div>\n              <div className=\"battle-score\">\n                <div>You: {battleScore.user}</div>\n                <div>Opponent: {battleScore.opponent}</div>\n              </div>\n              <div className=\"battle-timer\">\n                Time: {formatTime(battleTimer)}\n              </div>\n            </div>\n          )}\n\n          {/* Practice Mode Info */}\n          {practiceMode && (\n            <div className=\"practice-info\">\n              <div className=\"practice-timer\">\n                Practice Time: {formatTime(practiceTimer)}\n              </div>\n              <div className=\"practice-captures\">\n                Activity Captures: {activityCapture.length}\n              </div>\n            </div>\n          )}\n\n          <div className=\"session-content\">\n            <div className=\"video-container\">\n              <video\n                ref={videoRef}\n                autoPlay\n                muted={false}\n                className={isRecording ? 'recording' : ''}\n              />\n              {isRecording && <div className=\"recording-indicator\">Recording</div>}\n              {practiceMode && <div className=\"activity-capture-indicator\">Activity Capture</div>}\n              {antiCheatingEnabled && <div className=\"anti-cheat-badge badge\">Anti-Cheat Enabled</div>}\n            </div>\n\n            <div className=\"question-container\">\n              <div className=\"question-card\">\n                <div className=\"question-category\">\n                  {currentQuestion.category} - {currentQuestion.difficulty}\n                </div>\n                <h3 className=\"question-text\">{currentQuestion.question}</h3>\n\n                <div className=\"question-actions\">\n                  {!isRecording ? (\n                    <button\n                      className=\"btn btn-primary\"\n                      onClick={startRecording}\n                      disabled={loading}\n                    >\n                      Start Answering\n                    </button>\n                  ) : (\n                    <button\n                      className=\"btn btn-danger\"\n                      onClick={stopRecordingAndAnalyze}\n                      disabled={loading}\n                    >\n                      Stop Recording\n                    </button>\n                  )}\n                </div>\n              </div>\n\n              {loading && (\n                <div className=\"loading-container\">\n                  <div className=\"loading-spinner\"></div>\n                  <p>Analyzing your response...</p>\n                </div>\n              )}\n\n              {feedback && (\n                <div className=\"feedback-container\">\n                  <h3>AI Feedback</h3>\n\n                  <div className=\"feedback-scores\">\n                    <div className=\"feedback-score\">\n                      <div className=\"score-label\">Overall</div>\n                      <div className=\"score-value\">{feedback.overallScore}</div>\n                    </div>\n                    <div className=\"feedback-score\">\n                      <div className=\"score-label\">Technical</div>\n                      <div className=\"score-value\">{feedback.technicalAccuracy}</div>\n                    </div>\n                    <div className=\"feedback-score\">\n                      <div className=\"score-label\">Communication</div>\n                      <div className=\"score-value\">{feedback.communicationScore}</div>\n                    </div>\n                    <div className=\"feedback-score\">\n                      <div className=\"score-label\">Confidence</div>\n                      <div className=\"score-value\">{feedback.confidenceScore}</div>\n                    </div>\n                    <div className=\"feedback-score\">\n                      <div className=\"score-label\">Body Language</div>\n                      <div className=\"score-value\">{feedback.bodyLanguageScore}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"feedback-details\">\n                    <div className=\"feedback-section\">\n                      <h4>Strengths</h4>\n                      <ul>\n                        {feedback.strengths.map((strength, index) => (\n                          <li key={index}>{strength}</li>\n                        ))}\n                      </ul>\n                    </div>\n\n                    <div className=\"feedback-section\">\n                      <h4>Areas for Improvement</h4>\n                      <ul>\n                        {feedback.areasForImprovement.map((area, index) => (\n                          <li key={index}>{area}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n\n                  <button\n                    className=\"btn btn-primary next-question-btn\"\n                    onClick={nextQuestion}\n                  >\n                    {questionIndex < currentInterview.questions.length - 1\n                      ? 'Next Question'\n                      : 'Finish Interview'}\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <button\n            className=\"btn btn-secondary end-session-btn\"\n            onClick={endInterviewSession}\n          >\n            End Session\n          </button>\n        </>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"interview-prep-container\">\n      {!sessionInProgress ? (\n        <div className=\"interview-tabs\">\n          <button\n            className={activeTab === 'dashboard' ? 'active' : ''}\n            onClick={() => setActiveTab('dashboard')}\n          >\n            Dashboard\n          </button>\n          <button\n            className={activeTab === 'history' ? 'active' : ''}\n            onClick={() => setActiveTab('history')}\n          >\n            History\n          </button>\n          <button\n            className={activeTab === 'settings' ? 'active' : ''}\n            onClick={() => setActiveTab('settings')}\n          >\n            Settings\n          </button>\n        </div>\n      ) : null}\n\n      <div className=\"interview-content\">\n        {activeTab === 'dashboard' && !sessionInProgress && renderDashboard()}\n        {activeTab === 'history' && !sessionInProgress && (\n          <div className=\"interview-history\">\n            <h2>Interview History</h2>\n            <p>Your past interview sessions will appear here.</p>\n          </div>\n        )}\n        {activeTab === 'settings' && !sessionInProgress && (\n          <div className=\"interview-settings\">\n            <h2>Settings</h2>\n            <p className=\"settings-description\">Customize your interview experience and security settings.</p>\n\n            <div className=\"settings-section\">\n              <h3>Security Settings</h3>\n\n              <div className=\"setting-item\">\n                <div className=\"setting-info\">\n                  <h4>Anti-Cheating Mode</h4>\n                  <p>Prevents copy-paste, screen sharing, and tab switching during interviews and battles.</p>\n                </div>\n                <div className=\"setting-control\">\n                  <label className=\"toggle-switch\">\n                    <input\n                      type=\"checkbox\"\n                      checked={antiCheatingEnabled}\n                      onChange={() => {\n                        if (antiCheatingEnabled) {\n                          disableAntiCheating();\n                        } else {\n                          enableAntiCheating();\n                        }\n                      }}\n                    />\n                    <span className=\"toggle-slider\"></span>\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"setting-item\">\n                <div className=\"setting-info\">\n                  <h4>Full Screen Mode</h4>\n                  <p>Forces the application to run in full screen during interviews and battles.</p>\n                </div>\n                <div className=\"setting-control\">\n                  <label className=\"toggle-switch\">\n                    <input\n                      type=\"checkbox\"\n                      checked={isFullScreen}\n                      onChange={() => {\n                        if (isFullScreen) {\n                          exitFullScreen();\n                        } else {\n                          enterFullScreen();\n                        }\n                      }}\n                    />\n                    <span className=\"toggle-slider\"></span>\n                  </label>\n                </div>\n              </div>\n\n              {antiCheatingEnabled && (\n                <div className=\"anti-cheat-logs\">\n                  <h4>Anti-Cheating Logs</h4>\n                  {cheatingLogs.length > 0 ? (\n                    <ul className=\"logs-list\">\n                      {cheatingLogs.map((log, index) => (\n                        <li key={index} className=\"log-item\">\n                          <span className=\"log-time\">{new Date(log.timestamp).toLocaleTimeString()}</span>\n                          <span className=\"log-message\">{log.message}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  ) : (\n                    <p>No logs recorded yet.</p>\n                  )}\n                </div>\n              )}\n            </div>\n\n            <div className=\"settings-section\">\n              <h3>Camera Settings</h3>\n\n              <div className=\"setting-item\">\n                <div className=\"setting-info\">\n                  <h4>Camera Test</h4>\n                  <p>Test your camera before starting an interview.</p>\n                </div>\n                <div className=\"setting-control\">\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={requestCameraPermission}\n                  >\n                    Test Camera\n                  </button>\n                </div>\n              </div>\n\n              {cameraPermission === 'granted' && (\n                <div className=\"camera-preview-container\">\n                  <video\n                    ref={videoRef}\n                    autoPlay\n                    muted\n                    className=\"camera-preview\"\n                  />\n                  <p className=\"camera-status success\">Camera is working properly!</p>\n                </div>\n              )}\n\n              {cameraPermission === 'denied' && (\n                <div className=\"camera-error\">\n                  <p className=\"camera-status error\">Camera access denied. Please check your browser settings.</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        {(activeTab === 'session' || sessionInProgress) && renderSession()}\n      </div>\n    </div>\n  );\n}\n\nexport default InterviewPrep;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}